
#include "Math/IFunction.h"
#include "Math/Integrator.h"	
#include "main.h"

/*
	Macro to compute the integration of F_x_i (distribution separated according to 20 final parameters)
*/

vector <double> IntegrateF_x_i(int Nmax = 100000,double relError = 0.0001);


class FunctionF_x_i : public ROOT::Math::IBaseFunctionMultiDim { 

public: 

  FunctionF_x_i(): computedParam(FormulaParam::A2) {  }
  FunctionF_x_i(FormulaParam::FormulaParam parameter): computedParam(parameter) {  }
	void SetParam(FormulaParam::FormulaParam newParam) {this->computedParam = newParam;}
	unsigned int NDim ()const{return 2;}
	ROOT::Math::IBaseFunctionMultiDim * Clone () const {return new FunctionF_x_i(computedParam);}
	double dF_x_i(double s12, double s23) const ;
private: 
	FormulaParam::FormulaParam computedParam;

  double DoEval (const double *sij)const{
	  if (IsInDalitz(s,m1,m2,m3,sij[0],sij[1]))
		  return this->dF_x_i(sij[0],  sij[1]);
	  else 
		  return 0;
  }

};




double FunctionF_x_i::dF_x_i(double s12, double s23) const 
{
	/*
		Computes f_x_i for computedParam
		Implementation is done with a global computedParam to make it easier to integrate using premade functions
	*/
	//Variables used in computation
	double s13 = s + mp*mp + mK*mK + mpi*mpi - s23 - s12;
    double eprot = (s-s23 + mp*mp) / (2*sqrt(s));
    double epi = (s-s12 + mpi*mpi) / (2*sqrt(s));
    double ppp = sqrt(eprot*eprot-m1*m1); //|\vec{p_1}|
    double kkk = sqrt(epi*epi-m3*m3); //|\vec{p_3}|
    double psi = acos((epi*eprot + (mp*mp + mpi*mpi - s13)/2)/(ppp*kkk));
    

    double eK = (s-s13 + mK*mK) / (2*sqrt(s));
    
    double eDel = eprot + epi;
    double eLam = eprot + eK;
    double eKst = epi + eK;

    switch (this->computedParam)
    {
    	case FormulaParam::A2://f1
	    	return -BW2(s13,mDel,GDel)*((pow(mLamC,3)*(-16*pow(epi,6)*pow(eprot,3) - 96*pow(epi,5)*pow(eprot,4) - 240*pow(epi,4)*pow(eprot,5) - 320*pow(epi,3)*pow(eprot,6) - 240*pow(epi,2)*pow(eprot,7) - 96*epi*pow(eprot,8) - 16*pow(eprot,9) + 16*pow(epi,5)*pow(eprot,3)*mDel + 80*pow(epi,4)*pow(eprot,4)*mDel + 160*pow(epi,3)*pow(eprot,5)*mDel + 160*pow(epi,2)*pow(eprot,6)*mDel + 80*epi*pow(eprot,7)*mDel + 16*pow(eprot,8)*mDel - 20*pow(epi,4)*pow(eprot,3)*pow(mDel,2) - 80*pow(epi,3)*pow(eprot,4)*pow(mDel,2) - 120*pow(epi,2)*pow(eprot,5)*pow(mDel,2) - 80*epi*pow(eprot,6)*pow(mDel,2) - 20*pow(eprot,7)*pow(mDel,2) - 16*pow(epi,5)*pow(eprot,2)*mDel*mp - 80*pow(epi,4)*pow(eprot,3)*mDel*mp - 160*pow(epi,3)*pow(eprot,4)*mDel*mp - 160*pow(epi,2)*pow(eprot,5)*mDel*mp - 80*epi*pow(eprot,6)*mDel*mp - 16*pow(eprot,7)*mDel*mp + 8*pow(epi,4)*pow(eprot,2)*pow(mDel,2)*mp + 32*pow(epi,3)*pow(eprot,3)*pow(mDel,2)*mp + 48*pow(epi,2)*pow(eprot,4)*pow(mDel,2)*mp + 32*epi*pow(eprot,5)*pow(mDel,2)*mp + 8*pow(eprot,6)*pow(mDel,2)*mp + 12*pow(epi,4)*eprot*pow(mDel,2)*pow(mp,2) + 48*pow(epi,3)*pow(eprot,2)*pow(mDel,2)*pow(mp,2) + 72*pow(epi,2)*pow(eprot,3)*pow(mDel,2)*pow(mp,2) + 48*epi*pow(eprot,4)*pow(mDel,2)*pow(mp,2) + 12*pow(eprot,5)*pow(mDel,2)*pow(mp,2) + 48*pow(epi,5)*pow(eprot,2)*pow(ppp,2) + 240*pow(epi,4)*pow(eprot,3)*pow(ppp,2) + 480*pow(epi,3)*pow(eprot,4)*pow(ppp,2) + 480*pow(epi,2)*pow(eprot,5)*pow(ppp,2) + 240*epi*pow(eprot,6)*pow(ppp,2) + 48*pow(eprot,7)*pow(ppp,2) - 24*pow(epi,4)*eprot*pow(kkk,2)*pow(ppp,2) - 96*pow(epi,3)*pow(eprot,2)*pow(kkk,2)*pow(ppp,2) - 144*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*pow(ppp,2) - 96*epi*pow(eprot,4)*pow(kkk,2)*pow(ppp,2) - 24*pow(eprot,5)*pow(kkk,2)*pow(ppp,2) - 48*pow(epi,4)*pow(eprot,2)*mDel*pow(ppp,2) - 192*pow(epi,3)*pow(eprot,3)*mDel*pow(ppp,2) - 288*pow(epi,2)*pow(eprot,4)*mDel*pow(ppp,2) - 192*epi*pow(eprot,5)*mDel*pow(ppp,2) - 48*pow(eprot,6)*mDel*pow(ppp,2) + 24*pow(epi,3)*eprot*pow(kkk,2)*mDel*pow(ppp,2) + 72*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,2) + 72*epi*pow(eprot,3)*pow(kkk,2)*mDel*pow(ppp,2) + 24*pow(eprot,4)*pow(kkk,2)*mDel*pow(ppp,2) + 28*pow(epi,3)*pow(eprot,2)*pow(mDel,2)*pow(ppp,2) + 84*pow(epi,2)*pow(eprot,3)*pow(mDel,2)*pow(ppp,2) + 84*epi*pow(eprot,4)*pow(mDel,2)*pow(ppp,2) + 28*pow(eprot,5)*pow(mDel,2)*pow(ppp,2) + 2*pow(epi,2)*eprot*pow(kkk,2)*pow(mDel,2)*pow(ppp,2) + 4*epi*pow(eprot,2)*pow(kkk,2)*pow(mDel,2)*pow(ppp,2) + 2*pow(eprot,3)*pow(kkk,2)*pow(mDel,2)*pow(ppp,2) + 32*pow(epi,4)*eprot*mDel*mp*pow(ppp,2) + 128*pow(epi,3)*pow(eprot,2)*mDel*mp*pow(ppp,2) + 192*pow(epi,2)*pow(eprot,3)*mDel*mp*pow(ppp,2) + 128*epi*pow(eprot,4)*mDel*mp*pow(ppp,2) + 32*pow(eprot,5)*mDel*mp*pow(ppp,2) - 8*pow(epi,3)*pow(kkk,2)*mDel*mp*pow(ppp,2) - 24*pow(epi,2)*eprot*pow(kkk,2)*mDel*mp*pow(ppp,2) - 24*epi*pow(eprot,2)*pow(kkk,2)*mDel*mp*pow(ppp,2) - 8*pow(eprot,3)*pow(kkk,2)*mDel*mp*pow(ppp,2) - 16*pow(epi,3)*eprot*pow(mDel,2)*mp*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,2)*pow(mDel,2)*mp*pow(ppp,2) - 48*epi*pow(eprot,3)*pow(mDel,2)*mp*pow(ppp,2) - 16*pow(eprot,4)*pow(mDel,2)*mp*pow(ppp,2) + 4*pow(epi,2)*pow(kkk,2)*pow(mDel,2)*mp*pow(ppp,2) + 8*epi*eprot*pow(kkk,2)*pow(mDel,2)*mp*pow(ppp,2) + 4*pow(eprot,2)*pow(kkk,2)*pow(mDel,2)*mp*pow(ppp,2) - 12*pow(epi,3)*pow(mDel,2)*pow(mp,2)*pow(ppp,2) - 36*pow(epi,2)*eprot*pow(mDel,2)*pow(mp,2)*pow(ppp,2) - 36*epi*pow(eprot,2)*pow(mDel,2)*pow(mp,2)*pow(ppp,2) - 12*pow(eprot,3)*pow(mDel,2)*pow(mp,2)*pow(ppp,2) - 48*pow(epi,4)*eprot*pow(ppp,4) - 192*pow(epi,3)*pow(eprot,2)*pow(ppp,4) - 288*pow(epi,2)*pow(eprot,3)*pow(ppp,4) - 192*epi*pow(eprot,4)*pow(ppp,4) - 48*pow(eprot,5)*pow(ppp,4) + 24*pow(epi,3)*pow(kkk,2)*pow(ppp,4) + 72*pow(epi,2)*eprot*pow(kkk,2)*pow(ppp,4) + 72*epi*pow(eprot,2)*pow(kkk,2)*pow(ppp,4) + 24*pow(eprot,3)*pow(kkk,2)*pow(ppp,4) + 48*pow(epi,3)*eprot*mDel*pow(ppp,4) + 144*pow(epi,2)*pow(eprot,2)*mDel*pow(ppp,4) + 144*epi*pow(eprot,3)*mDel*pow(ppp,4) + 48*pow(eprot,4)*mDel*pow(ppp,4) - 24*pow(epi,2)*pow(kkk,2)*mDel*pow(ppp,4) - 48*epi*eprot*pow(kkk,2)*mDel*pow(ppp,4) - 24*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,4) + 4*pow(epi,2)*eprot*pow(mDel,2)*pow(ppp,4) + 8*epi*pow(eprot,2)*pow(mDel,2)*pow(ppp,4) + 4*pow(eprot,3)*pow(mDel,2)*pow(ppp,4) - 18*epi*pow(kkk,2)*pow(mDel,2)*pow(ppp,4) - 18*eprot*pow(kkk,2)*pow(mDel,2)*pow(ppp,4) - 16*pow(epi,3)*mDel*mp*pow(ppp,4) - 48*pow(epi,2)*eprot*mDel*mp*pow(ppp,4) - 48*epi*pow(eprot,2)*mDel*mp*pow(ppp,4) - 16*pow(eprot,3)*mDel*mp*pow(ppp,4) + 8*pow(epi,2)*pow(mDel,2)*mp*pow(ppp,4) + 16*epi*eprot*pow(mDel,2)*mp*pow(ppp,4) + 8*pow(eprot,2)*pow(mDel,2)*mp*pow(ppp,4) + 16*pow(epi,3)*pow(ppp,6) + 48*pow(epi,2)*eprot*pow(ppp,6) + 48*epi*pow(eprot,2)*pow(ppp,6) + 16*pow(eprot,3)*pow(ppp,6) - 16*pow(epi,2)*mDel*pow(ppp,6) - 32*epi*eprot*mDel*pow(ppp,6) - 16*pow(eprot,2)*mDel*pow(ppp,6) - 12*epi*pow(mDel,2)*pow(ppp,6) - 12*eprot*pow(mDel,2)*pow(ppp,6) + 48*pow(epi,4)*pow(eprot,3)*s13 + 192*pow(epi,3)*pow(eprot,4)*s13 + 288*pow(epi,2)*pow(eprot,5)*s13 + 192*epi*pow(eprot,6)*s13 + 48*pow(eprot,7)*s13 - 28*pow(epi,3)*pow(eprot,3)*mDel*s13 - 84*pow(epi,2)*pow(eprot,4)*mDel*s13 - 84*epi*pow(eprot,5)*mDel*s13 - 28*pow(eprot,6)*mDel*s13 + 38*pow(epi,2)*pow(eprot,3)*pow(mDel,2)*s13 + 76*epi*pow(eprot,4)*pow(mDel,2)*s13 + 38*pow(eprot,5)*pow(mDel,2)*s13 + 8*pow(epi,4)*pow(eprot,2)*mp*s13 + 32*pow(epi,3)*pow(eprot,3)*mp*s13 + 48*pow(epi,2)*pow(eprot,4)*mp*s13 + 32*epi*pow(eprot,5)*mp*s13 + 8*pow(eprot,6)*mp*s13 + 28*pow(epi,3)*pow(eprot,2)*mDel*mp*s13 + 84*pow(epi,2)*pow(eprot,3)*mDel*mp*s13 + 84*epi*pow(eprot,4)*mDel*mp*s13 + 28*pow(eprot,5)*mDel*mp*s13 - 14*pow(epi,2)*pow(eprot,2)*pow(mDel,2)*mp*s13 - 28*epi*pow(eprot,3)*pow(mDel,2)*mp*s13 - 14*pow(eprot,4)*pow(mDel,2)*mp*s13 - 8*pow(epi,4)*eprot*pow(mp,2)*s13 - 32*pow(epi,3)*pow(eprot,2)*pow(mp,2)*s13 - 48*pow(epi,2)*pow(eprot,3)*pow(mp,2)*s13 - 32*epi*pow(eprot,4)*pow(mp,2)*s13 - 8*pow(eprot,5)*pow(mp,2)*s13 - 4*pow(epi,3)*eprot*mDel*pow(mp,2)*s13 - 12*pow(epi,2)*pow(eprot,2)*mDel*pow(mp,2)*s13 - 12*epi*pow(eprot,3)*mDel*pow(mp,2)*s13 - 4*pow(eprot,4)*mDel*pow(mp,2)*s13 - 22*pow(epi,2)*eprot*pow(mDel,2)*pow(mp,2)*s13 - 44*epi*pow(eprot,2)*pow(mDel,2)*pow(mp,2)*s13 - 22*pow(eprot,3)*pow(mDel,2)*pow(mp,2)*s13 + 4*pow(epi,3)*mDel*pow(mp,3)*s13 + 12*pow(epi,2)*eprot*mDel*pow(mp,3)*s13 + 12*epi*pow(eprot,2)*mDel*pow(mp,3)*s13 + 4*pow(eprot,3)*mDel*pow(mp,3)*s13 - 2*pow(epi,2)*pow(mDel,2)*pow(mp,3)*s13 - 4*epi*eprot*pow(mDel,2)*pow(mp,3)*s13 - 2*pow(eprot,2)*pow(mDel,2)*pow(mp,3)*s13 - 88*pow(epi,3)*pow(eprot,2)*pow(ppp,2)*s13 - 264*pow(epi,2)*pow(eprot,3)*pow(ppp,2)*s13 - 264*epi*pow(eprot,4)*pow(ppp,2)*s13 - 88*pow(eprot,5)*pow(ppp,2)*s13 + 16*pow(epi,2)*eprot*pow(kkk,2)*pow(ppp,2)*s13 + 32*epi*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s13 + 16*pow(eprot,3)*pow(kkk,2)*pow(ppp,2)*s13 + 60*pow(epi,2)*pow(eprot,2)*mDel*pow(ppp,2)*s13 + 120*epi*pow(eprot,3)*mDel*pow(ppp,2)*s13 + 60*pow(eprot,4)*mDel*pow(ppp,2)*s13 - 18*epi*eprot*pow(kkk,2)*mDel*pow(ppp,2)*s13 - 18*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,2)*s13 - 28*epi*pow(eprot,2)*pow(mDel,2)*pow(ppp,2)*s13 - 28*pow(eprot,3)*pow(mDel,2)*pow(ppp,2)*s13 - 5*eprot*pow(kkk,2)*pow(mDel,2)*pow(ppp,2)*s13 - 16*pow(epi,3)*eprot*mp*pow(ppp,2)*s13 - 48*pow(epi,2)*pow(eprot,2)*mp*pow(ppp,2)*s13 - 48*epi*pow(eprot,3)*mp*pow(ppp,2)*s13 - 16*pow(eprot,4)*mp*pow(ppp,2)*s13 + 4*pow(epi,2)*pow(kkk,2)*mp*pow(ppp,2)*s13 + 8*epi*eprot*pow(kkk,2)*mp*pow(ppp,2)*s13 + 4*pow(eprot,2)*pow(kkk,2)*mp*pow(ppp,2)*s13 - 32*pow(epi,2)*eprot*mDel*mp*pow(ppp,2)*s13 - 64*epi*pow(eprot,2)*mDel*mp*pow(ppp,2)*s13 - 32*pow(eprot,3)*mDel*mp*pow(ppp,2)*s13 + 2*epi*pow(kkk,2)*mDel*mp*pow(ppp,2)*s13 + 2*eprot*pow(kkk,2)*mDel*mp*pow(ppp,2)*s13 + 16*epi*eprot*pow(mDel,2)*mp*pow(ppp,2)*s13 + 16*pow(eprot,2)*pow(mDel,2)*mp*pow(ppp,2)*s13 - pow(kkk,2)*pow(mDel,2)*mp*pow(ppp,2)*s13 + 8*pow(epi,3)*pow(mp,2)*pow(ppp,2)*s13 + 24*pow(epi,2)*eprot*pow(mp,2)*pow(ppp,2)*s13 + 24*epi*pow(eprot,2)*pow(mp,2)*pow(ppp,2)*s13 + 8*pow(eprot,3)*pow(mp,2)*pow(ppp,2)*s13 + 4*pow(epi,2)*mDel*pow(mp,2)*pow(ppp,2)*s13 + 8*epi*eprot*mDel*pow(mp,2)*pow(ppp,2)*s13 + 4*pow(eprot,2)*mDel*pow(mp,2)*pow(ppp,2)*s13 + 12*epi*pow(mDel,2)*pow(mp,2)*pow(ppp,2)*s13 + 12*eprot*pow(mDel,2)*pow(mp,2)*pow(ppp,2)*s13 + 32*pow(epi,2)*eprot*pow(ppp,4)*s13 + 64*epi*pow(eprot,2)*pow(ppp,4)*s13 + 32*pow(eprot,3)*pow(ppp,4)*s13 + 12*epi*pow(kkk,2)*pow(ppp,4)*s13 + 12*eprot*pow(kkk,2)*pow(ppp,4)*s13 - 36*epi*eprot*mDel*pow(ppp,4)*s13 - 36*pow(eprot,2)*mDel*pow(ppp,4)*s13 + 6*pow(kkk,2)*mDel*pow(ppp,4)*s13 - 10*eprot*pow(mDel,2)*pow(ppp,4)*s13 + 8*pow(epi,2)*mp*pow(ppp,4)*s13 + 16*epi*eprot*mp*pow(ppp,4)*s13 + 8*pow(eprot,2)*mp*pow(ppp,4)*s13 + 4*epi*mDel*mp*pow(ppp,4)*s13 + 4*eprot*mDel*mp*pow(ppp,4)*s13 - 2*pow(mDel,2)*mp*pow(ppp,4)*s13 + 8*epi*pow(ppp,6)*s13 + 8*eprot*pow(ppp,6)*s13 + 4*mDel*pow(ppp,6)*s13 - 50*pow(epi,2)*pow(eprot,3)*pow(s13,2) - 100*epi*pow(eprot,4)*pow(s13,2) - 50*pow(eprot,5)*pow(s13,2) + 12*epi*pow(eprot,3)*mDel*pow(s13,2) + 12*pow(eprot,4)*mDel*pow(s13,2) - 18*pow(eprot,3)*pow(mDel,2)*pow(s13,2) - 14*pow(epi,2)*pow(eprot,2)*mp*pow(s13,2) - 28*epi*pow(eprot,3)*mp*pow(s13,2) - 14*pow(eprot,4)*mp*pow(s13,2) - 12*epi*pow(eprot,2)*mDel*mp*pow(s13,2) - 12*pow(eprot,3)*mDel*mp*pow(s13,2) + 6*pow(eprot,2)*pow(mDel,2)*mp*pow(s13,2) + 18*pow(epi,2)*eprot*pow(mp,2)*pow(s13,2) + 36*epi*pow(eprot,2)*pow(mp,2)*pow(s13,2) + 18*pow(eprot,3)*pow(mp,2)*pow(s13,2) + 4*epi*eprot*mDel*pow(mp,2)*pow(s13,2) + 4*pow(eprot,2)*mDel*pow(mp,2)*pow(s13,2) + 10*eprot*pow(mDel,2)*pow(mp,2)*pow(s13,2) - 2*pow(epi,2)*pow(mp,3)*pow(s13,2) - 4*epi*eprot*pow(mp,3)*pow(s13,2) - 2*pow(eprot,2)*pow(mp,3)*pow(s13,2) - 4*epi*mDel*pow(mp,3)*pow(s13,2) - 4*eprot*mDel*pow(mp,3)*pow(s13,2) + 2*pow(mDel,2)*pow(mp,3)*pow(s13,2) + 40*epi*pow(eprot,2)*pow(ppp,2)*pow(s13,2) + 40*pow(eprot,3)*pow(ppp,2)*pow(s13,2) + 5*eprot*pow(kkk,2)*pow(ppp,2)*pow(s13,2) - 12*pow(eprot,2)*mDel*pow(ppp,2)*pow(s13,2) + 16*epi*eprot*mp*pow(ppp,2)*pow(s13,2) + 16*pow(eprot,2)*mp*pow(ppp,2)*pow(s13,2) - pow(kkk,2)*mp*pow(ppp,2)*pow(s13,2) - 8*epi*pow(mp,2)*pow(ppp,2)*pow(s13,2) - 8*eprot*pow(mp,2)*pow(ppp,2)*pow(s13,2) - 4*mDel*pow(mp,2)*pow(ppp,2)*pow(s13,2) + 10*eprot*pow(ppp,4)*pow(s13,2) - 2*mp*pow(ppp,4)*pow(s13,2) + 18*pow(eprot,3)*pow(s13,3) + 6*pow(eprot,2)*mp*pow(s13,3) - 10*eprot*pow(mp,2)*pow(s13,3) + 2*pow(mp,3)*pow(s13,3) + kkk*ppp*(48*pow(epi,5)*pow(eprot,2) + 48*pow(eprot,7) - 48*pow(eprot,6)*mDel + 16*pow(epi,4)*eprot*(15*pow(eprot,2) - 3*eprot*mDel + 2*mDel*mp - 6*pow(ppp,2)) + 4*pow(eprot,5)*(7*pow(mDel,2) + 8*mDel*mp - 24*pow(ppp,2) - 22*s13) - 4*pow(eprot,4)*(4*pow(mDel,2)*mp + 4*mp*s13 - 3*mDel*(8*pow(ppp,2) + 5*s13)) + 4*pow(epi,3)*(120*pow(eprot,4) - 48*pow(eprot,3)*mDel - 3*pow(mDel,2)*pow(mp,2) + 3*pow(kkk,2)*pow(ppp,2) - 8*mDel*mp*pow(ppp,2) + 12*pow(ppp,4) + pow(eprot,2)*(7*pow(mDel,2) + 32*mDel*mp - 96*pow(ppp,2) - 22*s13) + 2*pow(mp,2)*s13 - 4*eprot*(pow(mDel,2)*mp - 6*mDel*pow(ppp,2) + mp*s13)) + eprot*(8*mDel*mp*pow(ppp,2)*s13 + 3*pow(kkk,2)*pow(ppp,2)*(-3*pow(mDel,2) + 2*s13) - 4*pow(mDel,2)*(9*pow(ppp,4) - 3*pow(mp,2)*s13 + 5*pow(ppp,2)*s13) + 4*s13*(6*pow(ppp,4) - 2*pow(mp,2)*s13 + 5*pow(ppp,2)*s13)) + s13*(3*pow(kkk,2)*mDel*pow(ppp,2) - 4*(pow(mDel,2)*mp*pow(ppp,2) - 3*mDel*pow(ppp,4) + mDel*pow(mp,2)*s13 + mp*pow(ppp,2)*s13)) - 4*pow(eprot,2)*(3*pow(kkk,2)*mDel*pow(ppp,2) - 4*pow(mDel,2)*mp*(pow(ppp,2) + s13) - 4*mp*s13*(pow(ppp,2) + s13) + mDel*(12*pow(ppp,4) - pow(mp,2)*s13 + 18*pow(ppp,2)*s13 + 3*pow(s13,2))) + 4*pow(epi,2)*(120*pow(eprot,5) - 72*pow(eprot,4)*mDel - 3*pow(kkk,2)*mDel*pow(ppp,2) + 4*pow(mDel,2)*mp*pow(ppp,2) - 12*mDel*pow(ppp,4) + 3*pow(eprot,3)*(7*pow(mDel,2) + 16*mDel*mp - 48*pow(ppp,2) - 22*s13) + mDel*pow(mp,2)*s13 + 4*mp*pow(ppp,2)*s13 - 3*pow(eprot,2)*(4*pow(mDel,2)*mp - 24*mDel*pow(ppp,2) - 5*mDel*s13 + 4*mp*s13) + eprot*(9*pow(kkk,2)*pow(ppp,2) + 36*pow(ppp,4) + pow(mDel,2)*(-9*pow(mp,2) + 2*pow(ppp,2)) + 6*pow(mp,2)*s13 + 16*pow(ppp,2)*s13 - 8*mDel*mp*(3*pow(ppp,2) + s13))) - 4*pow(eprot,3)*(-3*pow(kkk,2)*pow(ppp,2) + 8*mDel*mp*(pow(ppp,2) + s13) + pow(mDel,2)*(3*pow(mp,2) - 2*pow(ppp,2) + 7*s13) - 2*(6*pow(ppp,4) + 8*pow(ppp,2)*s13 + s13*(pow(mp,2) + 5*s13))) + epi*(240*pow(eprot,6) - 192*pow(eprot,5)*mDel - 9*pow(kkk,2)*pow(mDel,2)*pow(ppp,2) - 36*pow(mDel,2)*pow(ppp,4) + 4*pow(eprot,4)*(21*pow(mDel,2) + 32*mDel*mp - 96*pow(ppp,2) - 66*s13) + 12*pow(mDel,2)*pow(mp,2)*s13 + 6*pow(kkk,2)*pow(ppp,2)*s13 + 8*mDel*mp*pow(ppp,2)*s13 + 24*pow(ppp,4)*s13 - 8*pow(mp,2)*pow(s13,2) - 24*pow(eprot,3)*(2*pow(mDel,2)*mp - 12*mDel*pow(ppp,2) - 5*mDel*s13 + 2*mp*s13) - 8*eprot*(3*pow(kkk,2)*mDel*pow(ppp,2) - 2*pow(mDel,2)*mp*(2*pow(ppp,2) + s13) - 2*mp*s13*(2*pow(ppp,2) + s13) + mDel*(12*pow(ppp,4) - pow(mp,2)*s13 + 9*pow(ppp,2)*s13)) - 4*pow(eprot,2)*(-9*pow(kkk,2)*pow(ppp,2) + 8*mDel*mp*(3*pow(ppp,2) + 2*s13) + pow(mDel,2)*(9*pow(mp,2) - 4*pow(ppp,2) + 7*s13) - 2*(18*pow(ppp,4) + 3*pow(mp,2)*s13 + 16*pow(ppp,2)*s13 + 5*pow(s13,2)))))*cos(psi) + pow(kkk,2)*pow(ppp,2)*(-24*pow(epi,4)*eprot - 24*pow(eprot,5) + 24*pow(eprot,4)*mDel - 8*pow(epi,3)*(12*pow(eprot,2) - 3*eprot*mDel + mDel*mp - 3*pow(ppp,2)) + 2*pow(eprot,3)*(pow(mDel,2) - 4*mDel*mp + 12*pow(ppp,2) + 8*s13) - s13*(pow(mDel,2)*mp - 6*mDel*pow(ppp,2) + mp*s13) + 2*pow(eprot,2)*(2*pow(mDel,2)*mp + 2*mp*s13 - 3*mDel*(4*pow(ppp,2) + 3*s13)) + eprot*(2*mDel*mp*s13 + s13*(12*pow(ppp,2) + 5*s13) - pow(mDel,2)*(18*pow(ppp,2) + 5*s13)) + 2*pow(epi,2)*(-72*pow(eprot,3) + 36*pow(eprot,2)*mDel + eprot*(pow(mDel,2) - 12*mDel*mp + 36*pow(ppp,2) + 8*s13) + 2*(pow(mDel,2)*mp - 6*mDel*pow(ppp,2) + mp*s13)) + 2*epi*(-48*pow(eprot,4) + 36*pow(eprot,3)*mDel - 9*pow(mDel,2)*pow(ppp,2) + mDel*mp*s13 + 6*pow(ppp,2)*s13 + 2*pow(eprot,2)*(pow(mDel,2) - 6*mDel*mp + 18*pow(ppp,2) + 8*s13) + eprot*(4*pow(mDel,2)*mp - 24*mDel*pow(ppp,2) - 9*mDel*s13 + 4*mp*s13)))*cos(2*psi) + 4*pow(epi,3)*pow(kkk,3)*pow(ppp,3)*cos(3*psi) + 12*pow(epi,2)*eprot*pow(kkk,3)*pow(ppp,3)*cos(3*psi) + 12*epi*pow(eprot,2)*pow(kkk,3)*pow(ppp,3)*cos(3*psi) + 4*pow(eprot,3)*pow(kkk,3)*pow(ppp,3)*cos(3*psi) - 4*pow(epi,2)*pow(kkk,3)*mDel*pow(ppp,3)*cos(3*psi) - 8*epi*eprot*pow(kkk,3)*mDel*pow(ppp,3)*cos(3*psi) - 4*pow(eprot,2)*pow(kkk,3)*mDel*pow(ppp,3)*cos(3*psi) - 3*epi*pow(kkk,3)*pow(mDel,2)*pow(ppp,3)*cos(3*psi) - 3*eprot*pow(kkk,3)*pow(mDel,2)*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*pow(ppp,3)*s13*cos(3*psi) + 2*eprot*pow(kkk,3)*pow(ppp,3)*s13*cos(3*psi) + pow(kkk,3)*mDel*pow(ppp,3)*s13*cos(3*psi)))/(9.*pow(s13,2)));
	    	break;
	    case FormulaParam::B2://f2
	    	return -BW2(s13,mDel,GDel)*((pow(mLamC,3)*(-16*pow(epi,6)*pow(eprot,3) - 96*pow(epi,5)*pow(eprot,4) - 240*pow(epi,4)*pow(eprot,5) - 320*pow(epi,3)*pow(eprot,6) - 240*pow(epi,2)*pow(eprot,7) - 96*epi*pow(eprot,8) - 16*pow(eprot,9) - 16*pow(epi,5)*pow(eprot,3)*mDel - 80*pow(epi,4)*pow(eprot,4)*mDel - 160*pow(epi,3)*pow(eprot,5)*mDel - 160*pow(epi,2)*pow(eprot,6)*mDel - 80*epi*pow(eprot,7)*mDel - 16*pow(eprot,8)*mDel - 20*pow(epi,4)*pow(eprot,3)*pow(mDel,2) - 80*pow(epi,3)*pow(eprot,4)*pow(mDel,2) - 120*pow(epi,2)*pow(eprot,5)*pow(mDel,2) - 80*epi*pow(eprot,6)*pow(mDel,2) - 20*pow(eprot,7)*pow(mDel,2) - 16*pow(epi,5)*pow(eprot,2)*mDel*mp - 80*pow(epi,4)*pow(eprot,3)*mDel*mp - 160*pow(epi,3)*pow(eprot,4)*mDel*mp - 160*pow(epi,2)*pow(eprot,5)*mDel*mp - 80*epi*pow(eprot,6)*mDel*mp - 16*pow(eprot,7)*mDel*mp - 8*pow(epi,4)*pow(eprot,2)*pow(mDel,2)*mp - 32*pow(epi,3)*pow(eprot,3)*pow(mDel,2)*mp - 48*pow(epi,2)*pow(eprot,4)*pow(mDel,2)*mp - 32*epi*pow(eprot,5)*pow(mDel,2)*mp - 8*pow(eprot,6)*pow(mDel,2)*mp + 12*pow(epi,4)*eprot*pow(mDel,2)*pow(mp,2) + 48*pow(epi,3)*pow(eprot,2)*pow(mDel,2)*pow(mp,2) + 72*pow(epi,2)*pow(eprot,3)*pow(mDel,2)*pow(mp,2) + 48*epi*pow(eprot,4)*pow(mDel,2)*pow(mp,2) + 12*pow(eprot,5)*pow(mDel,2)*pow(mp,2) + 48*pow(epi,5)*pow(eprot,2)*pow(ppp,2) + 240*pow(epi,4)*pow(eprot,3)*pow(ppp,2) + 480*pow(epi,3)*pow(eprot,4)*pow(ppp,2) + 480*pow(epi,2)*pow(eprot,5)*pow(ppp,2) + 240*epi*pow(eprot,6)*pow(ppp,2) + 48*pow(eprot,7)*pow(ppp,2) - 24*pow(epi,4)*eprot*pow(kkk,2)*pow(ppp,2) - 96*pow(epi,3)*pow(eprot,2)*pow(kkk,2)*pow(ppp,2) - 144*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*pow(ppp,2) - 96*epi*pow(eprot,4)*pow(kkk,2)*pow(ppp,2) - 24*pow(eprot,5)*pow(kkk,2)*pow(ppp,2) + 48*pow(epi,4)*pow(eprot,2)*mDel*pow(ppp,2) + 192*pow(epi,3)*pow(eprot,3)*mDel*pow(ppp,2) + 288*pow(epi,2)*pow(eprot,4)*mDel*pow(ppp,2) + 192*epi*pow(eprot,5)*mDel*pow(ppp,2) + 48*pow(eprot,6)*mDel*pow(ppp,2) - 24*pow(epi,3)*eprot*pow(kkk,2)*mDel*pow(ppp,2) - 72*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,2) - 72*epi*pow(eprot,3)*pow(kkk,2)*mDel*pow(ppp,2) - 24*pow(eprot,4)*pow(kkk,2)*mDel*pow(ppp,2) + 28*pow(epi,3)*pow(eprot,2)*pow(mDel,2)*pow(ppp,2) + 84*pow(epi,2)*pow(eprot,3)*pow(mDel,2)*pow(ppp,2) + 84*epi*pow(eprot,4)*pow(mDel,2)*pow(ppp,2) + 28*pow(eprot,5)*pow(mDel,2)*pow(ppp,2) + 2*pow(epi,2)*eprot*pow(kkk,2)*pow(mDel,2)*pow(ppp,2) + 4*epi*pow(eprot,2)*pow(kkk,2)*pow(mDel,2)*pow(ppp,2) + 2*pow(eprot,3)*pow(kkk,2)*pow(mDel,2)*pow(ppp,2) + 32*pow(epi,4)*eprot*mDel*mp*pow(ppp,2) + 128*pow(epi,3)*pow(eprot,2)*mDel*mp*pow(ppp,2) + 192*pow(epi,2)*pow(eprot,3)*mDel*mp*pow(ppp,2) + 128*epi*pow(eprot,4)*mDel*mp*pow(ppp,2) + 32*pow(eprot,5)*mDel*mp*pow(ppp,2) - 8*pow(epi,3)*pow(kkk,2)*mDel*mp*pow(ppp,2) - 24*pow(epi,2)*eprot*pow(kkk,2)*mDel*mp*pow(ppp,2) - 24*epi*pow(eprot,2)*pow(kkk,2)*mDel*mp*pow(ppp,2) - 8*pow(eprot,3)*pow(kkk,2)*mDel*mp*pow(ppp,2) + 16*pow(epi,3)*eprot*pow(mDel,2)*mp*pow(ppp,2) + 48*pow(epi,2)*pow(eprot,2)*pow(mDel,2)*mp*pow(ppp,2) + 48*epi*pow(eprot,3)*pow(mDel,2)*mp*pow(ppp,2) + 16*pow(eprot,4)*pow(mDel,2)*mp*pow(ppp,2) - 4*pow(epi,2)*pow(kkk,2)*pow(mDel,2)*mp*pow(ppp,2) - 8*epi*eprot*pow(kkk,2)*pow(mDel,2)*mp*pow(ppp,2) - 4*pow(eprot,2)*pow(kkk,2)*pow(mDel,2)*mp*pow(ppp,2) - 12*pow(epi,3)*pow(mDel,2)*pow(mp,2)*pow(ppp,2) - 36*pow(epi,2)*eprot*pow(mDel,2)*pow(mp,2)*pow(ppp,2) - 36*epi*pow(eprot,2)*pow(mDel,2)*pow(mp,2)*pow(ppp,2) - 12*pow(eprot,3)*pow(mDel,2)*pow(mp,2)*pow(ppp,2) - 48*pow(epi,4)*eprot*pow(ppp,4) - 192*pow(epi,3)*pow(eprot,2)*pow(ppp,4) - 288*pow(epi,2)*pow(eprot,3)*pow(ppp,4) - 192*epi*pow(eprot,4)*pow(ppp,4) - 48*pow(eprot,5)*pow(ppp,4) + 24*pow(epi,3)*pow(kkk,2)*pow(ppp,4) + 72*pow(epi,2)*eprot*pow(kkk,2)*pow(ppp,4) + 72*epi*pow(eprot,2)*pow(kkk,2)*pow(ppp,4) + 24*pow(eprot,3)*pow(kkk,2)*pow(ppp,4) - 48*pow(epi,3)*eprot*mDel*pow(ppp,4) - 144*pow(epi,2)*pow(eprot,2)*mDel*pow(ppp,4) - 144*epi*pow(eprot,3)*mDel*pow(ppp,4) - 48*pow(eprot,4)*mDel*pow(ppp,4) + 24*pow(epi,2)*pow(kkk,2)*mDel*pow(ppp,4) + 48*epi*eprot*pow(kkk,2)*mDel*pow(ppp,4) + 24*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,4) + 4*pow(epi,2)*eprot*pow(mDel,2)*pow(ppp,4) + 8*epi*pow(eprot,2)*pow(mDel,2)*pow(ppp,4) + 4*pow(eprot,3)*pow(mDel,2)*pow(ppp,4) - 18*epi*pow(kkk,2)*pow(mDel,2)*pow(ppp,4) - 18*eprot*pow(kkk,2)*pow(mDel,2)*pow(ppp,4) - 16*pow(epi,3)*mDel*mp*pow(ppp,4) - 48*pow(epi,2)*eprot*mDel*mp*pow(ppp,4) - 48*epi*pow(eprot,2)*mDel*mp*pow(ppp,4) - 16*pow(eprot,3)*mDel*mp*pow(ppp,4) - 8*pow(epi,2)*pow(mDel,2)*mp*pow(ppp,4) - 16*epi*eprot*pow(mDel,2)*mp*pow(ppp,4) - 8*pow(eprot,2)*pow(mDel,2)*mp*pow(ppp,4) + 16*pow(epi,3)*pow(ppp,6) + 48*pow(epi,2)*eprot*pow(ppp,6) + 48*epi*pow(eprot,2)*pow(ppp,6) + 16*pow(eprot,3)*pow(ppp,6) + 16*pow(epi,2)*mDel*pow(ppp,6) + 32*epi*eprot*mDel*pow(ppp,6) + 16*pow(eprot,2)*mDel*pow(ppp,6) - 12*epi*pow(mDel,2)*pow(ppp,6) - 12*eprot*pow(mDel,2)*pow(ppp,6) + 48*pow(epi,4)*pow(eprot,3)*s13 + 192*pow(epi,3)*pow(eprot,4)*s13 + 288*pow(epi,2)*pow(eprot,5)*s13 + 192*epi*pow(eprot,6)*s13 + 48*pow(eprot,7)*s13 + 28*pow(epi,3)*pow(eprot,3)*mDel*s13 + 84*pow(epi,2)*pow(eprot,4)*mDel*s13 + 84*epi*pow(eprot,5)*mDel*s13 + 28*pow(eprot,6)*mDel*s13 + 38*pow(epi,2)*pow(eprot,3)*pow(mDel,2)*s13 + 76*epi*pow(eprot,4)*pow(mDel,2)*s13 + 38*pow(eprot,5)*pow(mDel,2)*s13 - 8*pow(epi,4)*pow(eprot,2)*mp*s13 - 32*pow(epi,3)*pow(eprot,3)*mp*s13 - 48*pow(epi,2)*pow(eprot,4)*mp*s13 - 32*epi*pow(eprot,5)*mp*s13 - 8*pow(eprot,6)*mp*s13 + 28*pow(epi,3)*pow(eprot,2)*mDel*mp*s13 + 84*pow(epi,2)*pow(eprot,3)*mDel*mp*s13 + 84*epi*pow(eprot,4)*mDel*mp*s13 + 28*pow(eprot,5)*mDel*mp*s13 + 14*pow(epi,2)*pow(eprot,2)*pow(mDel,2)*mp*s13 + 28*epi*pow(eprot,3)*pow(mDel,2)*mp*s13 + 14*pow(eprot,4)*pow(mDel,2)*mp*s13 - 8*pow(epi,4)*eprot*pow(mp,2)*s13 - 32*pow(epi,3)*pow(eprot,2)*pow(mp,2)*s13 - 48*pow(epi,2)*pow(eprot,3)*pow(mp,2)*s13 - 32*epi*pow(eprot,4)*pow(mp,2)*s13 - 8*pow(eprot,5)*pow(mp,2)*s13 + 4*pow(epi,3)*eprot*mDel*pow(mp,2)*s13 + 12*pow(epi,2)*pow(eprot,2)*mDel*pow(mp,2)*s13 + 12*epi*pow(eprot,3)*mDel*pow(mp,2)*s13 + 4*pow(eprot,4)*mDel*pow(mp,2)*s13 - 22*pow(epi,2)*eprot*pow(mDel,2)*pow(mp,2)*s13 - 44*epi*pow(eprot,2)*pow(mDel,2)*pow(mp,2)*s13 - 22*pow(eprot,3)*pow(mDel,2)*pow(mp,2)*s13 + 4*pow(epi,3)*mDel*pow(mp,3)*s13 + 12*pow(epi,2)*eprot*mDel*pow(mp,3)*s13 + 12*epi*pow(eprot,2)*mDel*pow(mp,3)*s13 + 4*pow(eprot,3)*mDel*pow(mp,3)*s13 + 2*pow(epi,2)*pow(mDel,2)*pow(mp,3)*s13 + 4*epi*eprot*pow(mDel,2)*pow(mp,3)*s13 + 2*pow(eprot,2)*pow(mDel,2)*pow(mp,3)*s13 - 88*pow(epi,3)*pow(eprot,2)*pow(ppp,2)*s13 - 264*pow(epi,2)*pow(eprot,3)*pow(ppp,2)*s13 - 264*epi*pow(eprot,4)*pow(ppp,2)*s13 - 88*pow(eprot,5)*pow(ppp,2)*s13 + 16*pow(epi,2)*eprot*pow(kkk,2)*pow(ppp,2)*s13 + 32*epi*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s13 + 16*pow(eprot,3)*pow(kkk,2)*pow(ppp,2)*s13 - 60*pow(epi,2)*pow(eprot,2)*mDel*pow(ppp,2)*s13 - 120*epi*pow(eprot,3)*mDel*pow(ppp,2)*s13 - 60*pow(eprot,4)*mDel*pow(ppp,2)*s13 + 18*epi*eprot*pow(kkk,2)*mDel*pow(ppp,2)*s13 + 18*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,2)*s13 - 28*epi*pow(eprot,2)*pow(mDel,2)*pow(ppp,2)*s13 - 28*pow(eprot,3)*pow(mDel,2)*pow(ppp,2)*s13 - 5*eprot*pow(kkk,2)*pow(mDel,2)*pow(ppp,2)*s13 + 16*pow(epi,3)*eprot*mp*pow(ppp,2)*s13 + 48*pow(epi,2)*pow(eprot,2)*mp*pow(ppp,2)*s13 + 48*epi*pow(eprot,3)*mp*pow(ppp,2)*s13 + 16*pow(eprot,4)*mp*pow(ppp,2)*s13 - 4*pow(epi,2)*pow(kkk,2)*mp*pow(ppp,2)*s13 - 8*epi*eprot*pow(kkk,2)*mp*pow(ppp,2)*s13 - 4*pow(eprot,2)*pow(kkk,2)*mp*pow(ppp,2)*s13 - 32*pow(epi,2)*eprot*mDel*mp*pow(ppp,2)*s13 - 64*epi*pow(eprot,2)*mDel*mp*pow(ppp,2)*s13 - 32*pow(eprot,3)*mDel*mp*pow(ppp,2)*s13 + 2*epi*pow(kkk,2)*mDel*mp*pow(ppp,2)*s13 + 2*eprot*pow(kkk,2)*mDel*mp*pow(ppp,2)*s13 - 16*epi*eprot*pow(mDel,2)*mp*pow(ppp,2)*s13 - 16*pow(eprot,2)*pow(mDel,2)*mp*pow(ppp,2)*s13 + pow(kkk,2)*pow(mDel,2)*mp*pow(ppp,2)*s13 + 8*pow(epi,3)*pow(mp,2)*pow(ppp,2)*s13 + 24*pow(epi,2)*eprot*pow(mp,2)*pow(ppp,2)*s13 + 24*epi*pow(eprot,2)*pow(mp,2)*pow(ppp,2)*s13 + 8*pow(eprot,3)*pow(mp,2)*pow(ppp,2)*s13 - 4*pow(epi,2)*mDel*pow(mp,2)*pow(ppp,2)*s13 - 8*epi*eprot*mDel*pow(mp,2)*pow(ppp,2)*s13 - 4*pow(eprot,2)*mDel*pow(mp,2)*pow(ppp,2)*s13 + 12*epi*pow(mDel,2)*pow(mp,2)*pow(ppp,2)*s13 + 12*eprot*pow(mDel,2)*pow(mp,2)*pow(ppp,2)*s13 + 32*pow(epi,2)*eprot*pow(ppp,4)*s13 + 64*epi*pow(eprot,2)*pow(ppp,4)*s13 + 32*pow(eprot,3)*pow(ppp,4)*s13 + 12*epi*pow(kkk,2)*pow(ppp,4)*s13 + 12*eprot*pow(kkk,2)*pow(ppp,4)*s13 + 36*epi*eprot*mDel*pow(ppp,4)*s13 + 36*pow(eprot,2)*mDel*pow(ppp,4)*s13 - 6*pow(kkk,2)*mDel*pow(ppp,4)*s13 - 10*eprot*pow(mDel,2)*pow(ppp,4)*s13 - 8*pow(epi,2)*mp*pow(ppp,4)*s13 - 16*epi*eprot*mp*pow(ppp,4)*s13 - 8*pow(eprot,2)*mp*pow(ppp,4)*s13 + 4*epi*mDel*mp*pow(ppp,4)*s13 + 4*eprot*mDel*mp*pow(ppp,4)*s13 + 2*pow(mDel,2)*mp*pow(ppp,4)*s13 + 8*epi*pow(ppp,6)*s13 + 8*eprot*pow(ppp,6)*s13 - 4*mDel*pow(ppp,6)*s13 - 50*pow(epi,2)*pow(eprot,3)*pow(s13,2) - 100*epi*pow(eprot,4)*pow(s13,2) - 50*pow(eprot,5)*pow(s13,2) - 12*epi*pow(eprot,3)*mDel*pow(s13,2) - 12*pow(eprot,4)*mDel*pow(s13,2) - 18*pow(eprot,3)*pow(mDel,2)*pow(s13,2) + 14*pow(epi,2)*pow(eprot,2)*mp*pow(s13,2) + 28*epi*pow(eprot,3)*mp*pow(s13,2) + 14*pow(eprot,4)*mp*pow(s13,2) - 12*epi*pow(eprot,2)*mDel*mp*pow(s13,2) - 12*pow(eprot,3)*mDel*mp*pow(s13,2) - 6*pow(eprot,2)*pow(mDel,2)*mp*pow(s13,2) + 18*pow(epi,2)*eprot*pow(mp,2)*pow(s13,2) + 36*epi*pow(eprot,2)*pow(mp,2)*pow(s13,2) + 18*pow(eprot,3)*pow(mp,2)*pow(s13,2) - 4*epi*eprot*mDel*pow(mp,2)*pow(s13,2) - 4*pow(eprot,2)*mDel*pow(mp,2)*pow(s13,2) + 10*eprot*pow(mDel,2)*pow(mp,2)*pow(s13,2) + 2*pow(epi,2)*pow(mp,3)*pow(s13,2) + 4*epi*eprot*pow(mp,3)*pow(s13,2) + 2*pow(eprot,2)*pow(mp,3)*pow(s13,2) - 4*epi*mDel*pow(mp,3)*pow(s13,2) - 4*eprot*mDel*pow(mp,3)*pow(s13,2) - 2*pow(mDel,2)*pow(mp,3)*pow(s13,2) + 40*epi*pow(eprot,2)*pow(ppp,2)*pow(s13,2) + 40*pow(eprot,3)*pow(ppp,2)*pow(s13,2) + 5*eprot*pow(kkk,2)*pow(ppp,2)*pow(s13,2) + 12*pow(eprot,2)*mDel*pow(ppp,2)*pow(s13,2) - 16*epi*eprot*mp*pow(ppp,2)*pow(s13,2) - 16*pow(eprot,2)*mp*pow(ppp,2)*pow(s13,2) + pow(kkk,2)*mp*pow(ppp,2)*pow(s13,2) - 8*epi*pow(mp,2)*pow(ppp,2)*pow(s13,2) - 8*eprot*pow(mp,2)*pow(ppp,2)*pow(s13,2) + 4*mDel*pow(mp,2)*pow(ppp,2)*pow(s13,2) + 10*eprot*pow(ppp,4)*pow(s13,2) + 2*mp*pow(ppp,4)*pow(s13,2) + 18*pow(eprot,3)*pow(s13,3) - 6*pow(eprot,2)*mp*pow(s13,3) - 10*eprot*pow(mp,2)*pow(s13,3) - 2*pow(mp,3)*pow(s13,3) + kkk*ppp*(48*pow(epi,5)*pow(eprot,2) + 48*pow(eprot,7) + 48*pow(eprot,6)*mDel + 16*pow(epi,4)*eprot*(15*pow(eprot,2) + 3*eprot*mDel + 2*mDel*mp - 6*pow(ppp,2)) + 4*pow(eprot,5)*(7*pow(mDel,2) + 8*mDel*mp - 24*pow(ppp,2) - 22*s13) + 4*pow(eprot,4)*(4*pow(mDel,2)*mp + 4*mp*s13 - 3*mDel*(8*pow(ppp,2) + 5*s13)) + 4*pow(epi,3)*(120*pow(eprot,4) + 48*pow(eprot,3)*mDel - 3*pow(mDel,2)*pow(mp,2) + 3*pow(kkk,2)*pow(ppp,2) - 8*mDel*mp*pow(ppp,2) + 12*pow(ppp,4) + pow(eprot,2)*(7*pow(mDel,2) + 32*mDel*mp - 96*pow(ppp,2) - 22*s13) + 2*pow(mp,2)*s13 + 4*eprot*(pow(mDel,2)*mp - 6*mDel*pow(ppp,2) + mp*s13)) + eprot*(8*mDel*mp*pow(ppp,2)*s13 + 3*pow(kkk,2)*pow(ppp,2)*(-3*pow(mDel,2) + 2*s13) - 4*pow(mDel,2)*(9*pow(ppp,4) - 3*pow(mp,2)*s13 + 5*pow(ppp,2)*s13) + 4*s13*(6*pow(ppp,4) - 2*pow(mp,2)*s13 + 5*pow(ppp,2)*s13)) + s13*(-3*pow(kkk,2)*mDel*pow(ppp,2) + 4*(pow(mDel,2)*mp*pow(ppp,2) - 3*mDel*pow(ppp,4) + mDel*pow(mp,2)*s13 + mp*pow(ppp,2)*s13)) + 4*pow(eprot,2)*(3*pow(kkk,2)*mDel*pow(ppp,2) - 4*pow(mDel,2)*mp*(pow(ppp,2) + s13) - 4*mp*s13*(pow(ppp,2) + s13) + mDel*(12*pow(ppp,4) - pow(mp,2)*s13 + 18*pow(ppp,2)*s13 + 3*pow(s13,2))) + 4*pow(epi,2)*(120*pow(eprot,5) + 72*pow(eprot,4)*mDel + 3*pow(kkk,2)*mDel*pow(ppp,2) - 4*pow(mDel,2)*mp*pow(ppp,2) + 12*mDel*pow(ppp,4) + 3*pow(eprot,3)*(7*pow(mDel,2) + 16*mDel*mp - 48*pow(ppp,2) - 22*s13) - mDel*pow(mp,2)*s13 - 4*mp*pow(ppp,2)*s13 + 3*pow(eprot,2)*(4*pow(mDel,2)*mp - 24*mDel*pow(ppp,2) - 5*mDel*s13 + 4*mp*s13) + eprot*(9*pow(kkk,2)*pow(ppp,2) + 36*pow(ppp,4) + pow(mDel,2)*(-9*pow(mp,2) + 2*pow(ppp,2)) + 6*pow(mp,2)*s13 + 16*pow(ppp,2)*s13 - 8*mDel*mp*(3*pow(ppp,2) + s13))) - 4*pow(eprot,3)*(-3*pow(kkk,2)*pow(ppp,2) + 8*mDel*mp*(pow(ppp,2) + s13) + pow(mDel,2)*(3*pow(mp,2) - 2*pow(ppp,2) + 7*s13) - 2*(6*pow(ppp,4) + 8*pow(ppp,2)*s13 + s13*(pow(mp,2) + 5*s13))) + epi*(240*pow(eprot,6) + 192*pow(eprot,5)*mDel - 9*pow(kkk,2)*pow(mDel,2)*pow(ppp,2) - 36*pow(mDel,2)*pow(ppp,4) + 4*pow(eprot,4)*(21*pow(mDel,2) + 32*mDel*mp - 96*pow(ppp,2) - 66*s13) + 12*pow(mDel,2)*pow(mp,2)*s13 + 6*pow(kkk,2)*pow(ppp,2)*s13 + 8*mDel*mp*pow(ppp,2)*s13 + 24*pow(ppp,4)*s13 - 8*pow(mp,2)*pow(s13,2) + 24*pow(eprot,3)*(2*pow(mDel,2)*mp - 12*mDel*pow(ppp,2) - 5*mDel*s13 + 2*mp*s13) + 8*eprot*(3*pow(kkk,2)*mDel*pow(ppp,2) - 2*pow(mDel,2)*mp*(2*pow(ppp,2) + s13) - 2*mp*s13*(2*pow(ppp,2) + s13) + mDel*(12*pow(ppp,4) - pow(mp,2)*s13 + 9*pow(ppp,2)*s13)) - 4*pow(eprot,2)*(-9*pow(kkk,2)*pow(ppp,2) + 8*mDel*mp*(3*pow(ppp,2) + 2*s13) + pow(mDel,2)*(9*pow(mp,2) - 4*pow(ppp,2) + 7*s13) - 2*(18*pow(ppp,4) + 3*pow(mp,2)*s13 + 16*pow(ppp,2)*s13 + 5*pow(s13,2)))))*cos(psi) + pow(kkk,2)*pow(ppp,2)*(-24*pow(epi,4)*eprot - 24*pow(eprot,5) - 24*pow(eprot,4)*mDel - 8*pow(epi,3)*(12*pow(eprot,2) + 3*eprot*mDel + mDel*mp - 3*pow(ppp,2)) + 2*pow(eprot,3)*(pow(mDel,2) - 4*mDel*mp + 12*pow(ppp,2) + 8*s13) + s13*(pow(mDel,2)*mp - 6*mDel*pow(ppp,2) + mp*s13) + pow(eprot,2)*(-4*pow(mDel,2)*mp - 4*mp*s13 + 6*mDel*(4*pow(ppp,2) + 3*s13)) + eprot*(2*mDel*mp*s13 + s13*(12*pow(ppp,2) + 5*s13) - pow(mDel,2)*(18*pow(ppp,2) + 5*s13)) - 2*pow(epi,2)*(72*pow(eprot,3) + 36*pow(eprot,2)*mDel - eprot*(pow(mDel,2) - 12*mDel*mp + 36*pow(ppp,2) + 8*s13) + 2*(pow(mDel,2)*mp - 6*mDel*pow(ppp,2) + mp*s13)) - 2*epi*(48*pow(eprot,4) + 36*pow(eprot,3)*mDel + 9*pow(mDel,2)*pow(ppp,2) - mDel*mp*s13 - 6*pow(ppp,2)*s13 - 2*pow(eprot,2)*(pow(mDel,2) - 6*mDel*mp + 18*pow(ppp,2) + 8*s13) + eprot*(4*pow(mDel,2)*mp - 24*mDel*pow(ppp,2) - 9*mDel*s13 + 4*mp*s13)))*cos(2*psi) + 4*pow(epi,3)*pow(kkk,3)*pow(ppp,3)*cos(3*psi) + 12*pow(epi,2)*eprot*pow(kkk,3)*pow(ppp,3)*cos(3*psi) + 12*epi*pow(eprot,2)*pow(kkk,3)*pow(ppp,3)*cos(3*psi) + 4*pow(eprot,3)*pow(kkk,3)*pow(ppp,3)*cos(3*psi) + 4*pow(epi,2)*pow(kkk,3)*mDel*pow(ppp,3)*cos(3*psi) + 8*epi*eprot*pow(kkk,3)*mDel*pow(ppp,3)*cos(3*psi) + 4*pow(eprot,2)*pow(kkk,3)*mDel*pow(ppp,3)*cos(3*psi) - 3*epi*pow(kkk,3)*pow(mDel,2)*pow(ppp,3)*cos(3*psi) - 3*eprot*pow(kkk,3)*pow(mDel,2)*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*pow(ppp,3)*s13*cos(3*psi) + 2*eprot*pow(kkk,3)*pow(ppp,3)*s13*cos(3*psi) - pow(kkk,3)*mDel*pow(ppp,3)*s13*cos(3*psi)))/(9.*pow(s13,2)));
	    	break;
	    case FormulaParam::C2://f3
	    	return BW2(s12,mLam,GLam)*((-2*pow(mLamC,3)*(-((pow(epi,2) - 2*epi*mLamC + pow(mLamC,2) - s12)*(8*pow(epi,4)*pow(eprot,3) + 8*pow(epi,3)*pow(eprot,2)*(eprot*(mLam - 4*mLamC) + mLam*mp) + pow(eprot,2)*mp*(4*pow(mLamC,2) - 3*s12)*(pow(mLam,2) - 2*mLam*mLamC + s12) - pow(mp,3)*s12*(pow(mLam,2) - 2*mLam*mLamC + s12) + 2*pow(epi,2)*eprot*(pow(eprot,2)*(5*pow(mLam,2) - 12*mLam*mLamC + 24*pow(mLamC,2) - 8*s12) + 2*eprot*mp*(pow(mLam,2) - 6*mLam*mLamC + s12) + pow(mp,2)*(-3*pow(mLam,2) + 2*s12)) + eprot*pow(mp,2)*(2*mLam*mLamC*s12 + (4*pow(mLamC,2) - 5*s12)*s12 + pow(mLam,2)*(-6*pow(mLamC,2) + 5*s12)) + pow(eprot,3)*(8*pow(mLamC,4) + pow(mLam,2)*(10*pow(mLamC,2) - 9*s12) - 16*pow(mLamC,2)*s12 + 9*pow(s12,2) + mLam*(-8*pow(mLamC,3) + 6*mLamC*s12)) - 2*epi*(mLam*pow(mp,3)*s12 + eprot*pow(mp,2)*(-6*pow(mLam,2)*mLamC + mLam*s12 + 4*mLamC*s12) + pow(eprot,2)*mp*(4*pow(mLam,2)*mLamC + 4*mLamC*s12 + 3*mLam*(-4*pow(mLamC,2) + s12)) + pow(eprot,3)*(10*pow(mLam,2)*mLamC + 3*mLam*(-4*pow(mLamC,2) + s12) + 16*(pow(mLamC,3) - mLamC*s12))))) + 2*kkk*ppp*(pow(epi,2) - 2*epi*mLamC + pow(mLamC,2) - s12)*(12*pow(epi,3)*pow(eprot,2) + 4*pow(epi,2)*eprot*(3*eprot*(mLam - 3*mLamC) + 2*mLam*mp) - 4*eprot*mLamC*mp*(pow(mLam,2) - 2*mLam*mLamC + s12) + pow(mp,2)*(3*pow(mLam,2)*mLamC - mLam*s12 - 2*mLamC*s12) + pow(eprot,2)*(-7*pow(mLam,2)*mLamC + 12*mLam*pow(mLamC,2) - 12*pow(mLamC,3) - 3*mLam*s12 + 10*mLamC*s12) + epi*(pow(eprot,2)*(7*pow(mLam,2) - 24*mLam*mLamC + 36*pow(mLamC,2) - 10*s12) + 4*eprot*mp*(pow(mLam,2) - 4*mLam*mLamC + s12) + pow(mp,2)*(-3*pow(mLam,2) + 2*s12)))*cos(psi) - pow(kkk,2)*pow(ppp,2)*(24*pow(epi,4)*eprot + 8*pow(epi,3)*(3*eprot*(mLam - 4*mLamC) + mLam*mp) + mp*(4*pow(mLamC,2) - s12)*(pow(mLam,2) - 2*mLam*mLamC + s12) + eprot*(-2*pow(mLam,2)*pow(mLamC,2) - 24*mLam*pow(mLamC,3) + 24*pow(mLamC,4) + 5*pow(mLam,2)*s12 + 18*mLam*mLamC*s12 - 16*pow(mLamC,2)*s12 - 5*pow(s12,2)) - 2*pow(epi,2)*(-2*mp*(pow(mLam,2) - 6*mLam*mLamC + s12) + eprot*(pow(mLam,2) + 36*mLam*mLamC - 72*pow(mLamC,2) + 8*s12)) + 2*epi*(-(mp*(4*pow(mLam,2)*mLamC - 12*mLam*pow(mLamC,2) + mLam*s12 + 4*mLamC*s12)) + eprot*(2*pow(mLam,2)*mLamC + 36*mLam*pow(mLamC,2) - 48*pow(mLamC,3) - 9*mLam*s12 + 16*mLamC*s12)))*pow(cos(psi),2) + 2*pow(kkk,3)*(2*epi - mLam - 2*mLamC)*pow(ppp,3)*(2*pow(epi,2) + 3*epi*mLam - 4*epi*mLamC - 3*mLam*mLamC + 2*pow(mLamC,2) + s12)*pow(cos(psi),3)))/(9.*pow(s12,2)));
	    	break;
	    case FormulaParam::D2://f4
	    	return BW2(s12,mLam,GLam)*((2*pow(mLamC,3)*((pow(epi,2) - 2*epi*mLamC + pow(mLamC,2) - s12)*(8*pow(epi,4)*pow(eprot,3) - 8*pow(epi,3)*pow(eprot,2)*(eprot*(mLam + 4*mLamC) - mLam*mp) - pow(eprot,2)*mp*(4*pow(mLamC,2) - 3*s12)*(pow(mLam,2) + 2*mLam*mLamC + s12) + pow(mp,3)*s12*(pow(mLam,2) + 2*mLam*mLamC + s12) + 2*pow(epi,2)*eprot*(pow(eprot,2)*(5*pow(mLam,2) + 12*mLam*mLamC + 24*pow(mLamC,2) - 8*s12) - 2*eprot*mp*(pow(mLam,2) + 6*mLam*mLamC + s12) + pow(mp,2)*(-3*pow(mLam,2) + 2*s12)) + eprot*pow(mp,2)*(-2*mLam*mLamC*s12 + (4*pow(mLamC,2) - 5*s12)*s12 + pow(mLam,2)*(-6*pow(mLamC,2) + 5*s12)) + pow(eprot,3)*(8*pow(mLamC,4) + pow(mLam,2)*(10*pow(mLamC,2) - 9*s12) - 16*pow(mLamC,2)*s12 + 9*pow(s12,2) + mLam*(8*pow(mLamC,3) - 6*mLamC*s12)) + epi*(-2*mLam*pow(mp,3)*s12 + 2*eprot*pow(mp,2)*(6*pow(mLam,2)*mLamC + mLam*s12 - 4*mLamC*s12) + 2*pow(eprot,2)*mp*(4*pow(mLam,2)*mLamC + 12*mLam*pow(mLamC,2) - 3*mLam*s12 + 4*mLamC*s12) + pow(eprot,3)*(-20*pow(mLam,2)*mLamC + 6*mLam*(-4*pow(mLamC,2) + s12) + 32*mLamC*(-pow(mLamC,2) + s12)))) - 2*kkk*ppp*(pow(epi,2) - 2*epi*mLamC + pow(mLamC,2) - s12)*(12*pow(epi,3)*pow(eprot,2) - 4*pow(epi,2)*eprot*(3*eprot*(mLam + 3*mLamC) - 2*mLam*mp) + 4*eprot*mLamC*mp*(pow(mLam,2) + 2*mLam*mLamC + s12) + pow(mp,2)*(3*pow(mLam,2)*mLamC + mLam*s12 - 2*mLamC*s12) + pow(eprot,2)*(-7*pow(mLam,2)*mLamC - 12*pow(mLamC,3) + 10*mLamC*s12 + 3*mLam*(-4*pow(mLamC,2) + s12)) + epi*(pow(eprot,2)*(7*pow(mLam,2) + 24*mLam*mLamC + 36*pow(mLamC,2) - 10*s12) - 4*eprot*mp*(pow(mLam,2) + 4*mLam*mLamC + s12) + pow(mp,2)*(-3*pow(mLam,2) + 2*s12)))*cos(psi) + pow(kkk,2)*pow(ppp,2)*(24*pow(epi,4)*eprot - 8*pow(epi,3)*(3*eprot*(mLam + 4*mLamC) - mLam*mp) - mp*(4*pow(mLamC,2) - s12)*(pow(mLam,2) + 2*mLam*mLamC + s12) - 2*pow(epi,2)*(2*mp*(pow(mLam,2) + 6*mLam*mLamC + s12) + eprot*(pow(mLam,2) - 36*mLam*mLamC - 72*pow(mLamC,2) + 8*s12)) + eprot*(24*pow(mLamC,4) - 16*pow(mLamC,2)*s12 - 5*pow(s12,2) + pow(mLam,2)*(-2*pow(mLamC,2) + 5*s12) + 6*mLam*(4*pow(mLamC,3) - 3*mLamC*s12)) + 2*epi*(mp*(4*pow(mLam,2)*mLamC + 12*mLam*pow(mLamC,2) - mLam*s12 + 4*mLamC*s12) + eprot*(2*pow(mLam,2)*mLamC + 9*mLam*(-4*pow(mLamC,2) + s12) + 16*mLamC*(-3*pow(mLamC,2) + s12))))*pow(cos(psi),2) - 2*pow(kkk,3)*(2*epi + mLam - 2*mLamC)*pow(ppp,3)*(2*pow(epi,2) - 3*epi*mLam - 4*epi*mLamC + 3*mLam*mLamC + 2*pow(mLamC,2) + s12)*pow(cos(psi),3)))/(9.*pow(s12,2)));
	    	break;
	    case FormulaParam::A12://f5
	    	return BW2(s23,mKst,GKst)*((2*mLamC*(8*pow(epi,2)*pow(eprot,5) - 8*pow(epi,2)*pow(eprot,3)*pow(mKst,2) - 8*epi*pow(eprot,4)*pow(mKst,2) + 8*pow(epi,2)*eprot*pow(mKst,4) + 4*epi*pow(eprot,2)*pow(mKst,4) + 2*pow(eprot,3)*pow(mKst,4) - 32*pow(epi,2)*pow(eprot,4)*mLamC + 16*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLamC + 24*epi*pow(eprot,3)*pow(mKst,2)*mLamC - 4*epi*eprot*pow(mKst,4)*mLamC - 4*pow(eprot,2)*pow(mKst,4)*mLamC + 48*pow(epi,2)*pow(eprot,3)*pow(mLamC,2) - 8*pow(epi,2)*eprot*pow(mKst,2)*pow(mLamC,2) - 24*epi*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2) + 2*eprot*pow(mKst,4)*pow(mLamC,2) - 32*pow(epi,2)*pow(eprot,2)*pow(mLamC,3) + 8*epi*eprot*pow(mKst,2)*pow(mLamC,3) + 8*pow(epi,2)*eprot*pow(mLamC,4) - 8*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mp + 4*epi*eprot*pow(mKst,4)*mp + 16*pow(epi,2)*eprot*pow(mKst,2)*mLamC*mp - 4*epi*pow(mKst,4)*mLamC*mp - 8*pow(epi,2)*pow(mKst,2)*pow(mLamC,2)*mp - 4*eprot*pow(mKst,4)*pow(mpi,2) + 4*pow(mKst,4)*mp*pow(mpi,2) - 8*pow(epi,2)*pow(eprot,3)*pow(ppp,2) + 4*pow(eprot,3)*pow(kkk,2)*pow(ppp,2) + 8*pow(epi,2)*eprot*pow(mKst,2)*pow(ppp,2) + 8*epi*pow(eprot,2)*pow(mKst,2)*pow(ppp,2) - 4*epi*pow(mKst,4)*pow(ppp,2) - 2*eprot*pow(mKst,4)*pow(ppp,2) + 24*pow(epi,2)*pow(eprot,2)*mLamC*pow(ppp,2) - 8*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2) - 8*pow(epi,2)*pow(mKst,2)*mLamC*pow(ppp,2) - 16*epi*eprot*pow(mKst,2)*mLamC*pow(ppp,2) + 4*pow(kkk,2)*pow(mKst,2)*mLamC*pow(ppp,2) + 2*pow(mKst,4)*mLamC*pow(ppp,2) - 24*pow(epi,2)*eprot*pow(mLamC,2)*pow(ppp,2) + 4*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) + 8*epi*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) + 8*pow(epi,2)*pow(mLamC,3)*pow(ppp,2) - 4*pow(kkk,2)*pow(mKst,2)*mp*pow(ppp,2) - 4*eprot*pow(kkk,2)*pow(ppp,4) + 4*pow(kkk,2)*mLamC*pow(ppp,4) - 4*pow(epi,2)*pow(eprot,3)*s23 + 8*epi*pow(eprot,4)*s23 - 4*pow(eprot,3)*pow(mKst,2)*s23 - eprot*pow(mKst,4)*s23 + 8*pow(epi,2)*pow(eprot,2)*mLamC*s23 - 24*epi*pow(eprot,3)*mLamC*s23 + 8*pow(eprot,2)*pow(mKst,2)*mLamC*s23 - 4*pow(epi,2)*eprot*pow(mLamC,2)*s23 + 24*epi*pow(eprot,2)*pow(mLamC,2)*s23 - 4*eprot*pow(mKst,2)*pow(mLamC,2)*s23 - 8*epi*eprot*pow(mLamC,3)*s23 + 4*pow(epi,2)*pow(eprot,2)*mp*s23 - 8*epi*eprot*pow(mKst,2)*mp*s23 + pow(mKst,4)*mp*s23 - 8*pow(epi,2)*eprot*mLamC*mp*s23 + 8*epi*pow(mKst,2)*mLamC*mp*s23 + 4*pow(epi,2)*pow(mLamC,2)*mp*s23 - 8*epi*pow(eprot,2)*pow(ppp,2)*s23 - 2*eprot*pow(kkk,2)*pow(ppp,2)*s23 + 4*epi*pow(mKst,2)*pow(ppp,2)*s23 + 4*eprot*pow(mKst,2)*pow(ppp,2)*s23 + 16*epi*eprot*mLamC*pow(ppp,2)*s23 - 4*pow(mKst,2)*mLamC*pow(ppp,2)*s23 - 8*epi*pow(mLamC,2)*pow(ppp,2)*s23 + 2*pow(kkk,2)*mp*pow(ppp,2)*s23 - 4*epi*pow(eprot,2)*pow(s23,2) + 2*pow(eprot,3)*pow(s23,2) + 2*eprot*pow(mKst,2)*pow(s23,2) + 4*epi*eprot*mLamC*pow(s23,2) - 4*pow(eprot,2)*mLamC*pow(s23,2) + 2*eprot*pow(mLamC,2)*pow(s23,2) + 4*epi*eprot*mp*pow(s23,2) - 2*pow(mKst,2)*mp*pow(s23,2) - 4*epi*mLamC*mp*pow(s23,2) - 2*eprot*pow(ppp,2)*pow(s23,2) + 2*mLamC*pow(ppp,2)*pow(s23,2) - eprot*pow(s23,3) + mp*pow(s23,3) - 4*kkk*ppp*(-((pow(mKst,2) - s23)*(2*pow(eprot,3) - 4*pow(eprot,2)*mLamC + pow(mKst,2)*(mLamC - mp) + 2*mLamC*pow(ppp,2) + eprot*(2*pow(mLamC,2) - 2*pow(ppp,2) - s23) + mp*s23)) + 2*epi*(2*pow(eprot,4) + pow(mKst,4) - 6*pow(eprot,3)*mLamC + pow(mKst,2)*(-pow(mLamC,2) + 2*mLamC*mp + pow(ppp,2)) - pow(eprot,2)*(pow(mKst,2) - 6*pow(mLamC,2) + 2*pow(ppp,2) + s23) - mLamC*(2*mLamC*pow(ppp,2) + mp*s23) + eprot*(-2*pow(mLamC,3) + 2*pow(mKst,2)*(mLamC - mp) + 4*mLamC*pow(ppp,2) + mLamC*s23 + mp*s23)))*cos(psi) + 2*pow(kkk,2)*pow(ppp,2)*(2*pow(eprot,3) - 4*pow(eprot,2)*mLamC + 2*pow(mKst,2)*(mLamC - mp) + 2*mLamC*pow(ppp,2) + eprot*(2*pow(mLamC,2) - 2*pow(ppp,2) - s23) + mp*s23)*cos(2*psi)))/pow(mKst,4));
	    	break;
	    case FormulaParam::A22://f6
	    	return BW2(s23,mKst,GKst)*((2*pow(mLamC,3)*(eprot + mp)*pow(-2*epi*(pow(eprot,2) - pow(mKst,2) - 2*eprot*mLamC + pow(mLamC,2)) + (eprot - mLamC)*(pow(mKst,2) - s23) + 2*kkk*(eprot - mLamC)*ppp*cos(psi),2))/pow(mKst,4));
	    	break;
	    case FormulaParam::B12://f7
	    	return BW2(s23,mKst,GKst)*((2*mLamC*(8*pow(epi,2)*pow(eprot,5) - 8*pow(epi,2)*pow(eprot,3)*pow(mKst,2) - 8*epi*pow(eprot,4)*pow(mKst,2) + 8*pow(epi,2)*eprot*pow(mKst,4) + 4*epi*pow(eprot,2)*pow(mKst,4) + 2*pow(eprot,3)*pow(mKst,4) - 32*pow(epi,2)*pow(eprot,4)*mLamC + 16*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLamC + 24*epi*pow(eprot,3)*pow(mKst,2)*mLamC - 4*epi*eprot*pow(mKst,4)*mLamC - 4*pow(eprot,2)*pow(mKst,4)*mLamC + 48*pow(epi,2)*pow(eprot,3)*pow(mLamC,2) - 8*pow(epi,2)*eprot*pow(mKst,2)*pow(mLamC,2) - 24*epi*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2) + 2*eprot*pow(mKst,4)*pow(mLamC,2) - 32*pow(epi,2)*pow(eprot,2)*pow(mLamC,3) + 8*epi*eprot*pow(mKst,2)*pow(mLamC,3) + 8*pow(epi,2)*eprot*pow(mLamC,4) + 8*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mp - 4*epi*eprot*pow(mKst,4)*mp - 16*pow(epi,2)*eprot*pow(mKst,2)*mLamC*mp + 4*epi*pow(mKst,4)*mLamC*mp + 8*pow(epi,2)*pow(mKst,2)*pow(mLamC,2)*mp - 4*eprot*pow(mKst,4)*pow(mpi,2) - 4*pow(mKst,4)*mp*pow(mpi,2) - 8*pow(epi,2)*pow(eprot,3)*pow(ppp,2) + 4*pow(eprot,3)*pow(kkk,2)*pow(ppp,2) + 8*pow(epi,2)*eprot*pow(mKst,2)*pow(ppp,2) + 8*epi*pow(eprot,2)*pow(mKst,2)*pow(ppp,2) - 4*epi*pow(mKst,4)*pow(ppp,2) - 2*eprot*pow(mKst,4)*pow(ppp,2) + 24*pow(epi,2)*pow(eprot,2)*mLamC*pow(ppp,2) - 8*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2) - 8*pow(epi,2)*pow(mKst,2)*mLamC*pow(ppp,2) - 16*epi*eprot*pow(mKst,2)*mLamC*pow(ppp,2) + 4*pow(kkk,2)*pow(mKst,2)*mLamC*pow(ppp,2) + 2*pow(mKst,4)*mLamC*pow(ppp,2) - 24*pow(epi,2)*eprot*pow(mLamC,2)*pow(ppp,2) + 4*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) + 8*epi*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) + 8*pow(epi,2)*pow(mLamC,3)*pow(ppp,2) + 4*pow(kkk,2)*pow(mKst,2)*mp*pow(ppp,2) - 4*eprot*pow(kkk,2)*pow(ppp,4) + 4*pow(kkk,2)*mLamC*pow(ppp,4) - 4*pow(epi,2)*pow(eprot,3)*s23 + 8*epi*pow(eprot,4)*s23 - 4*pow(eprot,3)*pow(mKst,2)*s23 - eprot*pow(mKst,4)*s23 + 8*pow(epi,2)*pow(eprot,2)*mLamC*s23 - 24*epi*pow(eprot,3)*mLamC*s23 + 8*pow(eprot,2)*pow(mKst,2)*mLamC*s23 - 4*pow(epi,2)*eprot*pow(mLamC,2)*s23 + 24*epi*pow(eprot,2)*pow(mLamC,2)*s23 - 4*eprot*pow(mKst,2)*pow(mLamC,2)*s23 - 8*epi*eprot*pow(mLamC,3)*s23 - 4*pow(epi,2)*pow(eprot,2)*mp*s23 + 8*epi*eprot*pow(mKst,2)*mp*s23 - pow(mKst,4)*mp*s23 + 8*pow(epi,2)*eprot*mLamC*mp*s23 - 8*epi*pow(mKst,2)*mLamC*mp*s23 - 4*pow(epi,2)*pow(mLamC,2)*mp*s23 - 8*epi*pow(eprot,2)*pow(ppp,2)*s23 - 2*eprot*pow(kkk,2)*pow(ppp,2)*s23 + 4*epi*pow(mKst,2)*pow(ppp,2)*s23 + 4*eprot*pow(mKst,2)*pow(ppp,2)*s23 + 16*epi*eprot*mLamC*pow(ppp,2)*s23 - 4*pow(mKst,2)*mLamC*pow(ppp,2)*s23 - 8*epi*pow(mLamC,2)*pow(ppp,2)*s23 - 2*pow(kkk,2)*mp*pow(ppp,2)*s23 - 4*epi*pow(eprot,2)*pow(s23,2) + 2*pow(eprot,3)*pow(s23,2) + 2*eprot*pow(mKst,2)*pow(s23,2) + 4*epi*eprot*mLamC*pow(s23,2) - 4*pow(eprot,2)*mLamC*pow(s23,2) + 2*eprot*pow(mLamC,2)*pow(s23,2) - 4*epi*eprot*mp*pow(s23,2) + 2*pow(mKst,2)*mp*pow(s23,2) + 4*epi*mLamC*mp*pow(s23,2) - 2*eprot*pow(ppp,2)*pow(s23,2) + 2*mLamC*pow(ppp,2)*pow(s23,2) - eprot*pow(s23,3) - mp*pow(s23,3) + 4*kkk*ppp*((pow(mKst,2) - s23)*(2*pow(eprot,3) - 4*pow(eprot,2)*mLamC + pow(mKst,2)*(mLamC + mp) + 2*mLamC*pow(ppp,2) + eprot*(2*pow(mLamC,2) - 2*pow(ppp,2) - s23) - mp*s23) - 2*epi*(2*pow(eprot,4) + pow(mKst,4) - 6*pow(eprot,3)*mLamC + pow(mKst,2)*(-pow(mLamC,2) - 2*mLamC*mp + pow(ppp,2)) - pow(eprot,2)*(pow(mKst,2) - 6*pow(mLamC,2) + 2*pow(ppp,2) + s23) + eprot*(-2*pow(mLamC,3) + 2*pow(mKst,2)*(mLamC + mp) + 4*mLamC*pow(ppp,2) + mLamC*s23 - mp*s23) + mLamC*(-2*mLamC*pow(ppp,2) + mp*s23)))*cos(psi) - 2*pow(kkk,2)*pow(ppp,2)*(-2*pow(eprot,3) + 4*pow(eprot,2)*mLamC - 2*pow(mKst,2)*(mLamC + mp) - 2*mLamC*pow(ppp,2) + mp*s23 + eprot*(-2*pow(mLamC,2) + 2*pow(ppp,2) + s23))*cos(2*psi)))/pow(mKst,4));
	    	break;
	    case FormulaParam::B22://f8
	    	return BW2(s23,mKst,GKst)*((2*pow(mLamC,3)*(eprot - mp)*pow(-2*epi*(pow(eprot,2) - pow(mKst,2) - 2*eprot*mLamC + pow(mLamC,2)) + (eprot - mLamC)*(pow(mKst,2) - s23) + 2*kkk*(eprot - mLamC)*ppp*cos(psi),2))/pow(mKst,4));
	    	break;
	    case FormulaParam::ReA1A2://f9
	    	return BW2(s23,mKst,GKst)*((4*pow(mLamC,2)*(2*epi*(pow(eprot,2) - pow(mKst,2) - 2*eprot*mLamC + pow(mLamC,2)) - (eprot - mLamC)*(pow(mKst,2) - s23) - 2*kkk*(eprot - mLamC)*ppp*cos(psi))*(2*epi*(pow(eprot,3) - pow(mKst,2)*mp + pow(eprot,2)*(-2*mLamC + mp) + mLamC*(mLamC*mp + pow(ppp,2)) - eprot*(pow(mKst,2) - pow(mLamC,2) + 2*mLamC*mp + pow(ppp,2))) - (pow(eprot,2) - mLamC*mp + eprot*(-mLamC + mp) - pow(ppp,2))*(pow(mKst,2) - s23) + 2*kkk*ppp*(-pow(eprot,2) + pow(mKst,2) + eprot*(mLamC - mp) + mLamC*mp + pow(ppp,2))*cos(psi)))/pow(mKst,4));
	    	break;
	    case FormulaParam::ReB1B2://f10
	    	return BW2(s23,mKst,GKst)*((4*pow(mLamC,2)*(2*epi*(pow(eprot,2) - pow(mKst,2) - 2*eprot*mLamC + pow(mLamC,2)) - (eprot - mLamC)*(pow(mKst,2) - s23) - 2*kkk*(eprot - mLamC)*ppp*cos(psi))*(2*epi*(pow(eprot,3) + pow(mKst,2)*mp - pow(eprot,2)*(2*mLamC + mp) - eprot*(pow(mKst,2) - pow(mLamC,2) - 2*mLamC*mp + pow(ppp,2)) + mLamC*(-(mLamC*mp) + pow(ppp,2))) - (pow(eprot,2) + mLamC*mp - eprot*(mLamC + mp) - pow(ppp,2))*(pow(mKst,2) - s23) + 2*kkk*ppp*(-pow(eprot,2) + pow(mKst,2) - mLamC*mp + eprot*(mLamC + mp) + pow(ppp,2))*cos(psi)))/pow(mKst,4));
	    	break;
	    case FormulaParam::ReAD: //f11
	    	return -ReBWTwoResonances(s13, mDel, GDel, s12, mLam, GLam)*((pow(mLamC,3)*(-16*pow(epi,6)*pow(eprot,3) - 48*pow(epi,5)*pow(eprot,4) - 48*pow(epi,4)*pow(eprot,5) - 16*pow(epi,3)*pow(eprot,6) - 16*pow(epi,4)*pow(eprot,3)*pow(kkk,2) - 32*pow(epi,3)*pow(eprot,4)*pow(kkk,2) - 16*pow(epi,2)*pow(eprot,5)*pow(kkk,2) + 24*pow(epi,5)*pow(eprot,3)*mDel + 48*pow(epi,4)*pow(eprot,4)*mDel + 24*pow(epi,3)*pow(eprot,5)*mDel - 8*pow(epi,3)*pow(eprot,3)*pow(kkk,2)*mDel - 8*pow(epi,2)*pow(eprot,4)*pow(kkk,2)*mDel + 24*pow(epi,5)*pow(eprot,3)*mLam + 72*pow(epi,4)*pow(eprot,4)*mLam + 72*pow(epi,3)*pow(eprot,5)*mLam + 24*pow(epi,2)*pow(eprot,6)*mLam - 8*pow(epi,3)*pow(eprot,3)*pow(kkk,2)*mLam - 16*pow(epi,2)*pow(eprot,4)*pow(kkk,2)*mLam - 8*epi*pow(eprot,5)*pow(kkk,2)*mLam - 36*pow(epi,4)*pow(eprot,3)*mDel*mLam - 72*pow(epi,3)*pow(eprot,4)*mDel*mLam - 36*pow(epi,2)*pow(eprot,5)*mDel*mLam - 4*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*mDel*mLam - 4*epi*pow(eprot,4)*pow(kkk,2)*mDel*mLam + 48*pow(epi,5)*pow(eprot,3)*mLamC + 144*pow(epi,4)*pow(eprot,4)*mLamC + 144*pow(epi,3)*pow(eprot,5)*mLamC + 48*pow(epi,2)*pow(eprot,6)*mLamC + 32*pow(epi,3)*pow(eprot,3)*pow(kkk,2)*mLamC + 64*pow(epi,2)*pow(eprot,4)*pow(kkk,2)*mLamC + 32*epi*pow(eprot,5)*pow(kkk,2)*mLamC - 72*pow(epi,4)*pow(eprot,3)*mDel*mLamC - 144*pow(epi,3)*pow(eprot,4)*mDel*mLamC - 72*pow(epi,2)*pow(eprot,5)*mDel*mLamC + 16*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*mDel*mLamC + 16*epi*pow(eprot,4)*pow(kkk,2)*mDel*mLamC - 48*pow(epi,4)*pow(eprot,3)*mLam*mLamC - 144*pow(epi,3)*pow(eprot,4)*mLam*mLamC - 144*pow(epi,2)*pow(eprot,5)*mLam*mLamC - 48*epi*pow(eprot,6)*mLam*mLamC + 8*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*mLam*mLamC + 16*epi*pow(eprot,4)*pow(kkk,2)*mLam*mLamC + 8*pow(eprot,5)*pow(kkk,2)*mLam*mLamC + 72*pow(epi,3)*pow(eprot,3)*mDel*mLam*mLamC + 144*pow(epi,2)*pow(eprot,4)*mDel*mLam*mLamC + 72*epi*pow(eprot,5)*mDel*mLam*mLamC + 4*epi*pow(eprot,3)*pow(kkk,2)*mDel*mLam*mLamC + 4*pow(eprot,4)*pow(kkk,2)*mDel*mLam*mLamC - 48*pow(epi,4)*pow(eprot,3)*pow(mLamC,2) - 144*pow(epi,3)*pow(eprot,4)*pow(mLamC,2) - 144*pow(epi,2)*pow(eprot,5)*pow(mLamC,2) - 48*epi*pow(eprot,6)*pow(mLamC,2) - 16*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*pow(mLamC,2) - 32*epi*pow(eprot,4)*pow(kkk,2)*pow(mLamC,2) - 16*pow(eprot,5)*pow(kkk,2)*pow(mLamC,2) + 72*pow(epi,3)*pow(eprot,3)*mDel*pow(mLamC,2) + 144*pow(epi,2)*pow(eprot,4)*mDel*pow(mLamC,2) + 72*epi*pow(eprot,5)*mDel*pow(mLamC,2) - 8*epi*pow(eprot,3)*pow(kkk,2)*mDel*pow(mLamC,2) - 8*pow(eprot,4)*pow(kkk,2)*mDel*pow(mLamC,2) + 24*pow(epi,3)*pow(eprot,3)*mLam*pow(mLamC,2) + 72*pow(epi,2)*pow(eprot,4)*mLam*pow(mLamC,2) + 72*epi*pow(eprot,5)*mLam*pow(mLamC,2) + 24*pow(eprot,6)*mLam*pow(mLamC,2) - 36*pow(epi,2)*pow(eprot,3)*mDel*mLam*pow(mLamC,2) - 72*epi*pow(eprot,4)*mDel*mLam*pow(mLamC,2) - 36*pow(eprot,5)*mDel*mLam*pow(mLamC,2) + 16*pow(epi,3)*pow(eprot,3)*pow(mLamC,3) + 48*pow(epi,2)*pow(eprot,4)*pow(mLamC,3) + 48*epi*pow(eprot,5)*pow(mLamC,3) + 16*pow(eprot,6)*pow(mLamC,3) - 24*pow(epi,2)*pow(eprot,3)*mDel*pow(mLamC,3) - 48*epi*pow(eprot,4)*mDel*pow(mLamC,3) - 24*pow(eprot,5)*mDel*pow(mLamC,3) + 16*pow(epi,6)*pow(eprot,2)*mp + 48*pow(epi,5)*pow(eprot,3)*mp + 48*pow(epi,4)*pow(eprot,4)*mp + 16*pow(epi,3)*pow(eprot,5)*mp - 16*pow(epi,4)*pow(eprot,2)*pow(kkk,2)*mp - 32*pow(epi,3)*pow(eprot,3)*pow(kkk,2)*mp - 16*pow(epi,2)*pow(eprot,4)*pow(kkk,2)*mp - 16*pow(epi,5)*pow(eprot,2)*mDel*mp - 32*pow(epi,4)*pow(eprot,3)*mDel*mp - 16*pow(epi,3)*pow(eprot,4)*mDel*mp - 16*pow(epi,5)*pow(eprot,2)*mLam*mp - 48*pow(epi,4)*pow(eprot,3)*mLam*mp - 48*pow(epi,3)*pow(eprot,4)*mLam*mp - 16*pow(epi,2)*pow(eprot,5)*mLam*mp + 12*pow(epi,4)*pow(eprot,2)*mDel*mLam*mp + 24*pow(epi,3)*pow(eprot,3)*mDel*mLam*mp + 12*pow(epi,2)*pow(eprot,4)*mDel*mLam*mp + 4*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mDel*mLam*mp + 4*epi*pow(eprot,3)*pow(kkk,2)*mDel*mLam*mp - 48*pow(epi,5)*pow(eprot,2)*mLamC*mp - 144*pow(epi,4)*pow(eprot,3)*mLamC*mp - 144*pow(epi,3)*pow(eprot,4)*mLamC*mp - 48*pow(epi,2)*pow(eprot,5)*mLamC*mp + 32*pow(epi,3)*pow(eprot,2)*pow(kkk,2)*mLamC*mp + 64*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*mLamC*mp + 32*epi*pow(eprot,4)*pow(kkk,2)*mLamC*mp + 48*pow(epi,4)*pow(eprot,2)*mDel*mLamC*mp + 96*pow(epi,3)*pow(eprot,3)*mDel*mLamC*mp + 48*pow(epi,2)*pow(eprot,4)*mDel*mLamC*mp + 32*pow(epi,4)*pow(eprot,2)*mLam*mLamC*mp + 96*pow(epi,3)*pow(eprot,3)*mLam*mLamC*mp + 96*pow(epi,2)*pow(eprot,4)*mLam*mLamC*mp + 32*epi*pow(eprot,5)*mLam*mLamC*mp - 24*pow(epi,3)*pow(eprot,2)*mDel*mLam*mLamC*mp - 48*pow(epi,2)*pow(eprot,3)*mDel*mLam*mLamC*mp - 24*epi*pow(eprot,4)*mDel*mLam*mLamC*mp - 4*epi*pow(eprot,2)*pow(kkk,2)*mDel*mLam*mLamC*mp - 4*pow(eprot,3)*pow(kkk,2)*mDel*mLam*mLamC*mp + 48*pow(epi,4)*pow(eprot,2)*pow(mLamC,2)*mp + 144*pow(epi,3)*pow(eprot,3)*pow(mLamC,2)*mp + 144*pow(epi,2)*pow(eprot,4)*pow(mLamC,2)*mp + 48*epi*pow(eprot,5)*pow(mLamC,2)*mp - 16*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*mp - 32*epi*pow(eprot,3)*pow(kkk,2)*pow(mLamC,2)*mp - 16*pow(eprot,4)*pow(kkk,2)*pow(mLamC,2)*mp - 48*pow(epi,3)*pow(eprot,2)*mDel*pow(mLamC,2)*mp - 96*pow(epi,2)*pow(eprot,3)*mDel*pow(mLamC,2)*mp - 48*epi*pow(eprot,4)*mDel*pow(mLamC,2)*mp - 16*pow(epi,3)*pow(eprot,2)*mLam*pow(mLamC,2)*mp - 48*pow(epi,2)*pow(eprot,3)*mLam*pow(mLamC,2)*mp - 48*epi*pow(eprot,4)*mLam*pow(mLamC,2)*mp - 16*pow(eprot,5)*mLam*pow(mLamC,2)*mp + 12*pow(epi,2)*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*mp + 24*epi*pow(eprot,3)*mDel*mLam*pow(mLamC,2)*mp + 12*pow(eprot,4)*mDel*mLam*pow(mLamC,2)*mp - 16*pow(epi,3)*pow(eprot,2)*pow(mLamC,3)*mp - 48*pow(epi,2)*pow(eprot,3)*pow(mLamC,3)*mp - 48*epi*pow(eprot,4)*pow(mLamC,3)*mp - 16*pow(eprot,5)*pow(mLamC,3)*mp + 16*pow(epi,2)*pow(eprot,2)*mDel*pow(mLamC,3)*mp + 32*epi*pow(eprot,3)*mDel*pow(mLamC,3)*mp + 16*pow(eprot,4)*mDel*pow(mLamC,3)*mp - 8*pow(epi,5)*eprot*mDel*pow(mp,2) - 16*pow(epi,4)*pow(eprot,2)*mDel*pow(mp,2) - 8*pow(epi,3)*pow(eprot,3)*mDel*pow(mp,2) + 8*pow(epi,3)*eprot*pow(kkk,2)*mDel*pow(mp,2) + 8*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mDel*pow(mp,2) - 8*pow(epi,5)*eprot*mLam*pow(mp,2) - 24*pow(epi,4)*pow(eprot,2)*mLam*pow(mp,2) - 24*pow(epi,3)*pow(eprot,3)*mLam*pow(mp,2) - 8*pow(epi,2)*pow(eprot,4)*mLam*pow(mp,2) + 8*pow(epi,3)*eprot*pow(kkk,2)*mLam*pow(mp,2) + 16*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mLam*pow(mp,2) + 8*epi*pow(eprot,3)*pow(kkk,2)*mLam*pow(mp,2) + 20*pow(epi,4)*eprot*mDel*mLam*pow(mp,2) + 40*pow(epi,3)*pow(eprot,2)*mDel*mLam*pow(mp,2) + 20*pow(epi,2)*pow(eprot,3)*mDel*mLam*pow(mp,2) + 4*pow(epi,2)*eprot*pow(kkk,2)*mDel*mLam*pow(mp,2) + 4*epi*pow(eprot,2)*pow(kkk,2)*mDel*mLam*pow(mp,2) + 24*pow(epi,4)*eprot*mDel*mLamC*pow(mp,2) + 48*pow(epi,3)*pow(eprot,2)*mDel*mLamC*pow(mp,2) + 24*pow(epi,2)*pow(eprot,3)*mDel*mLamC*pow(mp,2) - 16*pow(epi,2)*eprot*pow(kkk,2)*mDel*mLamC*pow(mp,2) - 16*epi*pow(eprot,2)*pow(kkk,2)*mDel*mLamC*pow(mp,2) + 16*pow(epi,4)*eprot*mLam*mLamC*pow(mp,2) + 48*pow(epi,3)*pow(eprot,2)*mLam*mLamC*pow(mp,2) + 48*pow(epi,2)*pow(eprot,3)*mLam*mLamC*pow(mp,2) + 16*epi*pow(eprot,4)*mLam*mLamC*pow(mp,2) - 8*pow(epi,2)*eprot*pow(kkk,2)*mLam*mLamC*pow(mp,2) - 16*epi*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*pow(mp,2) - 8*pow(eprot,3)*pow(kkk,2)*mLam*mLamC*pow(mp,2) - 40*pow(epi,3)*eprot*mDel*mLam*mLamC*pow(mp,2) - 80*pow(epi,2)*pow(eprot,2)*mDel*mLam*mLamC*pow(mp,2) - 40*epi*pow(eprot,3)*mDel*mLam*mLamC*pow(mp,2) - 4*epi*eprot*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,2) - 4*pow(eprot,2)*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,2) - 24*pow(epi,3)*eprot*mDel*pow(mLamC,2)*pow(mp,2) - 48*pow(epi,2)*pow(eprot,2)*mDel*pow(mLamC,2)*pow(mp,2) - 24*epi*pow(eprot,3)*mDel*pow(mLamC,2)*pow(mp,2) + 8*epi*eprot*pow(kkk,2)*mDel*pow(mLamC,2)*pow(mp,2) + 8*pow(eprot,2)*pow(kkk,2)*mDel*pow(mLamC,2)*pow(mp,2) - 8*pow(epi,3)*eprot*mLam*pow(mLamC,2)*pow(mp,2) - 24*pow(epi,2)*pow(eprot,2)*mLam*pow(mLamC,2)*pow(mp,2) - 24*epi*pow(eprot,3)*mLam*pow(mLamC,2)*pow(mp,2) - 8*pow(eprot,4)*mLam*pow(mLamC,2)*pow(mp,2) + 20*pow(epi,2)*eprot*mDel*mLam*pow(mLamC,2)*pow(mp,2) + 40*epi*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*pow(mp,2) + 20*pow(eprot,3)*mDel*mLam*pow(mLamC,2)*pow(mp,2) + 8*pow(epi,2)*eprot*mDel*pow(mLamC,3)*pow(mp,2) + 16*epi*pow(eprot,2)*mDel*pow(mLamC,3)*pow(mp,2) + 8*pow(eprot,3)*mDel*pow(mLamC,3)*pow(mp,2) + 4*pow(epi,4)*mDel*mLam*pow(mp,3) + 8*pow(epi,3)*eprot*mDel*mLam*pow(mp,3) + 4*pow(epi,2)*pow(eprot,2)*mDel*mLam*pow(mp,3) - 4*pow(epi,2)*pow(kkk,2)*mDel*mLam*pow(mp,3) - 4*epi*eprot*pow(kkk,2)*mDel*mLam*pow(mp,3) - 8*pow(epi,3)*mDel*mLam*mLamC*pow(mp,3) - 16*pow(epi,2)*eprot*mDel*mLam*mLamC*pow(mp,3) - 8*epi*pow(eprot,2)*mDel*mLam*mLamC*pow(mp,3) + 4*epi*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,3) + 4*eprot*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,3) + 4*pow(epi,2)*mDel*mLam*pow(mLamC,2)*pow(mp,3) + 8*epi*eprot*mDel*mLam*pow(mLamC,2)*pow(mp,3) + 4*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*pow(mp,3) + 32*pow(epi,5)*pow(eprot,2)*pow(ppp,2) + 64*pow(epi,4)*pow(eprot,3)*pow(ppp,2) + 32*pow(epi,3)*pow(eprot,4)*pow(ppp,2) - 40*pow(epi,4)*eprot*pow(kkk,2)*pow(ppp,2) - 48*pow(epi,3)*pow(eprot,2)*pow(kkk,2)*pow(ppp,2) - 8*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*pow(ppp,2) - 8*pow(epi,2)*eprot*pow(kkk,4)*pow(ppp,2) - 8*epi*pow(eprot,2)*pow(kkk,4)*pow(ppp,2) - 16*pow(epi,4)*pow(eprot,2)*mDel*pow(ppp,2) - 16*pow(epi,3)*pow(eprot,3)*mDel*pow(ppp,2) + 28*pow(epi,3)*eprot*pow(kkk,2)*mDel*pow(ppp,2) + 60*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,2) + 16*epi*pow(eprot,3)*pow(kkk,2)*mDel*pow(ppp,2) - 4*epi*eprot*pow(kkk,4)*mDel*pow(ppp,2) - 48*pow(epi,4)*pow(eprot,2)*mLam*pow(ppp,2) - 96*pow(epi,3)*pow(eprot,3)*mLam*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,4)*mLam*pow(ppp,2) + 28*pow(epi,3)*eprot*pow(kkk,2)*mLam*pow(ppp,2) + 56*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mLam*pow(ppp,2) + 28*epi*pow(eprot,3)*pow(kkk,2)*mLam*pow(ppp,2) - 4*epi*eprot*pow(kkk,4)*mLam*pow(ppp,2) - 4*pow(eprot,2)*pow(kkk,4)*mLam*pow(ppp,2) + 24*pow(epi,3)*pow(eprot,2)*mDel*mLam*pow(ppp,2) + 24*pow(epi,2)*pow(eprot,3)*mDel*mLam*pow(ppp,2) + 6*pow(epi,2)*eprot*pow(kkk,2)*mDel*mLam*pow(ppp,2) + 14*epi*pow(eprot,2)*pow(kkk,2)*mDel*mLam*pow(ppp,2) + 8*pow(eprot,3)*pow(kkk,2)*mDel*mLam*pow(ppp,2) - 2*eprot*pow(kkk,4)*mDel*mLam*pow(ppp,2) - 96*pow(epi,4)*pow(eprot,2)*mLamC*pow(ppp,2) - 192*pow(epi,3)*pow(eprot,3)*mLamC*pow(ppp,2) - 96*pow(epi,2)*pow(eprot,4)*mLamC*pow(ppp,2) + 80*pow(epi,3)*eprot*pow(kkk,2)*mLamC*pow(ppp,2) + 88*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2) + 8*epi*pow(eprot,3)*pow(kkk,2)*mLamC*pow(ppp,2) + 8*epi*eprot*pow(kkk,4)*mLamC*pow(ppp,2) + 8*pow(eprot,2)*pow(kkk,4)*mLamC*pow(ppp,2) + 48*pow(epi,3)*pow(eprot,2)*mDel*mLamC*pow(ppp,2) + 48*pow(epi,2)*pow(eprot,3)*mDel*mLamC*pow(ppp,2) - 40*pow(epi,2)*eprot*pow(kkk,2)*mDel*mLamC*pow(ppp,2) - 92*epi*pow(eprot,2)*pow(kkk,2)*mDel*mLamC*pow(ppp,2) - 16*pow(eprot,3)*pow(kkk,2)*mDel*mLamC*pow(ppp,2) + 4*eprot*pow(kkk,4)*mDel*mLamC*pow(ppp,2) + 96*pow(epi,3)*pow(eprot,2)*mLam*mLamC*pow(ppp,2) + 192*pow(epi,2)*pow(eprot,3)*mLam*mLamC*pow(ppp,2) + 96*epi*pow(eprot,4)*mLam*mLamC*pow(ppp,2) - 44*pow(epi,2)*eprot*pow(kkk,2)*mLam*mLamC*pow(ppp,2) - 76*epi*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*pow(ppp,2) - 32*pow(eprot,3)*pow(kkk,2)*mLam*mLamC*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,2)*mDel*mLam*mLamC*pow(ppp,2) - 48*epi*pow(eprot,3)*mDel*mLam*mLamC*pow(ppp,2) - 6*epi*eprot*pow(kkk,2)*mDel*mLam*mLamC*pow(ppp,2) + 96*pow(epi,3)*pow(eprot,2)*pow(mLamC,2)*pow(ppp,2) + 192*pow(epi,2)*pow(eprot,3)*pow(mLamC,2)*pow(ppp,2) + 96*epi*pow(eprot,4)*pow(mLamC,2)*pow(ppp,2) - 48*pow(epi,2)*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 48*epi*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,2)*mDel*pow(mLamC,2)*pow(ppp,2) - 48*epi*pow(eprot,3)*mDel*pow(mLamC,2)*pow(ppp,2) + 8*epi*eprot*pow(kkk,2)*mDel*pow(mLamC,2)*pow(ppp,2) + 32*pow(eprot,2)*pow(kkk,2)*mDel*pow(mLamC,2)*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 96*epi*pow(eprot,3)*mLam*pow(mLamC,2)*pow(ppp,2) - 48*pow(eprot,4)*mLam*pow(mLamC,2)*pow(ppp,2) + 12*epi*eprot*pow(kkk,2)*mLam*pow(mLamC,2)*pow(ppp,2) + 12*pow(eprot,2)*pow(kkk,2)*mLam*pow(mLamC,2)*pow(ppp,2) + 24*epi*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*pow(ppp,2) + 24*pow(eprot,3)*mDel*mLam*pow(mLamC,2)*pow(ppp,2) + 6*eprot*pow(kkk,2)*mDel*mLam*pow(mLamC,2)*pow(ppp,2) - 32*pow(epi,2)*pow(eprot,2)*pow(mLamC,3)*pow(ppp,2) - 64*epi*pow(eprot,3)*pow(mLamC,3)*pow(ppp,2) - 32*pow(eprot,4)*pow(mLamC,3)*pow(ppp,2) + 8*epi*eprot*pow(kkk,2)*pow(mLamC,3)*pow(ppp,2) + 8*pow(eprot,2)*pow(kkk,2)*pow(mLamC,3)*pow(ppp,2) + 16*epi*pow(eprot,2)*mDel*pow(mLamC,3)*pow(ppp,2) + 16*pow(eprot,3)*mDel*pow(mLamC,3)*pow(ppp,2) + 4*eprot*pow(kkk,2)*mDel*pow(mLamC,3)*pow(ppp,2) - 16*pow(epi,5)*eprot*mp*pow(ppp,2) - 32*pow(epi,4)*pow(eprot,2)*mp*pow(ppp,2) - 16*pow(epi,3)*pow(eprot,3)*mp*pow(ppp,2) + 8*pow(epi,4)*pow(kkk,2)*mp*pow(ppp,2) + 48*pow(epi,3)*eprot*pow(kkk,2)*mp*pow(ppp,2) + 48*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mp*pow(ppp,2) + 8*epi*pow(eprot,3)*pow(kkk,2)*mp*pow(ppp,2) - 8*pow(epi,2)*pow(kkk,4)*mp*pow(ppp,2) - 8*epi*eprot*pow(kkk,4)*mp*pow(ppp,2) + 16*pow(epi,4)*eprot*mDel*mp*pow(ppp,2) + 16*pow(epi,3)*pow(eprot,2)*mDel*mp*pow(ppp,2) - 4*pow(epi,3)*pow(kkk,2)*mDel*mp*pow(ppp,2) + 12*pow(epi,2)*eprot*pow(kkk,2)*mDel*mp*pow(ppp,2) + 4*epi*pow(eprot,2)*pow(kkk,2)*mDel*mp*pow(ppp,2) - 4*epi*pow(kkk,4)*mDel*mp*pow(ppp,2) + 8*pow(epi,4)*eprot*mLam*mp*pow(ppp,2) + 16*pow(epi,3)*pow(eprot,2)*mLam*mp*pow(ppp,2) + 8*pow(epi,2)*pow(eprot,3)*mLam*mp*pow(ppp,2) - 4*pow(epi,3)*pow(kkk,2)*mLam*mp*pow(ppp,2) - 8*pow(epi,2)*eprot*pow(kkk,2)*mLam*mp*pow(ppp,2) + 4*pow(eprot,3)*pow(kkk,2)*mLam*mp*pow(ppp,2) - 4*epi*pow(kkk,4)*mLam*mp*pow(ppp,2) - 4*eprot*pow(kkk,4)*mLam*mp*pow(ppp,2) - 16*pow(epi,3)*eprot*mDel*mLam*mp*pow(ppp,2) - 16*pow(epi,2)*pow(eprot,2)*mDel*mLam*mp*pow(ppp,2) + 10*pow(epi,2)*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2) + 10*epi*eprot*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2) + 2*pow(eprot,2)*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2) - 2*pow(kkk,4)*mDel*mLam*mp*pow(ppp,2) + 48*pow(epi,4)*eprot*mLamC*mp*pow(ppp,2) + 96*pow(epi,3)*pow(eprot,2)*mLamC*mp*pow(ppp,2) + 48*pow(epi,2)*pow(eprot,3)*mLamC*mp*pow(ppp,2) - 16*pow(epi,3)*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 88*pow(epi,2)*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 80*epi*pow(eprot,2)*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 8*pow(eprot,3)*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 8*epi*pow(kkk,4)*mLamC*mp*pow(ppp,2) + 8*eprot*pow(kkk,4)*mLamC*mp*pow(ppp,2) - 48*pow(epi,3)*eprot*mDel*mLamC*mp*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,2)*mDel*mLamC*mp*pow(ppp,2) + 12*pow(epi,2)*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) - 16*epi*eprot*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) - 4*pow(eprot,2)*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) + 4*pow(kkk,4)*mDel*mLamC*mp*pow(ppp,2) - 16*pow(epi,3)*eprot*mLam*mLamC*mp*pow(ppp,2) - 32*pow(epi,2)*pow(eprot,2)*mLam*mLamC*mp*pow(ppp,2) - 16*epi*pow(eprot,3)*mLam*mLamC*mp*pow(ppp,2) + 8*epi*eprot*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2) + 8*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2) + 32*pow(epi,2)*eprot*mDel*mLam*mLamC*mp*pow(ppp,2) + 32*epi*pow(eprot,2)*mDel*mLam*mLamC*mp*pow(ppp,2) - 10*epi*pow(kkk,2)*mDel*mLam*mLamC*mp*pow(ppp,2) - 6*eprot*pow(kkk,2)*mDel*mLam*mLamC*mp*pow(ppp,2) - 48*pow(epi,3)*eprot*pow(mLamC,2)*mp*pow(ppp,2) - 96*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*mp*pow(ppp,2) - 48*epi*pow(eprot,3)*pow(mLamC,2)*mp*pow(ppp,2) + 8*pow(epi,2)*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) + 40*epi*eprot*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) + 32*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) + 48*pow(epi,2)*eprot*mDel*pow(mLamC,2)*mp*pow(ppp,2) + 48*epi*pow(eprot,2)*mDel*pow(mLamC,2)*mp*pow(ppp,2) - 8*epi*pow(kkk,2)*mDel*pow(mLamC,2)*mp*pow(ppp,2) + 4*eprot*pow(kkk,2)*mDel*pow(mLamC,2)*mp*pow(ppp,2) + 8*pow(epi,2)*eprot*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 16*epi*pow(eprot,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 8*pow(eprot,3)*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 4*epi*pow(kkk,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 4*eprot*pow(kkk,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 16*epi*eprot*mDel*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 16*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 2*pow(kkk,2)*mDel*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 16*pow(epi,2)*eprot*pow(mLamC,3)*mp*pow(ppp,2) + 32*epi*pow(eprot,2)*pow(mLamC,3)*mp*pow(ppp,2) + 16*pow(eprot,3)*pow(mLamC,3)*mp*pow(ppp,2) - 16*epi*eprot*mDel*pow(mLamC,3)*mp*pow(ppp,2) - 16*pow(eprot,2)*mDel*pow(mLamC,3)*mp*pow(ppp,2) - 4*pow(epi,2)*pow(kkk,2)*mDel*pow(mp,2)*pow(ppp,2) - 4*epi*eprot*pow(kkk,2)*mDel*pow(mp,2)*pow(ppp,2) + 8*pow(epi,4)*mLam*pow(mp,2)*pow(ppp,2) + 16*pow(epi,3)*eprot*mLam*pow(mp,2)*pow(ppp,2) + 8*pow(epi,2)*pow(eprot,2)*mLam*pow(mp,2)*pow(ppp,2) - 12*pow(epi,2)*pow(kkk,2)*mLam*pow(mp,2)*pow(ppp,2) - 12*epi*eprot*pow(kkk,2)*mLam*pow(mp,2)*pow(ppp,2) - 8*pow(epi,3)*mDel*mLam*pow(mp,2)*pow(ppp,2) - 8*pow(epi,2)*eprot*mDel*mLam*pow(mp,2)*pow(ppp,2) - 8*epi*pow(kkk,2)*mDel*mLam*pow(mp,2)*pow(ppp,2) - 2*eprot*pow(kkk,2)*mDel*mLam*pow(mp,2)*pow(ppp,2) + 4*epi*pow(kkk,2)*mDel*mLamC*pow(mp,2)*pow(ppp,2) + 4*eprot*pow(kkk,2)*mDel*mLamC*pow(mp,2)*pow(ppp,2) - 16*pow(epi,3)*mLam*mLamC*pow(mp,2)*pow(ppp,2) - 32*pow(epi,2)*eprot*mLam*mLamC*pow(mp,2)*pow(ppp,2) - 16*epi*pow(eprot,2)*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 12*epi*pow(kkk,2)*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 12*eprot*pow(kkk,2)*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 16*pow(epi,2)*mDel*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 16*epi*eprot*mDel*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 6*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 8*pow(epi,2)*mLam*pow(mLamC,2)*pow(mp,2)*pow(ppp,2) + 16*epi*eprot*mLam*pow(mLamC,2)*pow(mp,2)*pow(ppp,2) + 8*pow(eprot,2)*mLam*pow(mLamC,2)*pow(mp,2)*pow(ppp,2) - 8*epi*mDel*mLam*pow(mLamC,2)*pow(mp,2)*pow(ppp,2) - 8*eprot*mDel*mLam*pow(mLamC,2)*pow(mp,2)*pow(ppp,2) - 16*pow(epi,4)*eprot*pow(ppp,4) - 16*pow(epi,3)*pow(eprot,2)*pow(ppp,4) + 24*pow(epi,3)*pow(kkk,2)*pow(ppp,4) + 24*pow(epi,2)*eprot*pow(kkk,2)*pow(ppp,4) - 8*pow(epi,3)*eprot*mDel*pow(ppp,4) - 4*pow(epi,2)*pow(kkk,2)*mDel*pow(ppp,4) - 16*epi*eprot*pow(kkk,2)*mDel*pow(ppp,4) + 24*pow(epi,3)*eprot*mLam*pow(ppp,4) + 24*pow(epi,2)*pow(eprot,2)*mLam*pow(ppp,4) - 20*pow(epi,2)*pow(kkk,2)*mLam*pow(ppp,4) - 20*epi*eprot*pow(kkk,2)*mLam*pow(ppp,4) + 12*pow(epi,2)*eprot*mDel*mLam*pow(ppp,4) - 18*epi*pow(kkk,2)*mDel*mLam*pow(ppp,4) - 8*eprot*pow(kkk,2)*mDel*mLam*pow(ppp,4) + 48*pow(epi,3)*eprot*mLamC*pow(ppp,4) + 48*pow(epi,2)*pow(eprot,2)*mLamC*pow(ppp,4) - 40*pow(epi,2)*pow(kkk,2)*mLamC*pow(ppp,4) - 40*epi*eprot*pow(kkk,2)*mLamC*pow(ppp,4) + 24*pow(epi,2)*eprot*mDel*mLamC*pow(ppp,4) - 4*epi*pow(kkk,2)*mDel*mLamC*pow(ppp,4) + 16*eprot*pow(kkk,2)*mDel*mLamC*pow(ppp,4) - 48*pow(epi,2)*eprot*mLam*mLamC*pow(ppp,4) - 48*epi*pow(eprot,2)*mLam*mLamC*pow(ppp,4) + 24*epi*pow(kkk,2)*mLam*mLamC*pow(ppp,4) + 24*eprot*pow(kkk,2)*mLam*mLamC*pow(ppp,4) - 24*epi*eprot*mDel*mLam*mLamC*pow(ppp,4) + 12*pow(kkk,2)*mDel*mLam*mLamC*pow(ppp,4) - 48*pow(epi,2)*eprot*pow(mLamC,2)*pow(ppp,4) - 48*epi*pow(eprot,2)*pow(mLamC,2)*pow(ppp,4) + 16*epi*pow(kkk,2)*pow(mLamC,2)*pow(ppp,4) + 16*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,4) - 24*epi*eprot*mDel*pow(mLamC,2)*pow(ppp,4) + 8*pow(kkk,2)*mDel*pow(mLamC,2)*pow(ppp,4) + 24*epi*eprot*mLam*pow(mLamC,2)*pow(ppp,4) + 24*pow(eprot,2)*mLam*pow(mLamC,2)*pow(ppp,4) + 12*eprot*mDel*mLam*pow(mLamC,2)*pow(ppp,4) + 16*epi*eprot*pow(mLamC,3)*pow(ppp,4) + 16*pow(eprot,2)*pow(mLamC,3)*pow(ppp,4) + 8*eprot*mDel*pow(mLamC,3)*pow(ppp,4) - 8*pow(epi,2)*pow(kkk,2)*mp*pow(ppp,4) - 8*epi*eprot*pow(kkk,2)*mp*pow(ppp,4) - 4*epi*pow(kkk,2)*mDel*mp*pow(ppp,4) + 8*pow(epi,3)*mLam*mp*pow(ppp,4) + 8*pow(epi,2)*eprot*mLam*mp*pow(ppp,4) - 4*epi*pow(kkk,2)*mLam*mp*pow(ppp,4) - 4*eprot*pow(kkk,2)*mLam*mp*pow(ppp,4) + 4*pow(epi,2)*mDel*mLam*mp*pow(ppp,4) - 2*pow(kkk,2)*mDel*mLam*mp*pow(ppp,4) + 8*epi*pow(kkk,2)*mLamC*mp*pow(ppp,4) + 8*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,4) + 4*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,4) - 16*pow(epi,2)*mLam*mLamC*mp*pow(ppp,4) - 16*epi*eprot*mLam*mLamC*mp*pow(ppp,4) - 8*epi*mDel*mLam*mLamC*mp*pow(ppp,4) + 8*epi*mLam*pow(mLamC,2)*mp*pow(ppp,4) + 8*eprot*mLam*pow(mLamC,2)*mp*pow(ppp,4) + 4*mDel*mLam*pow(mLamC,2)*mp*pow(ppp,4) + 16*pow(epi,4)*pow(eprot,3)*s12 + 48*pow(epi,3)*pow(eprot,4)*s12 + 48*pow(epi,2)*pow(eprot,5)*s12 + 16*epi*pow(eprot,6)*s12 + 24*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*s12 + 48*epi*pow(eprot,4)*pow(kkk,2)*s12 + 24*pow(eprot,5)*pow(kkk,2)*s12 - 24*pow(epi,3)*pow(eprot,3)*mDel*s12 - 48*pow(epi,2)*pow(eprot,4)*mDel*s12 - 24*epi*pow(eprot,5)*mDel*s12 + 12*epi*pow(eprot,3)*pow(kkk,2)*mDel*s12 + 12*pow(eprot,4)*pow(kkk,2)*mDel*s12 - 24*pow(epi,3)*pow(eprot,3)*mLam*s12 - 72*pow(epi,2)*pow(eprot,4)*mLam*s12 - 72*epi*pow(eprot,5)*mLam*s12 - 24*pow(eprot,6)*mLam*s12 + 36*pow(epi,2)*pow(eprot,3)*mDel*mLam*s12 + 72*epi*pow(eprot,4)*mDel*mLam*s12 + 36*pow(eprot,5)*mDel*mLam*s12 - 16*pow(epi,3)*pow(eprot,3)*mLamC*s12 - 48*pow(epi,2)*pow(eprot,4)*mLamC*s12 - 48*epi*pow(eprot,5)*mLamC*s12 - 16*pow(eprot,6)*mLamC*s12 + 24*pow(epi,2)*pow(eprot,3)*mDel*mLamC*s12 + 48*epi*pow(eprot,4)*mDel*mLamC*s12 + 24*pow(eprot,5)*mDel*mLamC*s12 - 16*pow(epi,4)*pow(eprot,2)*mp*s12 - 48*pow(epi,3)*pow(eprot,3)*mp*s12 - 48*pow(epi,2)*pow(eprot,4)*mp*s12 - 16*epi*pow(eprot,5)*mp*s12 + 16*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mp*s12 + 32*epi*pow(eprot,3)*pow(kkk,2)*mp*s12 + 16*pow(eprot,4)*pow(kkk,2)*mp*s12 + 16*pow(epi,3)*pow(eprot,2)*mDel*mp*s12 + 32*pow(epi,2)*pow(eprot,3)*mDel*mp*s12 + 16*epi*pow(eprot,4)*mDel*mp*s12 - 4*epi*pow(eprot,2)*pow(kkk,2)*mDel*mp*s12 - 4*pow(eprot,3)*pow(kkk,2)*mDel*mp*s12 + 16*pow(epi,3)*pow(eprot,2)*mLam*mp*s12 + 48*pow(epi,2)*pow(eprot,3)*mLam*mp*s12 + 48*epi*pow(eprot,4)*mLam*mp*s12 + 16*pow(eprot,5)*mLam*mp*s12 - 12*pow(epi,2)*pow(eprot,2)*mDel*mLam*mp*s12 - 24*epi*pow(eprot,3)*mDel*mLam*mp*s12 - 12*pow(eprot,4)*mDel*mLam*mp*s12 + 16*pow(epi,3)*pow(eprot,2)*mLamC*mp*s12 + 48*pow(epi,2)*pow(eprot,3)*mLamC*mp*s12 + 48*epi*pow(eprot,4)*mLamC*mp*s12 + 16*pow(eprot,5)*mLamC*mp*s12 - 16*pow(epi,2)*pow(eprot,2)*mDel*mLamC*mp*s12 - 32*epi*pow(eprot,3)*mDel*mLamC*mp*s12 - 16*pow(eprot,4)*mDel*mLamC*mp*s12 - 8*pow(epi,2)*eprot*pow(kkk,2)*pow(mp,2)*s12 - 16*epi*pow(eprot,2)*pow(kkk,2)*pow(mp,2)*s12 - 8*pow(eprot,3)*pow(kkk,2)*pow(mp,2)*s12 + 8*pow(epi,3)*eprot*mDel*pow(mp,2)*s12 + 16*pow(epi,2)*pow(eprot,2)*mDel*pow(mp,2)*s12 + 8*epi*pow(eprot,3)*mDel*pow(mp,2)*s12 - 12*epi*eprot*pow(kkk,2)*mDel*pow(mp,2)*s12 - 12*pow(eprot,2)*pow(kkk,2)*mDel*pow(mp,2)*s12 + 8*pow(epi,3)*eprot*mLam*pow(mp,2)*s12 + 24*pow(epi,2)*pow(eprot,2)*mLam*pow(mp,2)*s12 + 24*epi*pow(eprot,3)*mLam*pow(mp,2)*s12 + 8*pow(eprot,4)*mLam*pow(mp,2)*s12 - 20*pow(epi,2)*eprot*mDel*mLam*pow(mp,2)*s12 - 40*epi*pow(eprot,2)*mDel*mLam*pow(mp,2)*s12 - 20*pow(eprot,3)*mDel*mLam*pow(mp,2)*s12 - 8*pow(epi,2)*eprot*mDel*mLamC*pow(mp,2)*s12 - 16*epi*pow(eprot,2)*mDel*mLamC*pow(mp,2)*s12 - 8*pow(eprot,3)*mDel*mLamC*pow(mp,2)*s12 + 4*epi*pow(kkk,2)*mDel*pow(mp,3)*s12 + 4*eprot*pow(kkk,2)*mDel*pow(mp,3)*s12 - 4*pow(epi,2)*mDel*mLam*pow(mp,3)*s12 - 8*epi*eprot*mDel*mLam*pow(mp,3)*s12 - 4*pow(eprot,2)*mDel*mLam*pow(mp,3)*s12 - 32*pow(epi,3)*pow(eprot,2)*pow(ppp,2)*s12 - 64*pow(epi,2)*pow(eprot,3)*pow(ppp,2)*s12 - 32*epi*pow(eprot,4)*pow(ppp,2)*s12 + 12*pow(epi,2)*eprot*pow(kkk,2)*pow(ppp,2)*s12 - 20*epi*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s12 - 32*pow(eprot,3)*pow(kkk,2)*pow(ppp,2)*s12 + 16*pow(epi,2)*pow(eprot,2)*mDel*pow(ppp,2)*s12 + 16*epi*pow(eprot,3)*mDel*pow(ppp,2)*s12 - 10*epi*eprot*pow(kkk,2)*mDel*pow(ppp,2)*s12 - 32*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,2)*s12 + 48*pow(epi,2)*pow(eprot,2)*mLam*pow(ppp,2)*s12 + 96*epi*pow(eprot,3)*mLam*pow(ppp,2)*s12 + 48*pow(eprot,4)*mLam*pow(ppp,2)*s12 - 12*epi*eprot*pow(kkk,2)*mLam*pow(ppp,2)*s12 - 12*pow(eprot,2)*pow(kkk,2)*mLam*pow(ppp,2)*s12 - 24*epi*pow(eprot,2)*mDel*mLam*pow(ppp,2)*s12 - 24*pow(eprot,3)*mDel*mLam*pow(ppp,2)*s12 - 6*eprot*pow(kkk,2)*mDel*mLam*pow(ppp,2)*s12 + 32*pow(epi,2)*pow(eprot,2)*mLamC*pow(ppp,2)*s12 + 64*epi*pow(eprot,3)*mLamC*pow(ppp,2)*s12 + 32*pow(eprot,4)*mLamC*pow(ppp,2)*s12 - 8*epi*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s12 - 8*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2)*s12 - 16*epi*pow(eprot,2)*mDel*mLamC*pow(ppp,2)*s12 - 16*pow(eprot,3)*mDel*mLamC*pow(ppp,2)*s12 - 4*eprot*pow(kkk,2)*mDel*mLamC*pow(ppp,2)*s12 + 16*pow(epi,3)*eprot*mp*pow(ppp,2)*s12 + 32*pow(epi,2)*pow(eprot,2)*mp*pow(ppp,2)*s12 + 16*epi*pow(eprot,3)*mp*pow(ppp,2)*s12 - 24*epi*eprot*pow(kkk,2)*mp*pow(ppp,2)*s12 - 24*pow(eprot,2)*pow(kkk,2)*mp*pow(ppp,2)*s12 - 16*pow(epi,2)*eprot*mDel*mp*pow(ppp,2)*s12 - 16*epi*pow(eprot,2)*mDel*mp*pow(ppp,2)*s12 + 2*epi*pow(kkk,2)*mDel*mp*pow(ppp,2)*s12 - 10*eprot*pow(kkk,2)*mDel*mp*pow(ppp,2)*s12 - 8*pow(epi,2)*eprot*mLam*mp*pow(ppp,2)*s12 - 16*epi*pow(eprot,2)*mLam*mp*pow(ppp,2)*s12 - 8*pow(eprot,3)*mLam*mp*pow(ppp,2)*s12 - 4*epi*pow(kkk,2)*mLam*mp*pow(ppp,2)*s12 - 4*eprot*pow(kkk,2)*mLam*mp*pow(ppp,2)*s12 + 16*epi*eprot*mDel*mLam*mp*pow(ppp,2)*s12 + 16*pow(eprot,2)*mDel*mLam*mp*pow(ppp,2)*s12 - 2*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2)*s12 - 16*pow(epi,2)*eprot*mLamC*mp*pow(ppp,2)*s12 - 32*epi*pow(eprot,2)*mLamC*mp*pow(ppp,2)*s12 - 16*pow(eprot,3)*mLamC*mp*pow(ppp,2)*s12 + 16*epi*eprot*mDel*mLamC*mp*pow(ppp,2)*s12 + 16*pow(eprot,2)*mDel*mLamC*mp*pow(ppp,2)*s12 + 12*epi*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s12 + 12*eprot*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s12 + 6*pow(kkk,2)*mDel*pow(mp,2)*pow(ppp,2)*s12 - 8*pow(epi,2)*mLam*pow(mp,2)*pow(ppp,2)*s12 - 16*epi*eprot*mLam*pow(mp,2)*pow(ppp,2)*s12 - 8*pow(eprot,2)*mLam*pow(mp,2)*pow(ppp,2)*s12 + 8*epi*mDel*mLam*pow(mp,2)*pow(ppp,2)*s12 + 8*eprot*mDel*mLam*pow(mp,2)*pow(ppp,2)*s12 + 16*pow(epi,2)*eprot*pow(ppp,4)*s12 + 16*epi*pow(eprot,2)*pow(ppp,4)*s12 + 8*epi*pow(kkk,2)*pow(ppp,4)*s12 + 8*eprot*pow(kkk,2)*pow(ppp,4)*s12 + 8*epi*eprot*mDel*pow(ppp,4)*s12 + 4*pow(kkk,2)*mDel*pow(ppp,4)*s12 - 24*epi*eprot*mLam*pow(ppp,4)*s12 - 24*pow(eprot,2)*mLam*pow(ppp,4)*s12 - 12*eprot*mDel*mLam*pow(ppp,4)*s12 - 16*epi*eprot*mLamC*pow(ppp,4)*s12 - 16*pow(eprot,2)*mLamC*pow(ppp,4)*s12 - 8*eprot*mDel*mLamC*pow(ppp,4)*s12 - 8*epi*mLam*mp*pow(ppp,4)*s12 - 8*eprot*mLam*mp*pow(ppp,4)*s12 - 4*mDel*mLam*mp*pow(ppp,4)*s12 + 16*pow(epi,4)*pow(eprot,3)*s13 + 16*pow(epi,3)*pow(eprot,4)*s13 + 24*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*s13 - 24*pow(epi,3)*pow(eprot,3)*mDel*s13 - 24*pow(epi,3)*pow(eprot,3)*mLam*s13 - 24*pow(epi,2)*pow(eprot,4)*mLam*s13 + 12*epi*pow(eprot,3)*pow(kkk,2)*mLam*s13 + 36*pow(epi,2)*pow(eprot,3)*mDel*mLam*s13 - 48*pow(epi,3)*pow(eprot,3)*mLamC*s13 - 48*pow(epi,2)*pow(eprot,4)*mLamC*s13 - 48*epi*pow(eprot,3)*pow(kkk,2)*mLamC*s13 + 72*pow(epi,2)*pow(eprot,3)*mDel*mLamC*s13 + 48*pow(epi,2)*pow(eprot,3)*mLam*mLamC*s13 + 48*epi*pow(eprot,4)*mLam*mLamC*s13 - 12*pow(eprot,3)*pow(kkk,2)*mLam*mLamC*s13 - 72*epi*pow(eprot,3)*mDel*mLam*mLamC*s13 + 48*pow(epi,2)*pow(eprot,3)*pow(mLamC,2)*s13 + 48*epi*pow(eprot,4)*pow(mLamC,2)*s13 + 24*pow(eprot,3)*pow(kkk,2)*pow(mLamC,2)*s13 - 72*epi*pow(eprot,3)*mDel*pow(mLamC,2)*s13 - 24*epi*pow(eprot,3)*mLam*pow(mLamC,2)*s13 - 24*pow(eprot,4)*mLam*pow(mLamC,2)*s13 + 36*pow(eprot,3)*mDel*mLam*pow(mLamC,2)*s13 - 16*epi*pow(eprot,3)*pow(mLamC,3)*s13 - 16*pow(eprot,4)*pow(mLamC,3)*s13 + 24*pow(eprot,3)*mDel*pow(mLamC,3)*s13 - 16*pow(epi,4)*pow(eprot,2)*mp*s13 - 16*pow(epi,3)*pow(eprot,3)*mp*s13 + 16*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mp*s13 + 16*pow(epi,3)*pow(eprot,2)*mDel*mp*s13 + 16*pow(epi,3)*pow(eprot,2)*mLam*mp*s13 + 16*pow(epi,2)*pow(eprot,3)*mLam*mp*s13 - 4*epi*pow(eprot,2)*pow(kkk,2)*mLam*mp*s13 - 12*pow(epi,2)*pow(eprot,2)*mDel*mLam*mp*s13 + 48*pow(epi,3)*pow(eprot,2)*mLamC*mp*s13 + 48*pow(epi,2)*pow(eprot,3)*mLamC*mp*s13 - 32*epi*pow(eprot,2)*pow(kkk,2)*mLamC*mp*s13 - 48*pow(epi,2)*pow(eprot,2)*mDel*mLamC*mp*s13 - 32*pow(epi,2)*pow(eprot,2)*mLam*mLamC*mp*s13 - 32*epi*pow(eprot,3)*mLam*mLamC*mp*s13 + 4*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*mp*s13 + 24*epi*pow(eprot,2)*mDel*mLam*mLamC*mp*s13 - 48*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*mp*s13 - 48*epi*pow(eprot,3)*pow(mLamC,2)*mp*s13 + 16*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*mp*s13 + 48*epi*pow(eprot,2)*mDel*pow(mLamC,2)*mp*s13 + 16*epi*pow(eprot,2)*mLam*pow(mLamC,2)*mp*s13 + 16*pow(eprot,3)*mLam*pow(mLamC,2)*mp*s13 - 12*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*mp*s13 + 16*epi*pow(eprot,2)*pow(mLamC,3)*mp*s13 + 16*pow(eprot,3)*pow(mLamC,3)*mp*s13 - 16*pow(eprot,2)*mDel*pow(mLamC,3)*mp*s13 - 8*pow(epi,2)*eprot*pow(kkk,2)*pow(mp,2)*s13 + 8*pow(epi,3)*eprot*mDel*pow(mp,2)*s13 + 8*pow(epi,3)*eprot*mLam*pow(mp,2)*s13 + 8*pow(epi,2)*pow(eprot,2)*mLam*pow(mp,2)*s13 - 12*epi*eprot*pow(kkk,2)*mLam*pow(mp,2)*s13 - 20*pow(epi,2)*eprot*mDel*mLam*pow(mp,2)*s13 + 16*epi*eprot*pow(kkk,2)*mLamC*pow(mp,2)*s13 - 24*pow(epi,2)*eprot*mDel*mLamC*pow(mp,2)*s13 - 16*pow(epi,2)*eprot*mLam*mLamC*pow(mp,2)*s13 - 16*epi*pow(eprot,2)*mLam*mLamC*pow(mp,2)*s13 + 12*eprot*pow(kkk,2)*mLam*mLamC*pow(mp,2)*s13 + 40*epi*eprot*mDel*mLam*mLamC*pow(mp,2)*s13 - 8*eprot*pow(kkk,2)*pow(mLamC,2)*pow(mp,2)*s13 + 24*epi*eprot*mDel*pow(mLamC,2)*pow(mp,2)*s13 + 8*epi*eprot*mLam*pow(mLamC,2)*pow(mp,2)*s13 + 8*pow(eprot,2)*mLam*pow(mLamC,2)*pow(mp,2)*s13 - 20*eprot*mDel*mLam*pow(mLamC,2)*pow(mp,2)*s13 - 8*eprot*mDel*pow(mLamC,3)*pow(mp,2)*s13 + 4*epi*pow(kkk,2)*mLam*pow(mp,3)*s13 - 4*pow(epi,2)*mDel*mLam*pow(mp,3)*s13 - 4*pow(kkk,2)*mLam*mLamC*pow(mp,3)*s13 + 8*epi*mDel*mLam*mLamC*pow(mp,3)*s13 - 4*mDel*mLam*pow(mLamC,2)*pow(mp,3)*s13 - 16*pow(epi,3)*pow(eprot,2)*pow(ppp,2)*s13 + 12*pow(epi,2)*eprot*pow(kkk,2)*pow(ppp,2)*s13 - 4*epi*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s13 - 12*epi*eprot*pow(kkk,2)*mDel*pow(ppp,2)*s13 + 24*pow(epi,2)*pow(eprot,2)*mLam*pow(ppp,2)*s13 - 10*epi*eprot*pow(kkk,2)*mLam*pow(ppp,2)*s13 - 2*pow(eprot,2)*pow(kkk,2)*mLam*pow(ppp,2)*s13 - 6*eprot*pow(kkk,2)*mDel*mLam*pow(ppp,2)*s13 + 48*pow(epi,2)*pow(eprot,2)*mLamC*pow(ppp,2)*s13 - 16*epi*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s13 + 4*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2)*s13 + 12*eprot*pow(kkk,2)*mDel*mLamC*pow(ppp,2)*s13 - 48*epi*pow(eprot,2)*mLam*mLamC*pow(ppp,2)*s13 + 14*eprot*pow(kkk,2)*mLam*mLamC*pow(ppp,2)*s13 - 48*epi*pow(eprot,2)*pow(mLamC,2)*pow(ppp,2)*s13 + 4*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2)*s13 + 24*pow(eprot,2)*mLam*pow(mLamC,2)*pow(ppp,2)*s13 + 16*pow(eprot,2)*pow(mLamC,3)*pow(ppp,2)*s13 - 8*epi*eprot*pow(kkk,2)*mp*pow(ppp,2)*s13 - 4*epi*pow(kkk,2)*mDel*mp*pow(ppp,2)*s13 + 8*pow(epi,2)*eprot*mLam*mp*pow(ppp,2)*s13 + 2*epi*pow(kkk,2)*mLam*mp*pow(ppp,2)*s13 - 4*eprot*pow(kkk,2)*mLam*mp*pow(ppp,2)*s13 - 2*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2)*s13 + 8*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,2)*s13 + 4*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2)*s13 - 16*epi*eprot*mLam*mLamC*mp*pow(ppp,2)*s13 - 2*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2)*s13 + 8*eprot*mLam*pow(mLamC,2)*mp*pow(ppp,2)*s13 + 4*epi*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s13 + 2*pow(kkk,2)*mLam*pow(mp,2)*pow(ppp,2)*s13 - 4*pow(kkk,2)*mLamC*pow(mp,2)*pow(ppp,2)*s13 + 4*epi*pow(kkk,2)*pow(ppp,4)*s13 + 2*pow(kkk,2)*mLam*pow(ppp,4)*s13 - 4*pow(kkk,2)*mLamC*pow(ppp,4)*s13 - 16*pow(epi,2)*pow(eprot,3)*s12*s13 - 16*epi*pow(eprot,4)*s12*s13 - 36*pow(eprot,3)*pow(kkk,2)*s12*s13 + 24*epi*pow(eprot,3)*mDel*s12*s13 + 24*epi*pow(eprot,3)*mLam*s12*s13 + 24*pow(eprot,4)*mLam*s12*s13 - 36*pow(eprot,3)*mDel*mLam*s12*s13 + 16*epi*pow(eprot,3)*mLamC*s12*s13 + 16*pow(eprot,4)*mLamC*s12*s13 - 24*pow(eprot,3)*mDel*mLamC*s12*s13 + 16*pow(epi,2)*pow(eprot,2)*mp*s12*s13 + 16*epi*pow(eprot,3)*mp*s12*s13 - 12*pow(eprot,2)*pow(kkk,2)*mp*s12*s13 - 16*epi*pow(eprot,2)*mDel*mp*s12*s13 - 16*epi*pow(eprot,2)*mLam*mp*s12*s13 - 16*pow(eprot,3)*mLam*mp*s12*s13 + 12*pow(eprot,2)*mDel*mLam*mp*s12*s13 - 16*epi*pow(eprot,2)*mLamC*mp*s12*s13 - 16*pow(eprot,3)*mLamC*mp*s12*s13 + 16*pow(eprot,2)*mDel*mLamC*mp*s12*s13 + 20*eprot*pow(kkk,2)*pow(mp,2)*s12*s13 - 8*epi*eprot*mDel*pow(mp,2)*s12*s13 - 8*epi*eprot*mLam*pow(mp,2)*s12*s13 - 8*pow(eprot,2)*mLam*pow(mp,2)*s12*s13 + 20*eprot*mDel*mLam*pow(mp,2)*s12*s13 + 8*eprot*mDel*mLamC*pow(mp,2)*s12*s13 - 4*pow(kkk,2)*pow(mp,3)*s12*s13 + 4*mDel*mLam*pow(mp,3)*s12*s13 + 16*epi*pow(eprot,2)*pow(ppp,2)*s12*s13 + 10*eprot*pow(kkk,2)*pow(ppp,2)*s12*s13 - 24*pow(eprot,2)*mLam*pow(ppp,2)*s12*s13 - 16*pow(eprot,2)*mLamC*pow(ppp,2)*s12*s13 - 2*pow(kkk,2)*mp*pow(ppp,2)*s12*s13 - 8*eprot*mLam*mp*pow(ppp,2)*s12*s13 + kkk*ppp*(32*pow(epi,5)*eprot*(2*eprot - mp) + 4*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,2) + 9*pow(kkk,2)*mDel*mLam*mLamC*pow(ppp,2) + 6*pow(kkk,2)*mDel*pow(mLamC,2)*pow(ppp,2) - 7*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2) + 14*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) + 8*mDel*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 4*mDel*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 12*mDel*mLam*mLamC*pow(ppp,4) + 8*mDel*pow(mLamC,2)*pow(ppp,4) + 8*pow(epi,4)*(18*pow(eprot,3) - 4*pow(eprot,2)*(2*mDel + 2*mLam + 5*mLamC + 3*mp) + eprot*(3*mDel*mp + 3*mLam*mp + 10*mLamC*mp - 10*pow(ppp,2)) + mp*(mDel*mp + mLam*mp + 2*pow(ppp,2))) + 4*pow(kkk,2)*mDel*pow(mp,2)*s12 + 3*pow(kkk,2)*mDel*pow(ppp,2)*s12 - 8*mDel*mLam*mp*pow(ppp,2)*s12 + 4*mDel*pow(mp,2)*pow(ppp,2)*s12 + 4*mDel*pow(ppp,4)*s12 + 8*pow(eprot,5)*(3*mLam*mLamC + 2*pow(mLamC,2) + s12) + 4*pow(eprot,4)*(2*pow(kkk,2)*(mLam - 2*mLamC) - 8*pow(mLamC,3) - 8*pow(mLamC,2)*mp - 4*mLam*(3*pow(mLamC,2) + mLamC*mp - 3*s12) + 8*mLamC*s12 + 4*mp*s12 + mDel*(-5*mLam*mLamC - 14*pow(mLamC,2) + 9*s12)) + 4*pow(kkk,2)*mLam*pow(mp,2)*s13 - 8*pow(kkk,2)*mLamC*pow(mp,2)*s13 - 8*mDel*mLam*mLamC*pow(mp,2)*s13 - 8*mDel*pow(mLamC,2)*pow(mp,2)*s13 - 4*mLam*mLamC*pow(mp,3)*s13 + 3*pow(kkk,2)*mLam*pow(ppp,2)*s13 - 6*pow(kkk,2)*mLamC*pow(ppp,2)*s13 - 4*mLam*mLamC*mp*pow(ppp,2)*s13 - 4*pow(mp,3)*s12*s13 - 4*mp*pow(ppp,2)*s12*s13 + 4*pow(eprot,3)*(2*mLam*pow(mLamC,2)*mp + 4*pow(mLamC,3)*mp - 2*mLam*mLamC*pow(mp,2) - 12*mLam*mLamC*pow(ppp,2) - 8*pow(mLamC,2)*pow(ppp,2) + pow(kkk,2)*(mDel*(mLam - 2*mLamC) - 2*mLam*mLamC + 4*pow(mLamC,2) + 2*mLam*mp - 4*mLamC*mp - 6*s12) - 2*mLam*mp*s12 - 4*mLamC*mp*s12 - 2*pow(mp,2)*s12 - 4*pow(ppp,2)*s12 + mDel*(6*mLam*pow(mLamC,2) + 4*pow(mLamC,3) + 3*mLam*mLamC*mp + 2*pow(mLamC,2)*mp - 6*mLam*s12 - 4*mLamC*s12 + mp*s12) - 7*mLam*mLamC*s13 - 2*pow(mLamC,2)*s13 - 5*s12*s13) + 8*pow(epi,3)*(12*pow(eprot,4) - 2*mLam*mLamC*pow(mp,2) - pow(eprot,3)*(15*mDel + 19*mLam + 44*mLamC + 12*mp) + 3*pow(kkk,2)*pow(ppp,2) - 4*mLamC*mp*pow(ppp,2) + 2*pow(ppp,4) - 2*mDel*mp*(mLam*mp + mLamC*mp + pow(ppp,2)) + 2*pow(eprot,2)*(2*pow(kkk,2) + 7*mLam*mLamC + 8*pow(mLamC,2) + 4*mLam*mp + 14*mLamC*mp + mDel*(3*mLam + 9*mLamC + 2*mp) - 7*pow(ppp,2) - 3*s12 - 3*s13) + eprot*(4*pow(kkk,2)*mp - 4*mLam*mLamC*mp - 8*pow(mLamC,2)*mp + 3*mLam*pow(mp,2) + 11*mLam*pow(ppp,2) + 24*mLamC*pow(ppp,2) + 6*mp*pow(ppp,2) + mDel*(-4*mLam*mp - 8*mLamC*mp + 3*(pow(mp,2) + pow(ppp,2))) + 2*mp*s12 + 2*mp*s13)) - 4*pow(eprot,2)*(-2*mLam*pow(mLamC,2)*pow(mp,2) - 12*mLam*pow(mLamC,2)*pow(ppp,2) - 8*pow(mLamC,3)*pow(ppp,2) - 4*mLam*mLamC*mp*pow(ppp,2) - 8*pow(mLamC,2)*mp*pow(ppp,2) + 2*mLam*pow(mp,2)*s12 + 12*mLam*pow(ppp,2)*s12 + 8*mLamC*pow(ppp,2)*s12 + 4*mp*pow(ppp,2)*s12 - 6*mLam*pow(mLamC,2)*s13 - 4*pow(mLamC,3)*s13 - 5*mLam*mLamC*mp*s13 - 8*pow(mLamC,2)*mp*s13 + 6*mLam*s12*s13 + 4*mLamC*s12*s13 + 3*mp*s12*s13 + pow(kkk,2)*(-4*pow(mLamC,2)*mp + 2*mLam*pow(ppp,2) - 4*mLamC*pow(ppp,2) + 4*mp*s12 + mDel*(mLam*mLamC - 2*pow(mLamC,2) + 3*s12) + 3*mLam*s13 - 6*mLamC*s13) + mDel*(4*pow(mLamC,3)*mp - 4*mLamC*mp*s12 + s12*(3*pow(mp,2) + 10*pow(ppp,2) + 6*s13) - 4*pow(mLamC,2)*(pow(mp,2) + 3*(pow(ppp,2) + s13)) + mLam*(4*pow(mLamC,2)*mp - 4*mp*s12 - mLamC*(pow(mp,2) + 2*pow(ppp,2) + 6*s13)))) - 2*epi*(4*pow(eprot,5)*(3*mLam + 4*mLamC) - 8*pow(mLamC,2)*pow(ppp,4) - 2*pow(eprot,4)*(4*pow(kkk,2) + 5*mDel*mLam + 28*mDel*mLamC + 40*mLam*mLamC + 40*pow(mLamC,2) + 4*mLam*mp + 16*mLamC*mp - 8*s12) - 4*pow(ppp,2)*(pow(mp,2) + pow(ppp,2))*s12 - 2*pow(eprot,3)*(-24*mLam*pow(mLamC,2) - 16*pow(mLamC,3) - 16*mLam*mLamC*mp - 32*pow(mLamC,2)*mp + 2*mLam*pow(mp,2) + 2*pow(kkk,2)*(mDel + 3*mLam - 8*mLamC + 2*mp) + 12*mLam*pow(ppp,2) + 16*mLamC*pow(ppp,2) - mDel*(23*mLam*mLamC + 38*pow(mLamC,2) + 3*mLam*mp + 4*mLamC*mp - 19*s12) + 24*mLam*s12 + 16*mLamC*s12 + 12*mp*s12 + 7*mLam*s13 + 4*mLamC*s13) - pow(kkk,2)*(6*pow(mLamC,2)*pow(ppp,2) + 14*mLamC*mp*pow(ppp,2) + mDel*(-4*mLam*pow(mp,2) + 4*mLamC*pow(mp,2) - 9*mLam*pow(ppp,2) + 3*mLamC*pow(ppp,2) - 7*mp*pow(ppp,2)) + mLam*(4*mLamC*pow(mp,2) + 9*mLamC*pow(ppp,2) - 7*mp*pow(ppp,2)) + 4*pow(mp,2)*s12 + 3*pow(ppp,2)*s12 + 4*pow(mp,2)*s13 + 3*pow(ppp,2)*s13) - 2*mLam*(4*pow(mLamC,2)*mp*pow(ppp,2) + 2*mLamC*pow(ppp,2)*(pow(mp,2) + 3*pow(ppp,2)) + pow(mp,3)*s13 + mp*pow(ppp,2)*(-4*s12 + s13)) + 2*pow(eprot,2)*(-4*mLam*pow(mLamC,2)*mp - 8*pow(mLamC,3)*mp + 8*mLam*mLamC*pow(mp,2) + 46*mLam*mLamC*pow(ppp,2) + 44*pow(mLamC,2)*pow(ppp,2) + 4*mLam*mp*pow(ppp,2) + 16*mLamC*mp*pow(ppp,2) + 4*mLam*mp*s12 + 8*mLamC*mp*s12 + 4*pow(mp,2)*s12 - 6*pow(ppp,2)*s12 + 16*mLam*mLamC*s13 + 20*pow(mLamC,2)*s13 + 5*mLam*mp*s13 + 16*mLamC*mp*s13 - 8*s12*s13 + pow(kkk,2)*(-2*mDel*mLam + 6*mDel*mLamC + 2*mLam*mLamC - 4*pow(mLamC,2) - 4*mLam*mp + 16*mLamC*mp + 4*pow(ppp,2) + 6*s12 + 6*s13) + mDel*(-4*pow(mLamC,3) - 16*pow(mLamC,2)*mp + mp*s12 + 4*mLamC*(2*pow(mp,2) + 6*pow(ppp,2) + s12 + 6*s13) + mLam*(-6*pow(mLamC,2) - 15*mLamC*mp + pow(mp,2) + 2*pow(ppp,2) + 6*s12 + 6*s13))) + 2*eprot*(-4*mLam*pow(mLamC,2)*pow(mp,2) - 12*mLam*pow(mLamC,2)*pow(ppp,2) - 8*pow(mLamC,3)*pow(ppp,2) - 12*pow(mLamC,2)*mp*pow(ppp,2) + 2*mLam*pow(mp,2)*pow(ppp,2) + 6*mLam*pow(ppp,4) + 8*mLamC*pow(ppp,4) + 4*mLam*pow(mp,2)*s12 + 12*mLam*pow(ppp,2)*s12 + 8*mLamC*pow(ppp,2)*s12 + 4*mp*pow(ppp,2)*s12 - 4*pow(mLamC,2)*mp*s13 + 3*mLam*pow(mp,2)*s13 - 4*mLamC*pow(mp,2)*s13 + 7*mLam*pow(ppp,2)*s13 + 4*mLamC*pow(ppp,2)*s13 + pow(kkk,2)*(-4*pow(mLamC,2)*mp + 2*mLam*pow(mp,2) + 5*mLam*pow(ppp,2) + 5*mLamC*pow(ppp,2) + 7*mp*pow(ppp,2) + 2*mDel*(2*mLamC*mp + pow(mp,2) + 4*pow(ppp,2)) + 4*mp*s12 + 4*mp*s13) + mDel*(4*pow(mLamC,3)*mp + pow(mLamC,2)*(-6*pow(mp,2) + 2*pow(ppp,2)) + 3*(pow(mp,2) + pow(ppp,2))*s12 - 4*mLamC*mp*(pow(ppp,2) + s12 + s13) + mLam*(4*pow(mLamC,2)*mp - 7*mLamC*pow(mp,2) + pow(mp,3) + 9*mLamC*pow(ppp,2) - 3*mp*pow(ppp,2) - 4*mp*s12 - 4*mp*s13))) + 2*mDel*(4*pow(mLamC,2)*mp*pow(ppp,2) + 4*mLamC*pow(ppp,4) - pow(mp,3)*s12 - mp*pow(ppp,2)*s12 - 4*mLamC*pow(mp,2)*s13 + mLam*(2*pow(mLamC,2)*pow(mp,2) + 3*pow(ppp,4) - mLamC*(pow(mp,3) - 7*mp*pow(ppp,2)) + pow(mp,2)*(pow(ppp,2) - 2*(s12 + s13))))) + 4*pow(epi,2)*(4*pow(eprot,5) - 2*pow(kkk,2)*mDel*pow(mp,2) - 2*pow(kkk,2)*mLam*pow(mp,2) + 6*mDel*mLam*mLamC*pow(mp,2) + 2*mDel*pow(mLamC,2)*pow(mp,2) + 2*mLam*pow(mLamC,2)*pow(mp,2) - mDel*mLam*pow(mp,3) - 2*pow(eprot,4)*(7*mDel + 14*mLam + 4*(7*mLamC + mp)) - 3*pow(kkk,2)*mDel*pow(ppp,2) - 3*pow(kkk,2)*mLam*pow(ppp,2) - 9*pow(kkk,2)*mLamC*pow(ppp,2) - 7*pow(kkk,2)*mp*pow(ppp,2) + 5*mDel*mLam*mp*pow(ppp,2) + 8*mDel*mLamC*mp*pow(ppp,2) - 4*mLam*mLamC*mp*pow(ppp,2) + 4*pow(mLamC,2)*mp*pow(ppp,2) - 2*mLam*pow(mp,2)*pow(ppp,2) + 2*mDel*pow(ppp,4) - 6*mLam*pow(ppp,4) - 8*mLamC*pow(ppp,4) - 2*mLam*pow(mp,2)*s12 + pow(eprot,3)*(12*pow(kkk,2) + 62*mLam*mLamC + 68*pow(mLamC,2) + 14*mLam*mp + 52*mLamC*mp + mDel*(17*mLam + 64*mLamC + 2*mp) - 8*pow(ppp,2) - 22*s12 - 2*s13) - 2*mDel*pow(mp,2)*s13 + pow(eprot,2)*(-8*pow(mLamC,3) - 40*pow(mLamC,2)*mp + 4*pow(kkk,2)*(mDel + mLam - 3*mLamC + 3*mp) + 64*mLamC*pow(ppp,2) + 8*mp*pow(ppp,2) + 8*mLamC*s12 + 12*mp*s12 + 28*mLamC*s13 + 8*mp*s13 + 2*mLam*(-6*pow(mLamC,2) - 10*mLamC*mp + 3*pow(mp,2) + 17*pow(ppp,2) + 6*s12 + 5*s13) + mDel*(-18*mLam*mLamC - 24*pow(mLamC,2) - 11*mLam*mp - 20*mLamC*mp + 4*pow(mp,2) + 12*pow(ppp,2) + 10*s12 + 12*s13)) + eprot*(2*pow(kkk,2)*(mDel*mp + mLam*mp - 6*mLamC*mp + pow(ppp,2)) + mDel*(14*pow(mLamC,2)*mp - 4*mLamC*(3*pow(mp,2) + 2*pow(ppp,2)) + mLam*(12*mLamC*mp - 5*pow(mp,2) + 3*pow(ppp,2)) - 2*mp*(pow(ppp,2) + s12 + s13)) + 2*(2*pow(mLamC,3)*mp - 18*pow(mLamC,2)*pow(ppp,2) + 2*pow(ppp,4) - pow(mp,2)*s12 + 5*pow(ppp,2)*s12 - pow(mp,2)*s13 + pow(ppp,2)*s13 - 2*mLamC*mp*(6*pow(ppp,2) + s12 + 2*s13) + mLam*(pow(mLamC,2)*mp - mLamC*(5*pow(mp,2) + 17*pow(ppp,2)) - mp*(2*pow(ppp,2) + s12 + s13))))) + 2*eprot*(pow(kkk,2)*(6*pow(mLamC,2)*pow(ppp,2) + 14*mLamC*mp*pow(ppp,2) + 4*pow(mp,2)*s12 + 3*pow(ppp,2)*s12 + 2*mDel*(2*pow(mLamC,2)*mp - mLam*(pow(mp,2) + 4*pow(ppp,2)) + 2*mLamC*(pow(mp,2) + 4*pow(ppp,2)) - 2*mp*s12) + 8*mLamC*mp*s13 + mLam*(4*mLamC*pow(mp,2) + 9*mLamC*pow(ppp,2) - 7*mp*pow(ppp,2) - 4*mp*s13)) + 2*(4*pow(mLamC,2)*pow(ppp,4) + 2*pow(mp,2)*pow(ppp,2)*s12 + 2*pow(ppp,4)*s12 - 2*pow(mLamC,2)*pow(mp,2)*s13 + 2*pow(mLamC,2)*pow(ppp,2)*s13 + 5*pow(mp,2)*s12*s13 + 5*pow(ppp,2)*s12*s13 + mLam*(2*pow(mLamC,2)*mp*(2*pow(ppp,2) + s13) - 2*mp*s12*(2*pow(ppp,2) + s13) + mLamC*(6*pow(ppp,4) + 7*pow(ppp,2)*s13 + pow(mp,2)*(2*pow(ppp,2) + 3*s13))) - mDel*(-4*pow(mLamC,3)*pow(ppp,2) + 4*mLamC*pow(ppp,2)*s12 + 2*pow(mLamC,2)*mp*(pow(ppp,2) + s13) + mp*s12*(-pow(mp,2) + pow(ppp,2) + 2*s13) + mLam*(2*pow(mLamC,2)*(pow(mp,2) - 3*pow(ppp,2)) - 2*(pow(mp,2) - 3*pow(ppp,2))*s12 + mLamC*(-pow(mp,3) + 3*mp*pow(ppp,2) + 4*mp*s13))))))*cos(psi) - 2*pow(kkk,2)*pow(ppp,2)*(4*pow(epi,4)*(5*eprot - mp) + pow(kkk,2)*mDel*mLam*mp - 2*pow(kkk,2)*mDel*mLamC*mp - mDel*mLam*pow(mLamC,2)*mp - mDel*mLam*mLamC*pow(mp,2) - 6*mDel*mLam*mLamC*pow(ppp,2) - 4*mDel*pow(mLamC,2)*pow(ppp,2) + mDel*mLam*mp*pow(ppp,2) - 2*mDel*mLamC*mp*pow(ppp,2) + 2*pow(epi,3)*(16*pow(eprot,2) + mDel*mp + mLam*mp + 4*mLamC*mp - eprot*(7*mDel + 7*mLam + 20*mLamC + 8*mp) - 6*pow(ppp,2)) + mDel*mLam*mp*s12 - mDel*pow(mp,2)*s12 - 2*mDel*pow(ppp,2)*s12 + pow(eprot,3)*(-4*mDel*mLam + 8*mDel*mLamC + 12*mLam*mLamC + 8*pow(mLamC,2) - 2*mLam*mp + 4*mLamC*mp + 4*s12) + pow(epi,2)*(12*pow(eprot,3) + 4*pow(kkk,2)*mp - 5*mDel*mLam*mp - 6*mDel*mLamC*mp - 4*pow(mLamC,2)*mp + 2*mDel*pow(mp,2) + 2*mLam*pow(mp,2) - 2*pow(eprot,2)*(13*mDel + 12*mLam + 30*mLamC + 8*mp) + 2*mDel*pow(ppp,2) + 10*mLam*pow(ppp,2) + 20*mLamC*pow(ppp,2) + 4*mp*pow(ppp,2) + eprot*(4*pow(kkk,2) - 3*mDel*mLam + 20*mDel*mLamC + 22*mLam*mLamC + 24*pow(mLamC,2) - 2*mDel*mp + 4*mLam*mp + 28*mLamC*mp - 12*pow(ppp,2) - 6*s12 - 6*s13)) + mDel*mLam*mp*s13 - 2*mDel*mLamC*mp*s13 + mLam*mLamC*mp*s13 - mLam*pow(mp,2)*s13 + 2*mLamC*pow(mp,2)*s13 - mLam*pow(ppp,2)*s13 + 2*mLamC*pow(ppp,2)*s13 + mp*s12*s13 + pow(eprot,2)*(2*pow(kkk,2)*(mLam - 2*mLamC) - 6*mLam*pow(mLamC,2) - 4*pow(mLamC,3) - 4*mLam*mLamC*mp - 8*pow(mLamC,2)*mp - mDel*(2*mLam*mLamC + 12*pow(mLamC,2) + mLam*mp - 2*mLamC*mp - 10*s12) + 6*mLam*s12 + 4*mLamC*s12 + 4*mp*s12 + mLam*s13 - 2*mLamC*s13) + eprot*(-2*mLam*pow(mLamC,2)*mp - 2*mLam*mLamC*pow(mp,2) + pow(kkk,2)*(mLam - 2*mLamC)*(mDel + 2*mp) - 12*mLam*mLamC*pow(ppp,2) - 8*pow(mLamC,2)*pow(ppp,2) + 2*mLam*mp*pow(ppp,2) - 4*mLamC*mp*pow(ppp,2) + 2*mLam*mp*s12 - 2*pow(mp,2)*s12 - 4*pow(ppp,2)*s12 - 7*mLam*mLamC*s13 - 2*pow(mLamC,2)*s13 + 2*mLam*mp*s13 - 4*mLamC*mp*s13 - 5*s12*s13 + mDel*(-2*pow(mLamC,3) + 2*pow(mLamC,2)*mp + mp*s12 - 2*mLamC*(pow(mp,2) + 4*pow(ppp,2) - s12 + 3*s13) + mLam*(-3*pow(mLamC,2) + 3*mLamC*mp + pow(mp,2) + 4*pow(ppp,2) + 3*s12 + 3*s13))) + epi*(2*pow(kkk,2)*(mDel + mLam - 2*mLamC)*mp + 5*mDel*mLam*mLamC*mp + 4*mDel*pow(mLamC,2)*mp - 2*mLam*pow(mLamC,2)*mp + 2*mDel*mLam*pow(mp,2) - 2*mDel*mLamC*pow(mp,2) - 2*mLam*mLamC*pow(mp,2) - 2*pow(eprot,3)*(4*mDel + 5*mLam + 2*(5*mLamC + mp)) + 9*mDel*mLam*pow(ppp,2) + 2*mDel*mLamC*pow(ppp,2) - 12*mLam*mLamC*pow(ppp,2) - 8*pow(mLamC,2)*pow(ppp,2) + 2*mDel*mp*pow(ppp,2) + 2*mLam*mp*pow(ppp,2) - 4*mLamC*mp*pow(ppp,2) - mDel*mp*s12 + 2*mLam*mp*s12 - 2*pow(mp,2)*s12 - 4*pow(ppp,2)*s12 + 2*mDel*mp*s13 - mLam*mp*s13 - 2*pow(mp,2)*s13 - 2*pow(ppp,2)*s13 + pow(eprot,2)*(4*pow(kkk,2) - 5*mDel*mLam + 38*mDel*mLamC + 34*mLam*mLamC + 32*pow(mLamC,2) - 2*mDel*mp + 24*mLamC*mp - 2*s12 + 2*s13) + eprot*(-6*mLam*pow(mLamC,2) - 4*pow(mLamC,3) - 4*mLam*mLamC*mp - 12*pow(mLamC,2)*mp + 2*mLam*pow(mp,2) + 2*pow(kkk,2)*(mDel + mLam - 2*mLamC + 2*mp) + 10*mLam*pow(ppp,2) + 20*mLamC*pow(ppp,2) + 4*mp*pow(ppp,2) + 6*mLam*s12 + 4*mLamC*s12 + 4*mp*s12 + 5*mLam*s13 + 8*mLamC*s13 + 4*mp*s13 + mDel*(3*mLam*mLamC - 4*pow(mLamC,2) - 5*mLam*mp + 2*pow(mp,2) + 8*pow(ppp,2) + 5*s12 + 6*s13))))*cos(2*psi) + 8*pow(epi,3)*pow(kkk,3)*pow(ppp,3)*cos(3*psi) + 8*pow(epi,2)*eprot*pow(kkk,3)*pow(ppp,3)*cos(3*psi) - 4*pow(epi,2)*pow(kkk,3)*mDel*pow(ppp,3)*cos(3*psi) - 8*epi*eprot*pow(kkk,3)*mDel*pow(ppp,3)*cos(3*psi) - 4*pow(epi,2)*pow(kkk,3)*mLam*pow(ppp,3)*cos(3*psi) - 4*epi*eprot*pow(kkk,3)*mLam*pow(ppp,3)*cos(3*psi) - 6*epi*pow(kkk,3)*mDel*mLam*pow(ppp,3)*cos(3*psi) - 4*eprot*pow(kkk,3)*mDel*mLam*pow(ppp,3)*cos(3*psi) - 12*pow(epi,2)*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) - 12*epi*eprot*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*mDel*mLamC*pow(ppp,3)*cos(3*psi) + 8*eprot*pow(kkk,3)*mDel*mLamC*pow(ppp,3)*cos(3*psi) + 6*epi*pow(kkk,3)*mLam*mLamC*pow(ppp,3)*cos(3*psi) + 6*eprot*pow(kkk,3)*mLam*mLamC*pow(ppp,3)*cos(3*psi) + 3*pow(kkk,3)*mDel*mLam*mLamC*pow(ppp,3)*cos(3*psi) + 4*epi*pow(kkk,3)*pow(mLamC,2)*pow(ppp,3)*cos(3*psi) + 4*eprot*pow(kkk,3)*pow(mLamC,2)*pow(ppp,3)*cos(3*psi) + 2*pow(kkk,3)*mDel*pow(mLamC,2)*pow(ppp,3)*cos(3*psi) - 4*pow(epi,2)*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) - 4*epi*eprot*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) - 2*epi*pow(kkk,3)*mDel*mp*pow(ppp,3)*cos(3*psi) - 2*epi*pow(kkk,3)*mLam*mp*pow(ppp,3)*cos(3*psi) - 2*eprot*pow(kkk,3)*mLam*mp*pow(ppp,3)*cos(3*psi) - pow(kkk,3)*mDel*mLam*mp*pow(ppp,3)*cos(3*psi) + 4*epi*pow(kkk,3)*mLamC*mp*pow(ppp,3)*cos(3*psi) + 4*eprot*pow(kkk,3)*mLamC*mp*pow(ppp,3)*cos(3*psi) + 2*pow(kkk,3)*mDel*mLamC*mp*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*pow(ppp,3)*s12*cos(3*psi) + 2*eprot*pow(kkk,3)*pow(ppp,3)*s12*cos(3*psi) + pow(kkk,3)*mDel*pow(ppp,3)*s12*cos(3*psi) + 2*epi*pow(kkk,3)*pow(ppp,3)*s13*cos(3*psi) + pow(kkk,3)*mLam*pow(ppp,3)*s13*cos(3*psi) - 2*pow(kkk,3)*mLamC*pow(ppp,3)*s13*cos(3*psi)))/(9.*s12*s13));
	    	break;
	    case FormulaParam::ReBC: //f12
	    	return ReBWTwoResonances(s13, mDel, GDel, s12, mLam, GLam)*((pow(mLamC,3)*(16*pow(epi,6)*pow(eprot,3) + 48*pow(epi,5)*pow(eprot,4) + 48*pow(epi,4)*pow(eprot,5) + 16*pow(epi,3)*pow(eprot,6) + 16*pow(epi,4)*pow(eprot,3)*pow(kkk,2) + 32*pow(epi,3)*pow(eprot,4)*pow(kkk,2) + 16*pow(epi,2)*pow(eprot,5)*pow(kkk,2) + 24*pow(epi,5)*pow(eprot,3)*mDel + 48*pow(epi,4)*pow(eprot,4)*mDel + 24*pow(epi,3)*pow(eprot,5)*mDel - 8*pow(epi,3)*pow(eprot,3)*pow(kkk,2)*mDel - 8*pow(epi,2)*pow(eprot,4)*pow(kkk,2)*mDel + 24*pow(epi,5)*pow(eprot,3)*mLam + 72*pow(epi,4)*pow(eprot,4)*mLam + 72*pow(epi,3)*pow(eprot,5)*mLam + 24*pow(epi,2)*pow(eprot,6)*mLam - 8*pow(epi,3)*pow(eprot,3)*pow(kkk,2)*mLam - 16*pow(epi,2)*pow(eprot,4)*pow(kkk,2)*mLam - 8*epi*pow(eprot,5)*pow(kkk,2)*mLam + 36*pow(epi,4)*pow(eprot,3)*mDel*mLam + 72*pow(epi,3)*pow(eprot,4)*mDel*mLam + 36*pow(epi,2)*pow(eprot,5)*mDel*mLam + 4*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*mDel*mLam + 4*epi*pow(eprot,4)*pow(kkk,2)*mDel*mLam - 48*pow(epi,5)*pow(eprot,3)*mLamC - 144*pow(epi,4)*pow(eprot,4)*mLamC - 144*pow(epi,3)*pow(eprot,5)*mLamC - 48*pow(epi,2)*pow(eprot,6)*mLamC - 32*pow(epi,3)*pow(eprot,3)*pow(kkk,2)*mLamC - 64*pow(epi,2)*pow(eprot,4)*pow(kkk,2)*mLamC - 32*epi*pow(eprot,5)*pow(kkk,2)*mLamC - 72*pow(epi,4)*pow(eprot,3)*mDel*mLamC - 144*pow(epi,3)*pow(eprot,4)*mDel*mLamC - 72*pow(epi,2)*pow(eprot,5)*mDel*mLamC + 16*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*mDel*mLamC + 16*epi*pow(eprot,4)*pow(kkk,2)*mDel*mLamC - 48*pow(epi,4)*pow(eprot,3)*mLam*mLamC - 144*pow(epi,3)*pow(eprot,4)*mLam*mLamC - 144*pow(epi,2)*pow(eprot,5)*mLam*mLamC - 48*epi*pow(eprot,6)*mLam*mLamC + 8*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*mLam*mLamC + 16*epi*pow(eprot,4)*pow(kkk,2)*mLam*mLamC + 8*pow(eprot,5)*pow(kkk,2)*mLam*mLamC - 72*pow(epi,3)*pow(eprot,3)*mDel*mLam*mLamC - 144*pow(epi,2)*pow(eprot,4)*mDel*mLam*mLamC - 72*epi*pow(eprot,5)*mDel*mLam*mLamC - 4*epi*pow(eprot,3)*pow(kkk,2)*mDel*mLam*mLamC - 4*pow(eprot,4)*pow(kkk,2)*mDel*mLam*mLamC + 48*pow(epi,4)*pow(eprot,3)*pow(mLamC,2) + 144*pow(epi,3)*pow(eprot,4)*pow(mLamC,2) + 144*pow(epi,2)*pow(eprot,5)*pow(mLamC,2) + 48*epi*pow(eprot,6)*pow(mLamC,2) + 16*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*pow(mLamC,2) + 32*epi*pow(eprot,4)*pow(kkk,2)*pow(mLamC,2) + 16*pow(eprot,5)*pow(kkk,2)*pow(mLamC,2) + 72*pow(epi,3)*pow(eprot,3)*mDel*pow(mLamC,2) + 144*pow(epi,2)*pow(eprot,4)*mDel*pow(mLamC,2) + 72*epi*pow(eprot,5)*mDel*pow(mLamC,2) - 8*epi*pow(eprot,3)*pow(kkk,2)*mDel*pow(mLamC,2) - 8*pow(eprot,4)*pow(kkk,2)*mDel*pow(mLamC,2) + 24*pow(epi,3)*pow(eprot,3)*mLam*pow(mLamC,2) + 72*pow(epi,2)*pow(eprot,4)*mLam*pow(mLamC,2) + 72*epi*pow(eprot,5)*mLam*pow(mLamC,2) + 24*pow(eprot,6)*mLam*pow(mLamC,2) + 36*pow(epi,2)*pow(eprot,3)*mDel*mLam*pow(mLamC,2) + 72*epi*pow(eprot,4)*mDel*mLam*pow(mLamC,2) + 36*pow(eprot,5)*mDel*mLam*pow(mLamC,2) - 16*pow(epi,3)*pow(eprot,3)*pow(mLamC,3) - 48*pow(epi,2)*pow(eprot,4)*pow(mLamC,3) - 48*epi*pow(eprot,5)*pow(mLamC,3) - 16*pow(eprot,6)*pow(mLamC,3) - 24*pow(epi,2)*pow(eprot,3)*mDel*pow(mLamC,3) - 48*epi*pow(eprot,4)*mDel*pow(mLamC,3) - 24*pow(eprot,5)*mDel*pow(mLamC,3) + 16*pow(epi,6)*pow(eprot,2)*mp + 48*pow(epi,5)*pow(eprot,3)*mp + 48*pow(epi,4)*pow(eprot,4)*mp + 16*pow(epi,3)*pow(eprot,5)*mp - 16*pow(epi,4)*pow(eprot,2)*pow(kkk,2)*mp - 32*pow(epi,3)*pow(eprot,3)*pow(kkk,2)*mp - 16*pow(epi,2)*pow(eprot,4)*pow(kkk,2)*mp + 16*pow(epi,5)*pow(eprot,2)*mDel*mp + 32*pow(epi,4)*pow(eprot,3)*mDel*mp + 16*pow(epi,3)*pow(eprot,4)*mDel*mp + 16*pow(epi,5)*pow(eprot,2)*mLam*mp + 48*pow(epi,4)*pow(eprot,3)*mLam*mp + 48*pow(epi,3)*pow(eprot,4)*mLam*mp + 16*pow(epi,2)*pow(eprot,5)*mLam*mp + 12*pow(epi,4)*pow(eprot,2)*mDel*mLam*mp + 24*pow(epi,3)*pow(eprot,3)*mDel*mLam*mp + 12*pow(epi,2)*pow(eprot,4)*mDel*mLam*mp + 4*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mDel*mLam*mp + 4*epi*pow(eprot,3)*pow(kkk,2)*mDel*mLam*mp - 48*pow(epi,5)*pow(eprot,2)*mLamC*mp - 144*pow(epi,4)*pow(eprot,3)*mLamC*mp - 144*pow(epi,3)*pow(eprot,4)*mLamC*mp - 48*pow(epi,2)*pow(eprot,5)*mLamC*mp + 32*pow(epi,3)*pow(eprot,2)*pow(kkk,2)*mLamC*mp + 64*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*mLamC*mp + 32*epi*pow(eprot,4)*pow(kkk,2)*mLamC*mp - 48*pow(epi,4)*pow(eprot,2)*mDel*mLamC*mp - 96*pow(epi,3)*pow(eprot,3)*mDel*mLamC*mp - 48*pow(epi,2)*pow(eprot,4)*mDel*mLamC*mp - 32*pow(epi,4)*pow(eprot,2)*mLam*mLamC*mp - 96*pow(epi,3)*pow(eprot,3)*mLam*mLamC*mp - 96*pow(epi,2)*pow(eprot,4)*mLam*mLamC*mp - 32*epi*pow(eprot,5)*mLam*mLamC*mp - 24*pow(epi,3)*pow(eprot,2)*mDel*mLam*mLamC*mp - 48*pow(epi,2)*pow(eprot,3)*mDel*mLam*mLamC*mp - 24*epi*pow(eprot,4)*mDel*mLam*mLamC*mp - 4*epi*pow(eprot,2)*pow(kkk,2)*mDel*mLam*mLamC*mp - 4*pow(eprot,3)*pow(kkk,2)*mDel*mLam*mLamC*mp + 48*pow(epi,4)*pow(eprot,2)*pow(mLamC,2)*mp + 144*pow(epi,3)*pow(eprot,3)*pow(mLamC,2)*mp + 144*pow(epi,2)*pow(eprot,4)*pow(mLamC,2)*mp + 48*epi*pow(eprot,5)*pow(mLamC,2)*mp - 16*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*mp - 32*epi*pow(eprot,3)*pow(kkk,2)*pow(mLamC,2)*mp - 16*pow(eprot,4)*pow(kkk,2)*pow(mLamC,2)*mp + 48*pow(epi,3)*pow(eprot,2)*mDel*pow(mLamC,2)*mp + 96*pow(epi,2)*pow(eprot,3)*mDel*pow(mLamC,2)*mp + 48*epi*pow(eprot,4)*mDel*pow(mLamC,2)*mp + 16*pow(epi,3)*pow(eprot,2)*mLam*pow(mLamC,2)*mp + 48*pow(epi,2)*pow(eprot,3)*mLam*pow(mLamC,2)*mp + 48*epi*pow(eprot,4)*mLam*pow(mLamC,2)*mp + 16*pow(eprot,5)*mLam*pow(mLamC,2)*mp + 12*pow(epi,2)*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*mp + 24*epi*pow(eprot,3)*mDel*mLam*pow(mLamC,2)*mp + 12*pow(eprot,4)*mDel*mLam*pow(mLamC,2)*mp - 16*pow(epi,3)*pow(eprot,2)*pow(mLamC,3)*mp - 48*pow(epi,2)*pow(eprot,3)*pow(mLamC,3)*mp - 48*epi*pow(eprot,4)*pow(mLamC,3)*mp - 16*pow(eprot,5)*pow(mLamC,3)*mp - 16*pow(epi,2)*pow(eprot,2)*mDel*pow(mLamC,3)*mp - 32*epi*pow(eprot,3)*mDel*pow(mLamC,3)*mp - 16*pow(eprot,4)*mDel*pow(mLamC,3)*mp - 8*pow(epi,5)*eprot*mDel*pow(mp,2) - 16*pow(epi,4)*pow(eprot,2)*mDel*pow(mp,2) - 8*pow(epi,3)*pow(eprot,3)*mDel*pow(mp,2) + 8*pow(epi,3)*eprot*pow(kkk,2)*mDel*pow(mp,2) + 8*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mDel*pow(mp,2) - 8*pow(epi,5)*eprot*mLam*pow(mp,2) - 24*pow(epi,4)*pow(eprot,2)*mLam*pow(mp,2) - 24*pow(epi,3)*pow(eprot,3)*mLam*pow(mp,2) - 8*pow(epi,2)*pow(eprot,4)*mLam*pow(mp,2) + 8*pow(epi,3)*eprot*pow(kkk,2)*mLam*pow(mp,2) + 16*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mLam*pow(mp,2) + 8*epi*pow(eprot,3)*pow(kkk,2)*mLam*pow(mp,2) - 20*pow(epi,4)*eprot*mDel*mLam*pow(mp,2) - 40*pow(epi,3)*pow(eprot,2)*mDel*mLam*pow(mp,2) - 20*pow(epi,2)*pow(eprot,3)*mDel*mLam*pow(mp,2) - 4*pow(epi,2)*eprot*pow(kkk,2)*mDel*mLam*pow(mp,2) - 4*epi*pow(eprot,2)*pow(kkk,2)*mDel*mLam*pow(mp,2) + 24*pow(epi,4)*eprot*mDel*mLamC*pow(mp,2) + 48*pow(epi,3)*pow(eprot,2)*mDel*mLamC*pow(mp,2) + 24*pow(epi,2)*pow(eprot,3)*mDel*mLamC*pow(mp,2) - 16*pow(epi,2)*eprot*pow(kkk,2)*mDel*mLamC*pow(mp,2) - 16*epi*pow(eprot,2)*pow(kkk,2)*mDel*mLamC*pow(mp,2) + 16*pow(epi,4)*eprot*mLam*mLamC*pow(mp,2) + 48*pow(epi,3)*pow(eprot,2)*mLam*mLamC*pow(mp,2) + 48*pow(epi,2)*pow(eprot,3)*mLam*mLamC*pow(mp,2) + 16*epi*pow(eprot,4)*mLam*mLamC*pow(mp,2) - 8*pow(epi,2)*eprot*pow(kkk,2)*mLam*mLamC*pow(mp,2) - 16*epi*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*pow(mp,2) - 8*pow(eprot,3)*pow(kkk,2)*mLam*mLamC*pow(mp,2) + 40*pow(epi,3)*eprot*mDel*mLam*mLamC*pow(mp,2) + 80*pow(epi,2)*pow(eprot,2)*mDel*mLam*mLamC*pow(mp,2) + 40*epi*pow(eprot,3)*mDel*mLam*mLamC*pow(mp,2) + 4*epi*eprot*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,2) + 4*pow(eprot,2)*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,2) - 24*pow(epi,3)*eprot*mDel*pow(mLamC,2)*pow(mp,2) - 48*pow(epi,2)*pow(eprot,2)*mDel*pow(mLamC,2)*pow(mp,2) - 24*epi*pow(eprot,3)*mDel*pow(mLamC,2)*pow(mp,2) + 8*epi*eprot*pow(kkk,2)*mDel*pow(mLamC,2)*pow(mp,2) + 8*pow(eprot,2)*pow(kkk,2)*mDel*pow(mLamC,2)*pow(mp,2) - 8*pow(epi,3)*eprot*mLam*pow(mLamC,2)*pow(mp,2) - 24*pow(epi,2)*pow(eprot,2)*mLam*pow(mLamC,2)*pow(mp,2) - 24*epi*pow(eprot,3)*mLam*pow(mLamC,2)*pow(mp,2) - 8*pow(eprot,4)*mLam*pow(mLamC,2)*pow(mp,2) - 20*pow(epi,2)*eprot*mDel*mLam*pow(mLamC,2)*pow(mp,2) - 40*epi*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*pow(mp,2) - 20*pow(eprot,3)*mDel*mLam*pow(mLamC,2)*pow(mp,2) + 8*pow(epi,2)*eprot*mDel*pow(mLamC,3)*pow(mp,2) + 16*epi*pow(eprot,2)*mDel*pow(mLamC,3)*pow(mp,2) + 8*pow(eprot,3)*mDel*pow(mLamC,3)*pow(mp,2) + 4*pow(epi,4)*mDel*mLam*pow(mp,3) + 8*pow(epi,3)*eprot*mDel*mLam*pow(mp,3) + 4*pow(epi,2)*pow(eprot,2)*mDel*mLam*pow(mp,3) - 4*pow(epi,2)*pow(kkk,2)*mDel*mLam*pow(mp,3) - 4*epi*eprot*pow(kkk,2)*mDel*mLam*pow(mp,3) - 8*pow(epi,3)*mDel*mLam*mLamC*pow(mp,3) - 16*pow(epi,2)*eprot*mDel*mLam*mLamC*pow(mp,3) - 8*epi*pow(eprot,2)*mDel*mLam*mLamC*pow(mp,3) + 4*epi*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,3) + 4*eprot*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,3) + 4*pow(epi,2)*mDel*mLam*pow(mLamC,2)*pow(mp,3) + 8*epi*eprot*mDel*mLam*pow(mLamC,2)*pow(mp,3) + 4*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*pow(mp,3) - 32*pow(epi,5)*pow(eprot,2)*pow(ppp,2) - 64*pow(epi,4)*pow(eprot,3)*pow(ppp,2) - 32*pow(epi,3)*pow(eprot,4)*pow(ppp,2) + 40*pow(epi,4)*eprot*pow(kkk,2)*pow(ppp,2) + 48*pow(epi,3)*pow(eprot,2)*pow(kkk,2)*pow(ppp,2) + 8*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*pow(ppp,2) + 8*pow(epi,2)*eprot*pow(kkk,4)*pow(ppp,2) + 8*epi*pow(eprot,2)*pow(kkk,4)*pow(ppp,2) - 16*pow(epi,4)*pow(eprot,2)*mDel*pow(ppp,2) - 16*pow(epi,3)*pow(eprot,3)*mDel*pow(ppp,2) + 28*pow(epi,3)*eprot*pow(kkk,2)*mDel*pow(ppp,2) + 60*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,2) + 16*epi*pow(eprot,3)*pow(kkk,2)*mDel*pow(ppp,2) - 4*epi*eprot*pow(kkk,4)*mDel*pow(ppp,2) - 48*pow(epi,4)*pow(eprot,2)*mLam*pow(ppp,2) - 96*pow(epi,3)*pow(eprot,3)*mLam*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,4)*mLam*pow(ppp,2) + 28*pow(epi,3)*eprot*pow(kkk,2)*mLam*pow(ppp,2) + 56*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mLam*pow(ppp,2) + 28*epi*pow(eprot,3)*pow(kkk,2)*mLam*pow(ppp,2) - 4*epi*eprot*pow(kkk,4)*mLam*pow(ppp,2) - 4*pow(eprot,2)*pow(kkk,4)*mLam*pow(ppp,2) - 24*pow(epi,3)*pow(eprot,2)*mDel*mLam*pow(ppp,2) - 24*pow(epi,2)*pow(eprot,3)*mDel*mLam*pow(ppp,2) - 6*pow(epi,2)*eprot*pow(kkk,2)*mDel*mLam*pow(ppp,2) - 14*epi*pow(eprot,2)*pow(kkk,2)*mDel*mLam*pow(ppp,2) - 8*pow(eprot,3)*pow(kkk,2)*mDel*mLam*pow(ppp,2) + 2*eprot*pow(kkk,4)*mDel*mLam*pow(ppp,2) + 96*pow(epi,4)*pow(eprot,2)*mLamC*pow(ppp,2) + 192*pow(epi,3)*pow(eprot,3)*mLamC*pow(ppp,2) + 96*pow(epi,2)*pow(eprot,4)*mLamC*pow(ppp,2) - 80*pow(epi,3)*eprot*pow(kkk,2)*mLamC*pow(ppp,2) - 88*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2) - 8*epi*pow(eprot,3)*pow(kkk,2)*mLamC*pow(ppp,2) - 8*epi*eprot*pow(kkk,4)*mLamC*pow(ppp,2) - 8*pow(eprot,2)*pow(kkk,4)*mLamC*pow(ppp,2) + 48*pow(epi,3)*pow(eprot,2)*mDel*mLamC*pow(ppp,2) + 48*pow(epi,2)*pow(eprot,3)*mDel*mLamC*pow(ppp,2) - 40*pow(epi,2)*eprot*pow(kkk,2)*mDel*mLamC*pow(ppp,2) - 92*epi*pow(eprot,2)*pow(kkk,2)*mDel*mLamC*pow(ppp,2) - 16*pow(eprot,3)*pow(kkk,2)*mDel*mLamC*pow(ppp,2) + 4*eprot*pow(kkk,4)*mDel*mLamC*pow(ppp,2) + 96*pow(epi,3)*pow(eprot,2)*mLam*mLamC*pow(ppp,2) + 192*pow(epi,2)*pow(eprot,3)*mLam*mLamC*pow(ppp,2) + 96*epi*pow(eprot,4)*mLam*mLamC*pow(ppp,2) - 44*pow(epi,2)*eprot*pow(kkk,2)*mLam*mLamC*pow(ppp,2) - 76*epi*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*pow(ppp,2) - 32*pow(eprot,3)*pow(kkk,2)*mLam*mLamC*pow(ppp,2) + 48*pow(epi,2)*pow(eprot,2)*mDel*mLam*mLamC*pow(ppp,2) + 48*epi*pow(eprot,3)*mDel*mLam*mLamC*pow(ppp,2) + 6*epi*eprot*pow(kkk,2)*mDel*mLam*mLamC*pow(ppp,2) - 96*pow(epi,3)*pow(eprot,2)*pow(mLamC,2)*pow(ppp,2) - 192*pow(epi,2)*pow(eprot,3)*pow(mLamC,2)*pow(ppp,2) - 96*epi*pow(eprot,4)*pow(mLamC,2)*pow(ppp,2) + 48*pow(epi,2)*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) + 48*epi*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,2)*mDel*pow(mLamC,2)*pow(ppp,2) - 48*epi*pow(eprot,3)*mDel*pow(mLamC,2)*pow(ppp,2) + 8*epi*eprot*pow(kkk,2)*mDel*pow(mLamC,2)*pow(ppp,2) + 32*pow(eprot,2)*pow(kkk,2)*mDel*pow(mLamC,2)*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 96*epi*pow(eprot,3)*mLam*pow(mLamC,2)*pow(ppp,2) - 48*pow(eprot,4)*mLam*pow(mLamC,2)*pow(ppp,2) + 12*epi*eprot*pow(kkk,2)*mLam*pow(mLamC,2)*pow(ppp,2) + 12*pow(eprot,2)*pow(kkk,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 24*epi*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*pow(ppp,2) - 24*pow(eprot,3)*mDel*mLam*pow(mLamC,2)*pow(ppp,2) - 6*eprot*pow(kkk,2)*mDel*mLam*pow(mLamC,2)*pow(ppp,2) + 32*pow(epi,2)*pow(eprot,2)*pow(mLamC,3)*pow(ppp,2) + 64*epi*pow(eprot,3)*pow(mLamC,3)*pow(ppp,2) + 32*pow(eprot,4)*pow(mLamC,3)*pow(ppp,2) - 8*epi*eprot*pow(kkk,2)*pow(mLamC,3)*pow(ppp,2) - 8*pow(eprot,2)*pow(kkk,2)*pow(mLamC,3)*pow(ppp,2) + 16*epi*pow(eprot,2)*mDel*pow(mLamC,3)*pow(ppp,2) + 16*pow(eprot,3)*mDel*pow(mLamC,3)*pow(ppp,2) + 4*eprot*pow(kkk,2)*mDel*pow(mLamC,3)*pow(ppp,2) - 16*pow(epi,5)*eprot*mp*pow(ppp,2) - 32*pow(epi,4)*pow(eprot,2)*mp*pow(ppp,2) - 16*pow(epi,3)*pow(eprot,3)*mp*pow(ppp,2) + 8*pow(epi,4)*pow(kkk,2)*mp*pow(ppp,2) + 48*pow(epi,3)*eprot*pow(kkk,2)*mp*pow(ppp,2) + 48*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mp*pow(ppp,2) + 8*epi*pow(eprot,3)*pow(kkk,2)*mp*pow(ppp,2) - 8*pow(epi,2)*pow(kkk,4)*mp*pow(ppp,2) - 8*epi*eprot*pow(kkk,4)*mp*pow(ppp,2) - 16*pow(epi,4)*eprot*mDel*mp*pow(ppp,2) - 16*pow(epi,3)*pow(eprot,2)*mDel*mp*pow(ppp,2) + 4*pow(epi,3)*pow(kkk,2)*mDel*mp*pow(ppp,2) - 12*pow(epi,2)*eprot*pow(kkk,2)*mDel*mp*pow(ppp,2) - 4*epi*pow(eprot,2)*pow(kkk,2)*mDel*mp*pow(ppp,2) + 4*epi*pow(kkk,4)*mDel*mp*pow(ppp,2) - 8*pow(epi,4)*eprot*mLam*mp*pow(ppp,2) - 16*pow(epi,3)*pow(eprot,2)*mLam*mp*pow(ppp,2) - 8*pow(epi,2)*pow(eprot,3)*mLam*mp*pow(ppp,2) + 4*pow(epi,3)*pow(kkk,2)*mLam*mp*pow(ppp,2) + 8*pow(epi,2)*eprot*pow(kkk,2)*mLam*mp*pow(ppp,2) - 4*pow(eprot,3)*pow(kkk,2)*mLam*mp*pow(ppp,2) + 4*epi*pow(kkk,4)*mLam*mp*pow(ppp,2) + 4*eprot*pow(kkk,4)*mLam*mp*pow(ppp,2) - 16*pow(epi,3)*eprot*mDel*mLam*mp*pow(ppp,2) - 16*pow(epi,2)*pow(eprot,2)*mDel*mLam*mp*pow(ppp,2) + 10*pow(epi,2)*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2) + 10*epi*eprot*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2) + 2*pow(eprot,2)*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2) - 2*pow(kkk,4)*mDel*mLam*mp*pow(ppp,2) + 48*pow(epi,4)*eprot*mLamC*mp*pow(ppp,2) + 96*pow(epi,3)*pow(eprot,2)*mLamC*mp*pow(ppp,2) + 48*pow(epi,2)*pow(eprot,3)*mLamC*mp*pow(ppp,2) - 16*pow(epi,3)*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 88*pow(epi,2)*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 80*epi*pow(eprot,2)*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 8*pow(eprot,3)*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 8*epi*pow(kkk,4)*mLamC*mp*pow(ppp,2) + 8*eprot*pow(kkk,4)*mLamC*mp*pow(ppp,2) + 48*pow(epi,3)*eprot*mDel*mLamC*mp*pow(ppp,2) + 48*pow(epi,2)*pow(eprot,2)*mDel*mLamC*mp*pow(ppp,2) - 12*pow(epi,2)*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) + 16*epi*eprot*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) + 4*pow(eprot,2)*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) - 4*pow(kkk,4)*mDel*mLamC*mp*pow(ppp,2) + 16*pow(epi,3)*eprot*mLam*mLamC*mp*pow(ppp,2) + 32*pow(epi,2)*pow(eprot,2)*mLam*mLamC*mp*pow(ppp,2) + 16*epi*pow(eprot,3)*mLam*mLamC*mp*pow(ppp,2) - 8*epi*eprot*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2) - 8*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2) + 32*pow(epi,2)*eprot*mDel*mLam*mLamC*mp*pow(ppp,2) + 32*epi*pow(eprot,2)*mDel*mLam*mLamC*mp*pow(ppp,2) - 10*epi*pow(kkk,2)*mDel*mLam*mLamC*mp*pow(ppp,2) - 6*eprot*pow(kkk,2)*mDel*mLam*mLamC*mp*pow(ppp,2) - 48*pow(epi,3)*eprot*pow(mLamC,2)*mp*pow(ppp,2) - 96*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*mp*pow(ppp,2) - 48*epi*pow(eprot,3)*pow(mLamC,2)*mp*pow(ppp,2) + 8*pow(epi,2)*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) + 40*epi*eprot*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) + 32*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) - 48*pow(epi,2)*eprot*mDel*pow(mLamC,2)*mp*pow(ppp,2) - 48*epi*pow(eprot,2)*mDel*pow(mLamC,2)*mp*pow(ppp,2) + 8*epi*pow(kkk,2)*mDel*pow(mLamC,2)*mp*pow(ppp,2) - 4*eprot*pow(kkk,2)*mDel*pow(mLamC,2)*mp*pow(ppp,2) - 8*pow(epi,2)*eprot*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 16*epi*pow(eprot,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 8*pow(eprot,3)*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 4*epi*pow(kkk,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 4*eprot*pow(kkk,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 16*epi*eprot*mDel*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 16*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 2*pow(kkk,2)*mDel*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 16*pow(epi,2)*eprot*pow(mLamC,3)*mp*pow(ppp,2) + 32*epi*pow(eprot,2)*pow(mLamC,3)*mp*pow(ppp,2) + 16*pow(eprot,3)*pow(mLamC,3)*mp*pow(ppp,2) + 16*epi*eprot*mDel*pow(mLamC,3)*mp*pow(ppp,2) + 16*pow(eprot,2)*mDel*pow(mLamC,3)*mp*pow(ppp,2) - 4*pow(epi,2)*pow(kkk,2)*mDel*pow(mp,2)*pow(ppp,2) - 4*epi*eprot*pow(kkk,2)*mDel*pow(mp,2)*pow(ppp,2) + 8*pow(epi,4)*mLam*pow(mp,2)*pow(ppp,2) + 16*pow(epi,3)*eprot*mLam*pow(mp,2)*pow(ppp,2) + 8*pow(epi,2)*pow(eprot,2)*mLam*pow(mp,2)*pow(ppp,2) - 12*pow(epi,2)*pow(kkk,2)*mLam*pow(mp,2)*pow(ppp,2) - 12*epi*eprot*pow(kkk,2)*mLam*pow(mp,2)*pow(ppp,2) + 8*pow(epi,3)*mDel*mLam*pow(mp,2)*pow(ppp,2) + 8*pow(epi,2)*eprot*mDel*mLam*pow(mp,2)*pow(ppp,2) + 8*epi*pow(kkk,2)*mDel*mLam*pow(mp,2)*pow(ppp,2) + 2*eprot*pow(kkk,2)*mDel*mLam*pow(mp,2)*pow(ppp,2) + 4*epi*pow(kkk,2)*mDel*mLamC*pow(mp,2)*pow(ppp,2) + 4*eprot*pow(kkk,2)*mDel*mLamC*pow(mp,2)*pow(ppp,2) - 16*pow(epi,3)*mLam*mLamC*pow(mp,2)*pow(ppp,2) - 32*pow(epi,2)*eprot*mLam*mLamC*pow(mp,2)*pow(ppp,2) - 16*epi*pow(eprot,2)*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 12*epi*pow(kkk,2)*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 12*eprot*pow(kkk,2)*mLam*mLamC*pow(mp,2)*pow(ppp,2) - 16*pow(epi,2)*mDel*mLam*mLamC*pow(mp,2)*pow(ppp,2) - 16*epi*eprot*mDel*mLam*mLamC*pow(mp,2)*pow(ppp,2) - 6*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 8*pow(epi,2)*mLam*pow(mLamC,2)*pow(mp,2)*pow(ppp,2) + 16*epi*eprot*mLam*pow(mLamC,2)*pow(mp,2)*pow(ppp,2) + 8*pow(eprot,2)*mLam*pow(mLamC,2)*pow(mp,2)*pow(ppp,2) + 8*epi*mDel*mLam*pow(mLamC,2)*pow(mp,2)*pow(ppp,2) + 8*eprot*mDel*mLam*pow(mLamC,2)*pow(mp,2)*pow(ppp,2) + 16*pow(epi,4)*eprot*pow(ppp,4) + 16*pow(epi,3)*pow(eprot,2)*pow(ppp,4) - 24*pow(epi,3)*pow(kkk,2)*pow(ppp,4) - 24*pow(epi,2)*eprot*pow(kkk,2)*pow(ppp,4) - 8*pow(epi,3)*eprot*mDel*pow(ppp,4) - 4*pow(epi,2)*pow(kkk,2)*mDel*pow(ppp,4) - 16*epi*eprot*pow(kkk,2)*mDel*pow(ppp,4) + 24*pow(epi,3)*eprot*mLam*pow(ppp,4) + 24*pow(epi,2)*pow(eprot,2)*mLam*pow(ppp,4) - 20*pow(epi,2)*pow(kkk,2)*mLam*pow(ppp,4) - 20*epi*eprot*pow(kkk,2)*mLam*pow(ppp,4) - 12*pow(epi,2)*eprot*mDel*mLam*pow(ppp,4) + 18*epi*pow(kkk,2)*mDel*mLam*pow(ppp,4) + 8*eprot*pow(kkk,2)*mDel*mLam*pow(ppp,4) - 48*pow(epi,3)*eprot*mLamC*pow(ppp,4) - 48*pow(epi,2)*pow(eprot,2)*mLamC*pow(ppp,4) + 40*pow(epi,2)*pow(kkk,2)*mLamC*pow(ppp,4) + 40*epi*eprot*pow(kkk,2)*mLamC*pow(ppp,4) + 24*pow(epi,2)*eprot*mDel*mLamC*pow(ppp,4) - 4*epi*pow(kkk,2)*mDel*mLamC*pow(ppp,4) + 16*eprot*pow(kkk,2)*mDel*mLamC*pow(ppp,4) - 48*pow(epi,2)*eprot*mLam*mLamC*pow(ppp,4) - 48*epi*pow(eprot,2)*mLam*mLamC*pow(ppp,4) + 24*epi*pow(kkk,2)*mLam*mLamC*pow(ppp,4) + 24*eprot*pow(kkk,2)*mLam*mLamC*pow(ppp,4) + 24*epi*eprot*mDel*mLam*mLamC*pow(ppp,4) - 12*pow(kkk,2)*mDel*mLam*mLamC*pow(ppp,4) + 48*pow(epi,2)*eprot*pow(mLamC,2)*pow(ppp,4) + 48*epi*pow(eprot,2)*pow(mLamC,2)*pow(ppp,4) - 16*epi*pow(kkk,2)*pow(mLamC,2)*pow(ppp,4) - 16*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,4) - 24*epi*eprot*mDel*pow(mLamC,2)*pow(ppp,4) + 8*pow(kkk,2)*mDel*pow(mLamC,2)*pow(ppp,4) + 24*epi*eprot*mLam*pow(mLamC,2)*pow(ppp,4) + 24*pow(eprot,2)*mLam*pow(mLamC,2)*pow(ppp,4) - 12*eprot*mDel*mLam*pow(mLamC,2)*pow(ppp,4) - 16*epi*eprot*pow(mLamC,3)*pow(ppp,4) - 16*pow(eprot,2)*pow(mLamC,3)*pow(ppp,4) + 8*eprot*mDel*pow(mLamC,3)*pow(ppp,4) - 8*pow(epi,2)*pow(kkk,2)*mp*pow(ppp,4) - 8*epi*eprot*pow(kkk,2)*mp*pow(ppp,4) + 4*epi*pow(kkk,2)*mDel*mp*pow(ppp,4) - 8*pow(epi,3)*mLam*mp*pow(ppp,4) - 8*pow(epi,2)*eprot*mLam*mp*pow(ppp,4) + 4*epi*pow(kkk,2)*mLam*mp*pow(ppp,4) + 4*eprot*pow(kkk,2)*mLam*mp*pow(ppp,4) + 4*pow(epi,2)*mDel*mLam*mp*pow(ppp,4) - 2*pow(kkk,2)*mDel*mLam*mp*pow(ppp,4) + 8*epi*pow(kkk,2)*mLamC*mp*pow(ppp,4) + 8*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,4) - 4*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,4) + 16*pow(epi,2)*mLam*mLamC*mp*pow(ppp,4) + 16*epi*eprot*mLam*mLamC*mp*pow(ppp,4) - 8*epi*mDel*mLam*mLamC*mp*pow(ppp,4) - 8*epi*mLam*pow(mLamC,2)*mp*pow(ppp,4) - 8*eprot*mLam*pow(mLamC,2)*mp*pow(ppp,4) + 4*mDel*mLam*pow(mLamC,2)*mp*pow(ppp,4) - 16*pow(epi,4)*pow(eprot,3)*s12 - 48*pow(epi,3)*pow(eprot,4)*s12 - 48*pow(epi,2)*pow(eprot,5)*s12 - 16*epi*pow(eprot,6)*s12 - 24*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*s12 - 48*epi*pow(eprot,4)*pow(kkk,2)*s12 - 24*pow(eprot,5)*pow(kkk,2)*s12 - 24*pow(epi,3)*pow(eprot,3)*mDel*s12 - 48*pow(epi,2)*pow(eprot,4)*mDel*s12 - 24*epi*pow(eprot,5)*mDel*s12 + 12*epi*pow(eprot,3)*pow(kkk,2)*mDel*s12 + 12*pow(eprot,4)*pow(kkk,2)*mDel*s12 - 24*pow(epi,3)*pow(eprot,3)*mLam*s12 - 72*pow(epi,2)*pow(eprot,4)*mLam*s12 - 72*epi*pow(eprot,5)*mLam*s12 - 24*pow(eprot,6)*mLam*s12 - 36*pow(epi,2)*pow(eprot,3)*mDel*mLam*s12 - 72*epi*pow(eprot,4)*mDel*mLam*s12 - 36*pow(eprot,5)*mDel*mLam*s12 + 16*pow(epi,3)*pow(eprot,3)*mLamC*s12 + 48*pow(epi,2)*pow(eprot,4)*mLamC*s12 + 48*epi*pow(eprot,5)*mLamC*s12 + 16*pow(eprot,6)*mLamC*s12 + 24*pow(epi,2)*pow(eprot,3)*mDel*mLamC*s12 + 48*epi*pow(eprot,4)*mDel*mLamC*s12 + 24*pow(eprot,5)*mDel*mLamC*s12 - 16*pow(epi,4)*pow(eprot,2)*mp*s12 - 48*pow(epi,3)*pow(eprot,3)*mp*s12 - 48*pow(epi,2)*pow(eprot,4)*mp*s12 - 16*epi*pow(eprot,5)*mp*s12 + 16*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mp*s12 + 32*epi*pow(eprot,3)*pow(kkk,2)*mp*s12 + 16*pow(eprot,4)*pow(kkk,2)*mp*s12 - 16*pow(epi,3)*pow(eprot,2)*mDel*mp*s12 - 32*pow(epi,2)*pow(eprot,3)*mDel*mp*s12 - 16*epi*pow(eprot,4)*mDel*mp*s12 + 4*epi*pow(eprot,2)*pow(kkk,2)*mDel*mp*s12 + 4*pow(eprot,3)*pow(kkk,2)*mDel*mp*s12 - 16*pow(epi,3)*pow(eprot,2)*mLam*mp*s12 - 48*pow(epi,2)*pow(eprot,3)*mLam*mp*s12 - 48*epi*pow(eprot,4)*mLam*mp*s12 - 16*pow(eprot,5)*mLam*mp*s12 - 12*pow(epi,2)*pow(eprot,2)*mDel*mLam*mp*s12 - 24*epi*pow(eprot,3)*mDel*mLam*mp*s12 - 12*pow(eprot,4)*mDel*mLam*mp*s12 + 16*pow(epi,3)*pow(eprot,2)*mLamC*mp*s12 + 48*pow(epi,2)*pow(eprot,3)*mLamC*mp*s12 + 48*epi*pow(eprot,4)*mLamC*mp*s12 + 16*pow(eprot,5)*mLamC*mp*s12 + 16*pow(epi,2)*pow(eprot,2)*mDel*mLamC*mp*s12 + 32*epi*pow(eprot,3)*mDel*mLamC*mp*s12 + 16*pow(eprot,4)*mDel*mLamC*mp*s12 + 8*pow(epi,2)*eprot*pow(kkk,2)*pow(mp,2)*s12 + 16*epi*pow(eprot,2)*pow(kkk,2)*pow(mp,2)*s12 + 8*pow(eprot,3)*pow(kkk,2)*pow(mp,2)*s12 + 8*pow(epi,3)*eprot*mDel*pow(mp,2)*s12 + 16*pow(epi,2)*pow(eprot,2)*mDel*pow(mp,2)*s12 + 8*epi*pow(eprot,3)*mDel*pow(mp,2)*s12 - 12*epi*eprot*pow(kkk,2)*mDel*pow(mp,2)*s12 - 12*pow(eprot,2)*pow(kkk,2)*mDel*pow(mp,2)*s12 + 8*pow(epi,3)*eprot*mLam*pow(mp,2)*s12 + 24*pow(epi,2)*pow(eprot,2)*mLam*pow(mp,2)*s12 + 24*epi*pow(eprot,3)*mLam*pow(mp,2)*s12 + 8*pow(eprot,4)*mLam*pow(mp,2)*s12 + 20*pow(epi,2)*eprot*mDel*mLam*pow(mp,2)*s12 + 40*epi*pow(eprot,2)*mDel*mLam*pow(mp,2)*s12 + 20*pow(eprot,3)*mDel*mLam*pow(mp,2)*s12 - 8*pow(epi,2)*eprot*mDel*mLamC*pow(mp,2)*s12 - 16*epi*pow(eprot,2)*mDel*mLamC*pow(mp,2)*s12 - 8*pow(eprot,3)*mDel*mLamC*pow(mp,2)*s12 - 4*epi*pow(kkk,2)*mDel*pow(mp,3)*s12 - 4*eprot*pow(kkk,2)*mDel*pow(mp,3)*s12 - 4*pow(epi,2)*mDel*mLam*pow(mp,3)*s12 - 8*epi*eprot*mDel*mLam*pow(mp,3)*s12 - 4*pow(eprot,2)*mDel*mLam*pow(mp,3)*s12 + 32*pow(epi,3)*pow(eprot,2)*pow(ppp,2)*s12 + 64*pow(epi,2)*pow(eprot,3)*pow(ppp,2)*s12 + 32*epi*pow(eprot,4)*pow(ppp,2)*s12 - 12*pow(epi,2)*eprot*pow(kkk,2)*pow(ppp,2)*s12 + 20*epi*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s12 + 32*pow(eprot,3)*pow(kkk,2)*pow(ppp,2)*s12 + 16*pow(epi,2)*pow(eprot,2)*mDel*pow(ppp,2)*s12 + 16*epi*pow(eprot,3)*mDel*pow(ppp,2)*s12 - 10*epi*eprot*pow(kkk,2)*mDel*pow(ppp,2)*s12 - 32*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,2)*s12 + 48*pow(epi,2)*pow(eprot,2)*mLam*pow(ppp,2)*s12 + 96*epi*pow(eprot,3)*mLam*pow(ppp,2)*s12 + 48*pow(eprot,4)*mLam*pow(ppp,2)*s12 - 12*epi*eprot*pow(kkk,2)*mLam*pow(ppp,2)*s12 - 12*pow(eprot,2)*pow(kkk,2)*mLam*pow(ppp,2)*s12 + 24*epi*pow(eprot,2)*mDel*mLam*pow(ppp,2)*s12 + 24*pow(eprot,3)*mDel*mLam*pow(ppp,2)*s12 + 6*eprot*pow(kkk,2)*mDel*mLam*pow(ppp,2)*s12 - 32*pow(epi,2)*pow(eprot,2)*mLamC*pow(ppp,2)*s12 - 64*epi*pow(eprot,3)*mLamC*pow(ppp,2)*s12 - 32*pow(eprot,4)*mLamC*pow(ppp,2)*s12 + 8*epi*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s12 + 8*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2)*s12 - 16*epi*pow(eprot,2)*mDel*mLamC*pow(ppp,2)*s12 - 16*pow(eprot,3)*mDel*mLamC*pow(ppp,2)*s12 - 4*eprot*pow(kkk,2)*mDel*mLamC*pow(ppp,2)*s12 + 16*pow(epi,3)*eprot*mp*pow(ppp,2)*s12 + 32*pow(epi,2)*pow(eprot,2)*mp*pow(ppp,2)*s12 + 16*epi*pow(eprot,3)*mp*pow(ppp,2)*s12 - 24*epi*eprot*pow(kkk,2)*mp*pow(ppp,2)*s12 - 24*pow(eprot,2)*pow(kkk,2)*mp*pow(ppp,2)*s12 + 16*pow(epi,2)*eprot*mDel*mp*pow(ppp,2)*s12 + 16*epi*pow(eprot,2)*mDel*mp*pow(ppp,2)*s12 - 2*epi*pow(kkk,2)*mDel*mp*pow(ppp,2)*s12 + 10*eprot*pow(kkk,2)*mDel*mp*pow(ppp,2)*s12 + 8*pow(epi,2)*eprot*mLam*mp*pow(ppp,2)*s12 + 16*epi*pow(eprot,2)*mLam*mp*pow(ppp,2)*s12 + 8*pow(eprot,3)*mLam*mp*pow(ppp,2)*s12 + 4*epi*pow(kkk,2)*mLam*mp*pow(ppp,2)*s12 + 4*eprot*pow(kkk,2)*mLam*mp*pow(ppp,2)*s12 + 16*epi*eprot*mDel*mLam*mp*pow(ppp,2)*s12 + 16*pow(eprot,2)*mDel*mLam*mp*pow(ppp,2)*s12 - 2*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2)*s12 - 16*pow(epi,2)*eprot*mLamC*mp*pow(ppp,2)*s12 - 32*epi*pow(eprot,2)*mLamC*mp*pow(ppp,2)*s12 - 16*pow(eprot,3)*mLamC*mp*pow(ppp,2)*s12 - 16*epi*eprot*mDel*mLamC*mp*pow(ppp,2)*s12 - 16*pow(eprot,2)*mDel*mLamC*mp*pow(ppp,2)*s12 - 12*epi*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s12 - 12*eprot*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s12 + 6*pow(kkk,2)*mDel*pow(mp,2)*pow(ppp,2)*s12 - 8*pow(epi,2)*mLam*pow(mp,2)*pow(ppp,2)*s12 - 16*epi*eprot*mLam*pow(mp,2)*pow(ppp,2)*s12 - 8*pow(eprot,2)*mLam*pow(mp,2)*pow(ppp,2)*s12 - 8*epi*mDel*mLam*pow(mp,2)*pow(ppp,2)*s12 - 8*eprot*mDel*mLam*pow(mp,2)*pow(ppp,2)*s12 - 16*pow(epi,2)*eprot*pow(ppp,4)*s12 - 16*epi*pow(eprot,2)*pow(ppp,4)*s12 - 8*epi*pow(kkk,2)*pow(ppp,4)*s12 - 8*eprot*pow(kkk,2)*pow(ppp,4)*s12 + 8*epi*eprot*mDel*pow(ppp,4)*s12 + 4*pow(kkk,2)*mDel*pow(ppp,4)*s12 - 24*epi*eprot*mLam*pow(ppp,4)*s12 - 24*pow(eprot,2)*mLam*pow(ppp,4)*s12 + 12*eprot*mDel*mLam*pow(ppp,4)*s12 + 16*epi*eprot*mLamC*pow(ppp,4)*s12 + 16*pow(eprot,2)*mLamC*pow(ppp,4)*s12 - 8*eprot*mDel*mLamC*pow(ppp,4)*s12 + 8*epi*mLam*mp*pow(ppp,4)*s12 + 8*eprot*mLam*mp*pow(ppp,4)*s12 - 4*mDel*mLam*mp*pow(ppp,4)*s12 - 16*pow(epi,4)*pow(eprot,3)*s13 - 16*pow(epi,3)*pow(eprot,4)*s13 - 24*pow(epi,2)*pow(eprot,3)*pow(kkk,2)*s13 - 24*pow(epi,3)*pow(eprot,3)*mDel*s13 - 24*pow(epi,3)*pow(eprot,3)*mLam*s13 - 24*pow(epi,2)*pow(eprot,4)*mLam*s13 + 12*epi*pow(eprot,3)*pow(kkk,2)*mLam*s13 - 36*pow(epi,2)*pow(eprot,3)*mDel*mLam*s13 + 48*pow(epi,3)*pow(eprot,3)*mLamC*s13 + 48*pow(epi,2)*pow(eprot,4)*mLamC*s13 + 48*epi*pow(eprot,3)*pow(kkk,2)*mLamC*s13 + 72*pow(epi,2)*pow(eprot,3)*mDel*mLamC*s13 + 48*pow(epi,2)*pow(eprot,3)*mLam*mLamC*s13 + 48*epi*pow(eprot,4)*mLam*mLamC*s13 - 12*pow(eprot,3)*pow(kkk,2)*mLam*mLamC*s13 + 72*epi*pow(eprot,3)*mDel*mLam*mLamC*s13 - 48*pow(epi,2)*pow(eprot,3)*pow(mLamC,2)*s13 - 48*epi*pow(eprot,4)*pow(mLamC,2)*s13 - 24*pow(eprot,3)*pow(kkk,2)*pow(mLamC,2)*s13 - 72*epi*pow(eprot,3)*mDel*pow(mLamC,2)*s13 - 24*epi*pow(eprot,3)*mLam*pow(mLamC,2)*s13 - 24*pow(eprot,4)*mLam*pow(mLamC,2)*s13 - 36*pow(eprot,3)*mDel*mLam*pow(mLamC,2)*s13 + 16*epi*pow(eprot,3)*pow(mLamC,3)*s13 + 16*pow(eprot,4)*pow(mLamC,3)*s13 + 24*pow(eprot,3)*mDel*pow(mLamC,3)*s13 - 16*pow(epi,4)*pow(eprot,2)*mp*s13 - 16*pow(epi,3)*pow(eprot,3)*mp*s13 + 16*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*mp*s13 - 16*pow(epi,3)*pow(eprot,2)*mDel*mp*s13 - 16*pow(epi,3)*pow(eprot,2)*mLam*mp*s13 - 16*pow(epi,2)*pow(eprot,3)*mLam*mp*s13 + 4*epi*pow(eprot,2)*pow(kkk,2)*mLam*mp*s13 - 12*pow(epi,2)*pow(eprot,2)*mDel*mLam*mp*s13 + 48*pow(epi,3)*pow(eprot,2)*mLamC*mp*s13 + 48*pow(epi,2)*pow(eprot,3)*mLamC*mp*s13 - 32*epi*pow(eprot,2)*pow(kkk,2)*mLamC*mp*s13 + 48*pow(epi,2)*pow(eprot,2)*mDel*mLamC*mp*s13 + 32*pow(epi,2)*pow(eprot,2)*mLam*mLamC*mp*s13 + 32*epi*pow(eprot,3)*mLam*mLamC*mp*s13 - 4*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*mp*s13 + 24*epi*pow(eprot,2)*mDel*mLam*mLamC*mp*s13 - 48*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*mp*s13 - 48*epi*pow(eprot,3)*pow(mLamC,2)*mp*s13 + 16*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*mp*s13 - 48*epi*pow(eprot,2)*mDel*pow(mLamC,2)*mp*s13 - 16*epi*pow(eprot,2)*mLam*pow(mLamC,2)*mp*s13 - 16*pow(eprot,3)*mLam*pow(mLamC,2)*mp*s13 - 12*pow(eprot,2)*mDel*mLam*pow(mLamC,2)*mp*s13 + 16*epi*pow(eprot,2)*pow(mLamC,3)*mp*s13 + 16*pow(eprot,3)*pow(mLamC,3)*mp*s13 + 16*pow(eprot,2)*mDel*pow(mLamC,3)*mp*s13 + 8*pow(epi,2)*eprot*pow(kkk,2)*pow(mp,2)*s13 + 8*pow(epi,3)*eprot*mDel*pow(mp,2)*s13 + 8*pow(epi,3)*eprot*mLam*pow(mp,2)*s13 + 8*pow(epi,2)*pow(eprot,2)*mLam*pow(mp,2)*s13 - 12*epi*eprot*pow(kkk,2)*mLam*pow(mp,2)*s13 + 20*pow(epi,2)*eprot*mDel*mLam*pow(mp,2)*s13 - 16*epi*eprot*pow(kkk,2)*mLamC*pow(mp,2)*s13 - 24*pow(epi,2)*eprot*mDel*mLamC*pow(mp,2)*s13 - 16*pow(epi,2)*eprot*mLam*mLamC*pow(mp,2)*s13 - 16*epi*pow(eprot,2)*mLam*mLamC*pow(mp,2)*s13 + 12*eprot*pow(kkk,2)*mLam*mLamC*pow(mp,2)*s13 - 40*epi*eprot*mDel*mLam*mLamC*pow(mp,2)*s13 + 8*eprot*pow(kkk,2)*pow(mLamC,2)*pow(mp,2)*s13 + 24*epi*eprot*mDel*pow(mLamC,2)*pow(mp,2)*s13 + 8*epi*eprot*mLam*pow(mLamC,2)*pow(mp,2)*s13 + 8*pow(eprot,2)*mLam*pow(mLamC,2)*pow(mp,2)*s13 + 20*eprot*mDel*mLam*pow(mLamC,2)*pow(mp,2)*s13 - 8*eprot*mDel*pow(mLamC,3)*pow(mp,2)*s13 - 4*epi*pow(kkk,2)*mLam*pow(mp,3)*s13 - 4*pow(epi,2)*mDel*mLam*pow(mp,3)*s13 + 4*pow(kkk,2)*mLam*mLamC*pow(mp,3)*s13 + 8*epi*mDel*mLam*mLamC*pow(mp,3)*s13 - 4*mDel*mLam*pow(mLamC,2)*pow(mp,3)*s13 + 16*pow(epi,3)*pow(eprot,2)*pow(ppp,2)*s13 - 12*pow(epi,2)*eprot*pow(kkk,2)*pow(ppp,2)*s13 + 4*epi*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s13 - 12*epi*eprot*pow(kkk,2)*mDel*pow(ppp,2)*s13 + 24*pow(epi,2)*pow(eprot,2)*mLam*pow(ppp,2)*s13 - 10*epi*eprot*pow(kkk,2)*mLam*pow(ppp,2)*s13 - 2*pow(eprot,2)*pow(kkk,2)*mLam*pow(ppp,2)*s13 + 6*eprot*pow(kkk,2)*mDel*mLam*pow(ppp,2)*s13 - 48*pow(epi,2)*pow(eprot,2)*mLamC*pow(ppp,2)*s13 + 16*epi*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s13 - 4*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2)*s13 + 12*eprot*pow(kkk,2)*mDel*mLamC*pow(ppp,2)*s13 - 48*epi*pow(eprot,2)*mLam*mLamC*pow(ppp,2)*s13 + 14*eprot*pow(kkk,2)*mLam*mLamC*pow(ppp,2)*s13 + 48*epi*pow(eprot,2)*pow(mLamC,2)*pow(ppp,2)*s13 - 4*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2)*s13 + 24*pow(eprot,2)*mLam*pow(mLamC,2)*pow(ppp,2)*s13 - 16*pow(eprot,2)*pow(mLamC,3)*pow(ppp,2)*s13 - 8*epi*eprot*pow(kkk,2)*mp*pow(ppp,2)*s13 + 4*epi*pow(kkk,2)*mDel*mp*pow(ppp,2)*s13 - 8*pow(epi,2)*eprot*mLam*mp*pow(ppp,2)*s13 - 2*epi*pow(kkk,2)*mLam*mp*pow(ppp,2)*s13 + 4*eprot*pow(kkk,2)*mLam*mp*pow(ppp,2)*s13 - 2*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2)*s13 + 8*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,2)*s13 - 4*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2)*s13 + 16*epi*eprot*mLam*mLamC*mp*pow(ppp,2)*s13 + 2*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2)*s13 - 8*eprot*mLam*pow(mLamC,2)*mp*pow(ppp,2)*s13 - 4*epi*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s13 + 2*pow(kkk,2)*mLam*pow(mp,2)*pow(ppp,2)*s13 + 4*pow(kkk,2)*mLamC*pow(mp,2)*pow(ppp,2)*s13 - 4*epi*pow(kkk,2)*pow(ppp,4)*s13 + 2*pow(kkk,2)*mLam*pow(ppp,4)*s13 + 4*pow(kkk,2)*mLamC*pow(ppp,4)*s13 + 16*pow(epi,2)*pow(eprot,3)*s12*s13 + 16*epi*pow(eprot,4)*s12*s13 + 36*pow(eprot,3)*pow(kkk,2)*s12*s13 + 24*epi*pow(eprot,3)*mDel*s12*s13 + 24*epi*pow(eprot,3)*mLam*s12*s13 + 24*pow(eprot,4)*mLam*s12*s13 + 36*pow(eprot,3)*mDel*mLam*s12*s13 - 16*epi*pow(eprot,3)*mLamC*s12*s13 - 16*pow(eprot,4)*mLamC*s12*s13 - 24*pow(eprot,3)*mDel*mLamC*s12*s13 + 16*pow(epi,2)*pow(eprot,2)*mp*s12*s13 + 16*epi*pow(eprot,3)*mp*s12*s13 - 12*pow(eprot,2)*pow(kkk,2)*mp*s12*s13 + 16*epi*pow(eprot,2)*mDel*mp*s12*s13 + 16*epi*pow(eprot,2)*mLam*mp*s12*s13 + 16*pow(eprot,3)*mLam*mp*s12*s13 + 12*pow(eprot,2)*mDel*mLam*mp*s12*s13 - 16*epi*pow(eprot,2)*mLamC*mp*s12*s13 - 16*pow(eprot,3)*mLamC*mp*s12*s13 - 16*pow(eprot,2)*mDel*mLamC*mp*s12*s13 - 20*eprot*pow(kkk,2)*pow(mp,2)*s12*s13 - 8*epi*eprot*mDel*pow(mp,2)*s12*s13 - 8*epi*eprot*mLam*pow(mp,2)*s12*s13 - 8*pow(eprot,2)*mLam*pow(mp,2)*s12*s13 - 20*eprot*mDel*mLam*pow(mp,2)*s12*s13 + 8*eprot*mDel*mLamC*pow(mp,2)*s12*s13 - 4*pow(kkk,2)*pow(mp,3)*s12*s13 + 4*mDel*mLam*pow(mp,3)*s12*s13 - 16*epi*pow(eprot,2)*pow(ppp,2)*s12*s13 - 10*eprot*pow(kkk,2)*pow(ppp,2)*s12*s13 - 24*pow(eprot,2)*mLam*pow(ppp,2)*s12*s13 + 16*pow(eprot,2)*mLamC*pow(ppp,2)*s12*s13 - 2*pow(kkk,2)*mp*pow(ppp,2)*s12*s13 + 8*eprot*mLam*mp*pow(ppp,2)*s12*s13 - kkk*ppp*(4*pow(kkk,2)*mDel*mLam*mLamC*pow(mp,2) + 32*pow(epi,5)*eprot*(2*eprot + mp) + 9*pow(kkk,2)*mDel*mLam*mLamC*pow(ppp,2) - 6*pow(kkk,2)*mDel*pow(mLamC,2)*pow(ppp,2) + 7*pow(kkk,2)*mDel*mLam*mp*pow(ppp,2) + 14*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) - 8*mDel*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 4*mDel*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 12*mDel*mLam*mLamC*pow(ppp,4) - 8*mDel*pow(mLamC,2)*pow(ppp,4) + 8*pow(epi,4)*(18*pow(eprot,3) + 4*pow(eprot,2)*(2*mDel + 2*mLam - 5*mLamC + 3*mp) - mp*(mDel*mp + mLam*mp + 2*pow(ppp,2)) + eprot*(3*mDel*mp + 3*mLam*mp - 10*(mLamC*mp + pow(ppp,2)))) - 4*pow(kkk,2)*mDel*pow(mp,2)*s12 - 3*pow(kkk,2)*mDel*pow(ppp,2)*s12 + 8*mDel*mLam*mp*pow(ppp,2)*s12 - 4*mDel*pow(mp,2)*pow(ppp,2)*s12 - 4*mDel*pow(ppp,4)*s12 + 8*pow(eprot,5)*(-3*mLam*mLamC + 2*pow(mLamC,2) + s12) - 4*pow(eprot,4)*(2*pow(kkk,2)*(mLam + 2*mLamC) + mDel*(5*mLam*mLamC - 14*pow(mLamC,2) + 9*s12) + 4*(-3*mLam*pow(mLamC,2) + 2*pow(mLamC,3) + mLam*mLamC*mp - 2*pow(mLamC,2)*mp + 3*mLam*s12 - 2*mLamC*s12 + mp*s12)) - 4*pow(kkk,2)*mLam*pow(mp,2)*s13 - 8*pow(kkk,2)*mLamC*pow(mp,2)*s13 - 8*mDel*mLam*mLamC*pow(mp,2)*s13 + 8*mDel*pow(mLamC,2)*pow(mp,2)*s13 - 4*mLam*mLamC*pow(mp,3)*s13 - 3*pow(kkk,2)*mLam*pow(ppp,2)*s13 - 6*pow(kkk,2)*mLamC*pow(ppp,2)*s13 - 4*mLam*mLamC*mp*pow(ppp,2)*s13 + 4*pow(mp,3)*s12*s13 + 4*mp*pow(ppp,2)*s12*s13 + 4*pow(eprot,3)*(2*mLam*pow(mLamC,2)*mp - 4*pow(mLamC,3)*mp + 2*mLam*mLamC*pow(mp,2) + 12*mLam*mLamC*pow(ppp,2) - 8*pow(mLamC,2)*pow(ppp,2) + pow(kkk,2)*(4*pow(mLamC,2) + mDel*(mLam + 2*mLamC) + 4*mLamC*mp + 2*mLam*(mLamC + mp) - 6*s12) - 2*mLam*mp*s12 + 4*mLamC*mp*s12 - 2*pow(mp,2)*s12 - 4*pow(ppp,2)*s12 + mDel*(-4*pow(mLamC,3) + 2*pow(mLamC,2)*mp + mLam*(6*pow(mLamC,2) - 3*mLamC*mp - 6*s12) + 4*mLamC*s12 + mp*s12) + 7*mLam*mLamC*s13 - 2*pow(mLamC,2)*s13 - 5*s12*s13) + 8*pow(epi,3)*(12*pow(eprot,4) + 2*mLam*mLamC*pow(mp,2) + pow(eprot,3)*(15*mDel + 19*mLam - 44*mLamC + 12*mp) + 3*pow(kkk,2)*pow(ppp,2) + 4*mLamC*mp*pow(ppp,2) + 2*pow(ppp,4) - 2*mDel*mp*(mLam*mp - mLamC*mp + pow(ppp,2)) + 2*pow(eprot,2)*(2*pow(kkk,2) - 7*mLam*mLamC + 8*pow(mLamC,2) + 4*mLam*mp - 14*mLamC*mp + mDel*(3*mLam - 9*mLamC + 2*mp) - 7*pow(ppp,2) - 3*s12 - 3*s13) - eprot*(4*pow(kkk,2)*mp + 4*mLam*mLamC*mp - 8*pow(mLamC,2)*mp + 3*mLam*pow(mp,2) + 11*mLam*pow(ppp,2) - 24*mLamC*pow(ppp,2) + 6*mp*pow(ppp,2) + mDel*(-4*mLam*mp + 8*mLamC*mp + 3*(pow(mp,2) + pow(ppp,2))) + 2*mp*s12 + 2*mp*s13)) - 2*eprot*pow(kkk,2)*(-6*pow(mLamC,2)*pow(ppp,2) + 14*mLamC*mp*pow(ppp,2) - 4*pow(mp,2)*s12 - 3*pow(ppp,2)*s12 + mDel*(-4*pow(mLamC,2)*mp + 2*mLam*pow(mp,2) + 8*mLam*pow(ppp,2) + 4*mLamC*(pow(mp,2) + 4*pow(ppp,2)) + 4*mp*s12) + 8*mLamC*mp*s13 + mLam*(4*mLamC*pow(mp,2) + 9*mLamC*pow(ppp,2) + 7*mp*pow(ppp,2) + 4*mp*s13)) - 4*eprot*(-4*pow(mLamC,2)*pow(ppp,4) - 2*pow(mp,2)*pow(ppp,2)*s12 - 2*pow(ppp,4)*s12 + 2*pow(mLamC,2)*pow(mp,2)*s13 - 2*pow(mLamC,2)*pow(ppp,2)*s13 - 5*pow(mp,2)*s12*s13 - 5*pow(ppp,2)*s12*s13 + mDel*(4*pow(mLamC,3)*pow(ppp,2) - 4*mLamC*pow(ppp,2)*s12 + mLam*(2*pow(mLamC,2)*(pow(mp,2) - 3*pow(ppp,2)) - 2*(pow(mp,2) - 3*pow(ppp,2))*s12 + mLamC*mp*(pow(mp,2) - 3*pow(ppp,2) - 4*s13)) + 2*pow(mLamC,2)*mp*(pow(ppp,2) + s13) + mp*s12*(-pow(mp,2) + pow(ppp,2) + 2*s13)) + mLam*(-2*pow(mLamC,2)*mp*(2*pow(ppp,2) + s13) + 2*mp*s12*(2*pow(ppp,2) + s13) + mLamC*(6*pow(ppp,4) + 7*pow(ppp,2)*s13 + pow(mp,2)*(2*pow(ppp,2) + 3*s13)))) - 4*pow(eprot,2)*(2*mLam*pow(mLamC,2)*pow(mp,2) + 12*mLam*pow(mLamC,2)*pow(ppp,2) - 8*pow(mLamC,3)*pow(ppp,2) - 4*mLam*mLamC*mp*pow(ppp,2) + 8*pow(mLamC,2)*mp*pow(ppp,2) - 2*mLam*pow(mp,2)*s12 - 12*mLam*pow(ppp,2)*s12 + 8*mLamC*pow(ppp,2)*s12 - 4*mp*pow(ppp,2)*s12 + 6*mLam*pow(mLamC,2)*s13 - 4*pow(mLamC,3)*s13 - 5*mLam*mLamC*mp*s13 + 8*pow(mLamC,2)*mp*s13 - 6*mLam*s12*s13 + 4*mLamC*s12*s13 - 3*mp*s12*s13 + pow(kkk,2)*(4*pow(mLamC,2)*mp - 2*mLam*pow(ppp,2) - 4*mLamC*pow(ppp,2) + mDel*(mLam*mLamC + 2*pow(mLamC,2) - 3*s12) - 4*mp*s12 - 3*mLam*s13 - 6*mLamC*s13) - mDel*(-4*pow(mLamC,3)*mp + 4*mLamC*mp*s12 + s12*(3*pow(mp,2) + 10*pow(ppp,2) + 6*s13) - 4*pow(mLamC,2)*(pow(mp,2) + 3*(pow(ppp,2) + s13)) + mLam*(4*pow(mLamC,2)*mp - 4*mp*s12 + mLamC*(pow(mp,2) + 2*pow(ppp,2) + 6*s13)))) + 4*pow(epi,2)*(4*pow(eprot,5) + 2*pow(kkk,2)*mDel*pow(mp,2) + 2*pow(kkk,2)*mLam*pow(mp,2) + 6*mDel*mLam*mLamC*pow(mp,2) - 2*mDel*pow(mLamC,2)*pow(mp,2) - 2*mLam*pow(mLamC,2)*pow(mp,2) + mDel*mLam*pow(mp,3) + 2*pow(eprot,4)*(7*mDel + 14*mLam + 4*(-7*mLamC + mp)) + 3*pow(kkk,2)*mDel*pow(ppp,2) + 3*pow(kkk,2)*mLam*pow(ppp,2) - 9*pow(kkk,2)*mLamC*pow(ppp,2) + 7*pow(kkk,2)*mp*pow(ppp,2) - 5*mDel*mLam*mp*pow(ppp,2) + 8*mDel*mLamC*mp*pow(ppp,2) - 4*mLam*mLamC*mp*pow(ppp,2) - 4*pow(mLamC,2)*mp*pow(ppp,2) + 2*mLam*pow(mp,2)*pow(ppp,2) - 2*mDel*pow(ppp,4) + 6*mLam*pow(ppp,4) - 8*mLamC*pow(ppp,4) + 2*mLam*pow(mp,2)*s12 + 2*mDel*pow(mp,2)*s13 + pow(eprot,3)*(12*pow(kkk,2) + mDel*(17*mLam - 64*mLamC + 2*mp) - 2*(31*mLam*mLamC - 34*pow(mLamC,2) - 7*mLam*mp + 26*mLamC*mp + 4*pow(ppp,2) + 11*s12 + s13)) - pow(eprot,2)*(8*pow(mLamC,3) - 40*pow(mLamC,2)*mp + 4*pow(kkk,2)*(mDel + mLam + 3*(mLamC + mp)) - 64*mLamC*pow(ppp,2) + 8*mp*pow(ppp,2) - 8*mLamC*s12 + 12*mp*s12 - 28*mLamC*s13 + 8*mp*s13 + 2*mLam*(-6*pow(mLamC,2) + 10*mLamC*mp + 3*pow(mp,2) + 17*pow(ppp,2) + 6*s12 + 5*s13) + mDel*(18*mLam*mLamC - 24*pow(mLamC,2) - 11*mLam*mp + 20*mLamC*mp + 4*pow(mp,2) + 12*pow(ppp,2) + 10*s12 + 12*s13)) + eprot*(2*pow(kkk,2)*(mDel*mp + mLam*mp + 6*mLamC*mp + pow(ppp,2)) + mDel*(14*pow(mLamC,2)*mp + 4*mLamC*(3*pow(mp,2) + 2*pow(ppp,2)) + mLam*(-12*mLamC*mp - 5*pow(mp,2) + 3*pow(ppp,2)) - 2*mp*(pow(ppp,2) + s12 + s13)) + 2*(-2*pow(mLamC,3)*mp - 18*pow(mLamC,2)*pow(ppp,2) + 2*pow(ppp,4) - pow(mp,2)*s12 + 5*pow(ppp,2)*s12 - pow(mp,2)*s13 + pow(ppp,2)*s13 + 2*mLamC*mp*(6*pow(ppp,2) + s12 + 2*s13) + mLam*(pow(mLamC,2)*mp + mLamC*(5*pow(mp,2) + 17*pow(ppp,2)) - mp*(2*pow(ppp,2) + s12 + s13))))) + 2*epi*(4*pow(eprot,5)*(3*mLam - 4*mLamC) + 2*pow(eprot,4)*(4*pow(kkk,2) + 5*mDel*mLam - 28*mDel*mLamC - 40*mLam*mLamC + 40*pow(mLamC,2) + 4*mLam*mp - 16*mLamC*mp - 8*s12) - 2*pow(eprot,3)*(-24*mLam*pow(mLamC,2) + 16*pow(mLamC,3) + 16*mLam*mLamC*mp - 32*pow(mLamC,2)*mp + 2*mLam*pow(mp,2) + 2*pow(kkk,2)*(mDel + 3*mLam + 8*mLamC + 2*mp) + 12*mLam*pow(ppp,2) - 16*mLamC*pow(ppp,2) + 24*mLam*s12 - 16*mLamC*s12 + 12*mp*s12 + mDel*(23*mLam*mLamC - 38*pow(mLamC,2) - 3*mLam*mp + 4*mLamC*mp + 19*s12) + 7*mLam*s13 - 4*mLamC*s13) - pow(kkk,2)*(-6*pow(mLamC,2)*pow(ppp,2) + 14*mLamC*mp*pow(ppp,2) + mDel*(4*mLam*pow(mp,2) + 4*mLamC*pow(mp,2) + 9*mLam*pow(ppp,2) + 3*mLamC*pow(ppp,2) + 7*mp*pow(ppp,2)) + mLam*(4*mLamC*pow(mp,2) + 9*mLamC*pow(ppp,2) + 7*mp*pow(ppp,2)) - 4*pow(mp,2)*s12 - 3*pow(ppp,2)*s12 - 4*pow(mp,2)*s13 - 3*pow(ppp,2)*s13) - 2*eprot*(4*mLam*pow(mLamC,2)*pow(mp,2) + 12*mLam*pow(mLamC,2)*pow(ppp,2) - 8*pow(mLamC,3)*pow(ppp,2) + 12*pow(mLamC,2)*mp*pow(ppp,2) - 2*mLam*pow(mp,2)*pow(ppp,2) - 6*mLam*pow(ppp,4) + 8*mLamC*pow(ppp,4) - 4*mLam*pow(mp,2)*s12 - 12*mLam*pow(ppp,2)*s12 + 8*mLamC*pow(ppp,2)*s12 - 4*mp*pow(ppp,2)*s12 + 4*pow(mLamC,2)*mp*s13 - 3*mLam*pow(mp,2)*s13 - 4*mLamC*pow(mp,2)*s13 - 7*mLam*pow(ppp,2)*s13 + 4*mLamC*pow(ppp,2)*s13 + pow(kkk,2)*(4*mDel*mLamC*mp + 4*pow(mLamC,2)*mp - 2*mLam*pow(mp,2) - 5*mLam*pow(ppp,2) + 5*mLamC*pow(ppp,2) - 7*mp*pow(ppp,2) - 2*mDel*(pow(mp,2) + 4*pow(ppp,2)) - 4*mp*s12 - 4*mp*s13) - mDel*(-4*pow(mLamC,3)*mp + pow(mLamC,2)*(-6*pow(mp,2) + 2*pow(ppp,2)) + 3*(pow(mp,2) + pow(ppp,2))*s12 + 4*mLamC*mp*(pow(ppp,2) + s12 + s13) + mLam*(4*pow(mLamC,2)*mp + 7*mLamC*pow(mp,2) + pow(mp,3) - 9*mLamC*pow(ppp,2) - 3*mp*pow(ppp,2) - 4*mp*s12 - 4*mp*s13))) + 2*(4*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 2*mLam*mLamC*pow(mp,2)*pow(ppp,2) - 6*mLam*mLamC*pow(ppp,4) + 4*pow(mLamC,2)*pow(ppp,4) - 4*mLam*mp*pow(ppp,2)*s12 + 2*pow(mp,2)*pow(ppp,2)*s12 + 2*pow(ppp,4)*s12 + mLam*pow(mp,3)*s13 + mLam*mp*pow(ppp,2)*s13 + mDel*(-4*pow(mLamC,2)*mp*pow(ppp,2) + 4*mLamC*pow(ppp,4) + pow(mp,3)*s12 + mp*pow(ppp,2)*s12 - 4*mLamC*pow(mp,2)*s13 - mLam*(2*pow(mLamC,2)*pow(mp,2) + 3*pow(ppp,4) + mLamC*(pow(mp,3) - 7*mp*pow(ppp,2)) + pow(mp,2)*(pow(ppp,2) - 2*(s12 + s13))))) + 2*pow(eprot,2)*(4*mLam*pow(mLamC,2)*mp - 8*pow(mLamC,3)*mp + 8*mLam*mLamC*pow(mp,2) + 46*mLam*mLamC*pow(ppp,2) - 44*pow(mLamC,2)*pow(ppp,2) - 4*mLam*mp*pow(ppp,2) + 16*mLamC*mp*pow(ppp,2) - 4*mLam*mp*s12 + 8*mLamC*mp*s12 - 4*pow(mp,2)*s12 + 6*pow(ppp,2)*s12 + 2*pow(kkk,2)*(2*pow(mLamC,2) + mDel*(mLam + 3*mLamC) + 8*mLamC*mp + mLam*(mLamC + 2*mp) - 2*pow(ppp,2) - 3*s12 - 3*s13) + 16*mLam*mLamC*s13 - 20*pow(mLamC,2)*s13 - 5*mLam*mp*s13 + 16*mLamC*mp*s13 + 8*s12*s13 + mDel*(-4*pow(mLamC,3) + 16*pow(mLamC,2)*mp - mp*s12 + 4*mLamC*(2*pow(mp,2) + 6*pow(ppp,2) + s12 + 6*s13) + mLam*(6*pow(mLamC,2) - 15*mLamC*mp - pow(mp,2) - 2*(pow(ppp,2) + 3*(s12 + s13)))))))*cos(psi) + 2*pow(kkk,2)*pow(ppp,2)*(-(pow(kkk,2)*mDel*mLam*mp) - 2*pow(kkk,2)*mDel*mLamC*mp + mDel*mLam*pow(mLamC,2)*mp - mDel*mLam*mLamC*pow(mp,2) + 4*pow(epi,4)*(5*eprot + mp) - 6*mDel*mLam*mLamC*pow(ppp,2) + 4*mDel*pow(mLamC,2)*pow(ppp,2) - mDel*mLam*mp*pow(ppp,2) - 2*mDel*mLamC*mp*pow(ppp,2) + 2*pow(epi,3)*(16*pow(eprot,2) + mDel*mp + mLam*mp - 4*mLamC*mp + eprot*(7*mDel + 7*mLam - 20*mLamC + 8*mp) - 6*pow(ppp,2)) - 2*pow(eprot,3)*(6*mLam*mLamC - 4*pow(mLamC,2) + 2*mDel*(mLam + 2*mLamC) + mLam*mp + 2*mLamC*mp - 2*s12) - mDel*mLam*mp*s12 + mDel*pow(mp,2)*s12 + 2*mDel*pow(ppp,2)*s12 - mDel*mLam*mp*s13 - 2*mDel*mLamC*mp*s13 + mLam*mLamC*mp*s13 + mLam*pow(mp,2)*s13 + 2*mLamC*pow(mp,2)*s13 + mLam*pow(ppp,2)*s13 + 2*mLamC*pow(ppp,2)*s13 - mp*s12*s13 - pow(eprot,2)*(-6*mLam*pow(mLamC,2) + 4*pow(mLamC,3) + 2*pow(kkk,2)*(mLam + 2*mLamC) + 4*mLam*mLamC*mp - 8*pow(mLamC,2)*mp + 6*mLam*s12 - 4*mLamC*s12 + 4*mp*s12 + mDel*(2*mLam*mLamC - 12*pow(mLamC,2) - mLam*mp - 2*mLamC*mp + 10*s12) + mLam*s13 + 2*mLamC*s13) + eprot*(-2*mLam*pow(mLamC,2)*mp + 2*mLam*mLamC*pow(mp,2) + pow(kkk,2)*(mLam + 2*mLamC)*(mDel + 2*mp) + 12*mLam*mLamC*pow(ppp,2) - 8*pow(mLamC,2)*pow(ppp,2) + 2*mLam*mp*pow(ppp,2) + 4*mLamC*mp*pow(ppp,2) + 2*mLam*mp*s12 - 2*pow(mp,2)*s12 - 4*pow(ppp,2)*s12 + 7*mLam*mLamC*s13 - 2*pow(mLamC,2)*s13 + 2*mLam*mp*s13 + 4*mLamC*mp*s13 - 5*s12*s13 + mDel*(2*pow(mLamC,3) + 2*pow(mLamC,2)*mp + mp*s12 + 2*mLamC*(pow(mp,2) + 4*pow(ppp,2) - s12 + 3*s13) + mLam*(-3*pow(mLamC,2) - 3*mLamC*mp + pow(mp,2) + 4*pow(ppp,2) + 3*s12 + 3*s13))) + pow(epi,2)*(12*pow(eprot,3) - 4*pow(kkk,2)*mp + 5*mDel*mLam*mp - 6*mDel*mLamC*mp + 4*pow(mLamC,2)*mp - 2*mDel*pow(mp,2) - 2*mLam*pow(mp,2) + 2*pow(eprot,2)*(13*mDel + 12*mLam - 30*mLamC + 8*mp) - 2*mDel*pow(ppp,2) - 10*mLam*pow(ppp,2) + 20*mLamC*pow(ppp,2) - 4*mp*pow(ppp,2) + eprot*(4*pow(kkk,2) - mDel*(3*mLam + 20*mLamC + 2*mp) - 2*(11*mLam*mLamC - 12*pow(mLamC,2) - 2*mLam*mp + 14*mLamC*mp + 6*pow(ppp,2) + 3*s12 + 3*s13))) + epi*(-5*mDel*mLam*mLamC*mp + 4*mDel*pow(mLamC,2)*mp - 2*mLam*pow(mLamC,2)*mp + 2*pow(kkk,2)*(mDel + mLam + 2*mLamC)*mp + 2*mDel*mLam*pow(mp,2) + 2*mDel*mLamC*pow(mp,2) + 2*mLam*mLamC*pow(mp,2) + 2*pow(eprot,3)*(4*mDel + 5*mLam + 2*(-5*mLamC + mp)) + 9*mDel*mLam*pow(ppp,2) - 2*mDel*mLamC*pow(ppp,2) + 12*mLam*mLamC*pow(ppp,2) - 8*pow(mLamC,2)*pow(ppp,2) + 2*mDel*mp*pow(ppp,2) + 2*mLam*mp*pow(ppp,2) + 4*mLamC*mp*pow(ppp,2) - mDel*mp*s12 + 2*mLam*mp*s12 - 2*pow(mp,2)*s12 - 4*pow(ppp,2)*s12 + pow(eprot,2)*(4*pow(kkk,2) - mDel*(5*mLam + 38*mLamC + 2*mp) - 2*(17*mLam*mLamC - 16*pow(mLamC,2) + 12*mLamC*mp + s12 - s13)) + 2*mDel*mp*s13 - mLam*mp*s13 - 2*pow(mp,2)*s13 - 2*pow(ppp,2)*s13 - eprot*(-6*mLam*pow(mLamC,2) + 4*pow(mLamC,3) + 4*mLam*mLamC*mp - 12*pow(mLamC,2)*mp + 2*mLam*pow(mp,2) + 2*pow(kkk,2)*(mDel + mLam + 2*(mLamC + mp)) + 10*mLam*pow(ppp,2) - 20*mLamC*pow(ppp,2) + 4*mp*pow(ppp,2) + 6*mLam*s12 - 4*mLamC*s12 + 4*mp*s12 + 5*mLam*s13 - 8*mLamC*s13 + 4*mp*s13 + mDel*(-3*mLam*mLamC - 4*pow(mLamC,2) - 5*mLam*mp + 2*pow(mp,2) + 8*pow(ppp,2) + 5*s12 + 6*s13))))*cos(2*psi) - 8*pow(epi,3)*pow(kkk,3)*pow(ppp,3)*cos(3*psi) - 8*pow(epi,2)*eprot*pow(kkk,3)*pow(ppp,3)*cos(3*psi) - 4*pow(epi,2)*pow(kkk,3)*mDel*pow(ppp,3)*cos(3*psi) - 8*epi*eprot*pow(kkk,3)*mDel*pow(ppp,3)*cos(3*psi) - 4*pow(epi,2)*pow(kkk,3)*mLam*pow(ppp,3)*cos(3*psi) - 4*epi*eprot*pow(kkk,3)*mLam*pow(ppp,3)*cos(3*psi) + 6*epi*pow(kkk,3)*mDel*mLam*pow(ppp,3)*cos(3*psi) + 4*eprot*pow(kkk,3)*mDel*mLam*pow(ppp,3)*cos(3*psi) + 12*pow(epi,2)*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) + 12*epi*eprot*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*mDel*mLamC*pow(ppp,3)*cos(3*psi) + 8*eprot*pow(kkk,3)*mDel*mLamC*pow(ppp,3)*cos(3*psi) + 6*epi*pow(kkk,3)*mLam*mLamC*pow(ppp,3)*cos(3*psi) + 6*eprot*pow(kkk,3)*mLam*mLamC*pow(ppp,3)*cos(3*psi) - 3*pow(kkk,3)*mDel*mLam*mLamC*pow(ppp,3)*cos(3*psi) - 4*epi*pow(kkk,3)*pow(mLamC,2)*pow(ppp,3)*cos(3*psi) - 4*eprot*pow(kkk,3)*pow(mLamC,2)*pow(ppp,3)*cos(3*psi) + 2*pow(kkk,3)*mDel*pow(mLamC,2)*pow(ppp,3)*cos(3*psi) - 4*pow(epi,2)*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) - 4*epi*eprot*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*mDel*mp*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*mLam*mp*pow(ppp,3)*cos(3*psi) + 2*eprot*pow(kkk,3)*mLam*mp*pow(ppp,3)*cos(3*psi) - pow(kkk,3)*mDel*mLam*mp*pow(ppp,3)*cos(3*psi) + 4*epi*pow(kkk,3)*mLamC*mp*pow(ppp,3)*cos(3*psi) + 4*eprot*pow(kkk,3)*mLamC*mp*pow(ppp,3)*cos(3*psi) - 2*pow(kkk,3)*mDel*mLamC*mp*pow(ppp,3)*cos(3*psi) - 2*epi*pow(kkk,3)*pow(ppp,3)*s12*cos(3*psi) - 2*eprot*pow(kkk,3)*pow(ppp,3)*s12*cos(3*psi) + pow(kkk,3)*mDel*pow(ppp,3)*s12*cos(3*psi) - 2*epi*pow(kkk,3)*pow(ppp,3)*s13*cos(3*psi) + pow(kkk,3)*mLam*pow(ppp,3)*s13*cos(3*psi) + 2*pow(kkk,3)*mLamC*pow(ppp,3)*s13*cos(3*psi)))/(9.*s12*s13));
	    	break;
	    case FormulaParam::ReA1C: //f13
	    	return ReBWTwoResonances(s23,mKst,GKst, s12, mLam, GLam)*((-2*pow(mLamC,2)*(-8*pow(epi,4)*pow(eprot,4) + 8*pow(epi,4)*pow(eprot,2)*pow(mKst,2) + 4*pow(epi,3)*pow(eprot,3)*pow(mKst,2) + 8*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(mKst,2) - 12*pow(epi,3)*pow(eprot,4)*mLam + 12*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mLam + 6*pow(epi,2)*pow(eprot,3)*pow(mKst,2)*mLam - 4*epi*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mLam + 16*pow(epi,4)*pow(eprot,3)*mLamC + 24*pow(epi,3)*pow(eprot,4)*mLamC - 28*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mLamC - 12*pow(epi,2)*pow(eprot,3)*pow(mKst,2)*mLamC - 16*epi*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mLamC + 24*pow(epi,3)*pow(eprot,3)*mLam*mLamC + 24*pow(epi,2)*pow(eprot,4)*mLam*mLamC - 30*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLam*mLamC - 12*epi*pow(eprot,3)*pow(mKst,2)*mLam*mLamC + 4*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mLam*mLamC - 8*pow(epi,4)*pow(eprot,2)*pow(mLamC,2) - 48*pow(epi,3)*pow(eprot,3)*pow(mLamC,2) - 24*pow(epi,2)*pow(eprot,4)*pow(mLamC,2) + 36*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2) + 12*epi*pow(eprot,3)*pow(mKst,2)*pow(mLamC,2) + 8*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*pow(mLamC,2) - 12*pow(epi,3)*pow(eprot,2)*mLam*pow(mLamC,2) - 48*pow(epi,2)*pow(eprot,3)*mLam*pow(mLamC,2) - 12*epi*pow(eprot,4)*mLam*pow(mLamC,2) + 24*epi*pow(eprot,2)*pow(mKst,2)*mLam*pow(mLamC,2) + 6*pow(eprot,3)*pow(mKst,2)*mLam*pow(mLamC,2) + 24*pow(epi,3)*pow(eprot,2)*pow(mLamC,3) + 48*pow(epi,2)*pow(eprot,3)*pow(mLamC,3) + 8*epi*pow(eprot,4)*pow(mLamC,3) - 20*epi*pow(eprot,2)*pow(mKst,2)*pow(mLamC,3) - 4*pow(eprot,3)*pow(mKst,2)*pow(mLamC,3) + 24*pow(epi,2)*pow(eprot,2)*mLam*pow(mLamC,3) + 24*epi*pow(eprot,3)*mLam*pow(mLamC,3) - 6*pow(eprot,2)*pow(mKst,2)*mLam*pow(mLamC,3) - 24*pow(epi,2)*pow(eprot,2)*pow(mLamC,4) - 16*epi*pow(eprot,3)*pow(mLamC,4) + 4*pow(eprot,2)*pow(mKst,2)*pow(mLamC,4) - 12*epi*pow(eprot,2)*mLam*pow(mLamC,4) + 8*epi*pow(eprot,2)*pow(mLamC,5) - 8*pow(epi,4)*pow(eprot,3)*mp + 8*pow(epi,4)*eprot*pow(mKst,2)*mp + 4*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mp - 8*pow(epi,2)*eprot*pow(kkk,2)*pow(mKst,2)*mp - 8*pow(epi,3)*pow(eprot,3)*mLam*mp + 8*pow(epi,3)*eprot*pow(mKst,2)*mLam*mp + 4*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLam*mp + 16*pow(epi,4)*pow(eprot,2)*mLamC*mp + 24*pow(epi,3)*pow(eprot,3)*mLamC*mp - 28*pow(epi,3)*eprot*pow(mKst,2)*mLamC*mp - 12*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLamC*mp + 16*epi*eprot*pow(kkk,2)*pow(mKst,2)*mLamC*mp + 16*pow(epi,3)*pow(eprot,2)*mLam*mLamC*mp + 16*pow(epi,2)*pow(eprot,3)*mLam*mLamC*mp - 20*pow(epi,2)*eprot*pow(mKst,2)*mLam*mLamC*mp - 8*epi*pow(eprot,2)*pow(mKst,2)*mLam*mLamC*mp - 8*pow(epi,4)*eprot*pow(mLamC,2)*mp - 48*pow(epi,3)*pow(eprot,2)*pow(mLamC,2)*mp - 24*pow(epi,2)*pow(eprot,3)*pow(mLamC,2)*mp + 36*pow(epi,2)*eprot*pow(mKst,2)*pow(mLamC,2)*mp + 12*epi*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2)*mp - 8*eprot*pow(kkk,2)*pow(mKst,2)*pow(mLamC,2)*mp - 8*pow(epi,3)*eprot*mLam*pow(mLamC,2)*mp - 32*pow(epi,2)*pow(eprot,2)*mLam*pow(mLamC,2)*mp - 8*epi*pow(eprot,3)*mLam*pow(mLamC,2)*mp + 16*epi*eprot*pow(mKst,2)*mLam*pow(mLamC,2)*mp + 4*pow(eprot,2)*pow(mKst,2)*mLam*pow(mLamC,2)*mp + 24*pow(epi,3)*eprot*pow(mLamC,3)*mp + 48*pow(epi,2)*pow(eprot,2)*pow(mLamC,3)*mp + 8*epi*pow(eprot,3)*pow(mLamC,3)*mp - 20*epi*eprot*pow(mKst,2)*pow(mLamC,3)*mp - 4*pow(eprot,2)*pow(mKst,2)*pow(mLamC,3)*mp + 16*pow(epi,2)*eprot*mLam*pow(mLamC,3)*mp + 16*epi*pow(eprot,2)*mLam*pow(mLamC,3)*mp - 4*eprot*pow(mKst,2)*mLam*pow(mLamC,3)*mp - 24*pow(epi,2)*eprot*pow(mLamC,4)*mp - 16*epi*pow(eprot,2)*pow(mLamC,4)*mp + 4*eprot*pow(mKst,2)*pow(mLamC,4)*mp - 8*epi*eprot*mLam*pow(mLamC,4)*mp + 8*epi*eprot*pow(mLamC,5)*mp + 4*pow(epi,3)*pow(eprot,2)*mLam*pow(mp,2) - 4*pow(epi,3)*pow(mKst,2)*mLam*pow(mp,2) - 2*pow(epi,2)*eprot*pow(mKst,2)*mLam*pow(mp,2) + 4*epi*pow(kkk,2)*pow(mKst,2)*mLam*pow(mp,2) - 8*pow(epi,3)*eprot*mLam*mLamC*pow(mp,2) - 8*pow(epi,2)*pow(eprot,2)*mLam*mLamC*pow(mp,2) + 10*pow(epi,2)*pow(mKst,2)*mLam*mLamC*pow(mp,2) + 4*epi*eprot*pow(mKst,2)*mLam*mLamC*pow(mp,2) - 4*pow(kkk,2)*pow(mKst,2)*mLam*mLamC*pow(mp,2) + 4*pow(epi,3)*mLam*pow(mLamC,2)*pow(mp,2) + 16*pow(epi,2)*eprot*mLam*pow(mLamC,2)*pow(mp,2) + 4*epi*pow(eprot,2)*mLam*pow(mLamC,2)*pow(mp,2) - 8*epi*pow(mKst,2)*mLam*pow(mLamC,2)*pow(mp,2) - 2*eprot*pow(mKst,2)*mLam*pow(mLamC,2)*pow(mp,2) - 8*pow(epi,2)*mLam*pow(mLamC,3)*pow(mp,2) - 8*epi*eprot*mLam*pow(mLamC,3)*pow(mp,2) + 2*pow(mKst,2)*mLam*pow(mLamC,3)*pow(mp,2) + 4*epi*mLam*pow(mLamC,4)*pow(mp,2) + 8*pow(epi,4)*pow(eprot,2)*pow(ppp,2) - 4*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(ppp,2) - 4*pow(epi,3)*eprot*pow(mKst,2)*pow(ppp,2) + 8*pow(epi,2)*pow(kkk,2)*pow(mKst,2)*pow(ppp,2) + 12*pow(epi,3)*pow(eprot,2)*mLam*pow(ppp,2) - 6*epi*pow(eprot,2)*pow(kkk,2)*mLam*pow(ppp,2) - 6*pow(epi,2)*eprot*pow(mKst,2)*mLam*pow(ppp,2) + 4*epi*pow(kkk,2)*pow(mKst,2)*mLam*pow(ppp,2) - 8*pow(epi,4)*eprot*mLamC*pow(ppp,2) - 24*pow(epi,3)*pow(eprot,2)*mLamC*pow(ppp,2) + 12*pow(epi,2)*eprot*pow(kkk,2)*mLamC*pow(ppp,2) + 8*epi*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2) + 12*pow(epi,2)*eprot*pow(mKst,2)*mLamC*pow(ppp,2) - 14*epi*pow(kkk,2)*pow(mKst,2)*mLamC*pow(ppp,2) - 12*pow(epi,3)*eprot*mLam*mLamC*pow(ppp,2) - 24*pow(epi,2)*pow(eprot,2)*mLam*mLamC*pow(ppp,2) + 2*epi*eprot*pow(kkk,2)*mLam*mLamC*pow(ppp,2) + 6*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*pow(ppp,2) + 12*epi*eprot*pow(mKst,2)*mLam*mLamC*pow(ppp,2) - 5*pow(kkk,2)*pow(mKst,2)*mLam*mLamC*pow(ppp,2) + 24*pow(epi,3)*eprot*pow(mLamC,2)*pow(ppp,2) + 24*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*pow(ppp,2) - 4*pow(epi,2)*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 20*epi*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 4*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 12*epi*eprot*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) + 6*pow(kkk,2)*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) + 24*pow(epi,2)*eprot*mLam*pow(mLamC,2)*pow(ppp,2) + 12*epi*pow(eprot,2)*mLam*pow(mLamC,2)*pow(ppp,2) + 2*epi*pow(kkk,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 4*eprot*pow(kkk,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 6*eprot*pow(mKst,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 24*pow(epi,2)*eprot*pow(mLamC,3)*pow(ppp,2) - 8*epi*pow(eprot,2)*pow(mLamC,3)*pow(ppp,2) + 4*epi*pow(kkk,2)*pow(mLamC,3)*pow(ppp,2) + 8*eprot*pow(kkk,2)*pow(mLamC,3)*pow(ppp,2) + 4*eprot*pow(mKst,2)*pow(mLamC,3)*pow(ppp,2) - 12*epi*eprot*mLam*pow(mLamC,3)*pow(ppp,2) + 8*epi*eprot*pow(mLamC,4)*pow(ppp,2) - 12*pow(epi,2)*eprot*pow(kkk,2)*mp*pow(ppp,2) + 2*epi*pow(kkk,2)*pow(mKst,2)*mp*pow(ppp,2) - 4*pow(epi,3)*eprot*mLam*mp*pow(ppp,2) - 2*epi*eprot*pow(kkk,2)*mLam*mp*pow(ppp,2) + 2*pow(epi,2)*pow(mKst,2)*mLam*mp*pow(ppp,2) - pow(kkk,2)*pow(mKst,2)*mLam*mp*pow(ppp,2) + 8*pow(epi,2)*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 20*epi*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 2*pow(kkk,2)*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 4*pow(epi,3)*mLam*mLamC*mp*pow(ppp,2) + 8*pow(epi,2)*eprot*mLam*mLamC*mp*pow(ppp,2) + 2*epi*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2) + 4*eprot*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2) - 4*epi*pow(mKst,2)*mLam*mLamC*mp*pow(ppp,2) - 12*epi*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) - 8*eprot*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) - 8*pow(epi,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 4*epi*eprot*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 4*pow(kkk,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 2*pow(mKst,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 4*pow(kkk,2)*pow(mLamC,3)*mp*pow(ppp,2) + 4*epi*mLam*pow(mLamC,3)*mp*pow(ppp,2) + 2*epi*pow(kkk,2)*mLam*pow(mp,2)*pow(ppp,2) - 2*pow(kkk,2)*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 4*pow(epi,2)*pow(kkk,2)*pow(ppp,4) + 6*epi*pow(kkk,2)*mLam*pow(ppp,4) - 8*epi*pow(kkk,2)*mLamC*pow(ppp,4) - 6*pow(kkk,2)*mLam*mLamC*pow(ppp,4) + 4*pow(kkk,2)*pow(mLamC,2)*pow(ppp,4) + 8*pow(epi,2)*pow(eprot,4)*s12 - 8*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*s12 - 4*epi*pow(eprot,3)*pow(mKst,2)*s12 - 12*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*s12 + 12*epi*pow(eprot,4)*mLam*s12 - 12*epi*pow(eprot,2)*pow(mKst,2)*mLam*s12 - 6*pow(eprot,3)*pow(mKst,2)*mLam*s12 - 16*pow(epi,2)*pow(eprot,3)*mLamC*s12 - 8*epi*pow(eprot,4)*mLamC*s12 + 12*epi*pow(eprot,2)*pow(mKst,2)*mLamC*s12 + 4*pow(eprot,3)*pow(mKst,2)*mLamC*s12 - 24*epi*pow(eprot,3)*mLam*mLamC*s12 + 6*pow(eprot,2)*pow(mKst,2)*mLam*mLamC*s12 + 8*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*s12 + 16*epi*pow(eprot,3)*pow(mLamC,2)*s12 - 4*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2)*s12 + 12*epi*pow(eprot,2)*mLam*pow(mLamC,2)*s12 - 8*epi*pow(eprot,2)*pow(mLamC,3)*s12 + 8*pow(epi,2)*pow(eprot,3)*mp*s12 - 8*pow(epi,2)*eprot*pow(mKst,2)*mp*s12 - 4*epi*pow(eprot,2)*pow(mKst,2)*mp*s12 + 8*eprot*pow(kkk,2)*pow(mKst,2)*mp*s12 + 8*epi*pow(eprot,3)*mLam*mp*s12 - 8*epi*eprot*pow(mKst,2)*mLam*mp*s12 - 4*pow(eprot,2)*pow(mKst,2)*mLam*mp*s12 - 16*pow(epi,2)*pow(eprot,2)*mLamC*mp*s12 - 8*epi*pow(eprot,3)*mLamC*mp*s12 + 12*epi*eprot*pow(mKst,2)*mLamC*mp*s12 + 4*pow(eprot,2)*pow(mKst,2)*mLamC*mp*s12 - 16*epi*pow(eprot,2)*mLam*mLamC*mp*s12 + 4*eprot*pow(mKst,2)*mLam*mLamC*mp*s12 + 8*pow(epi,2)*eprot*pow(mLamC,2)*mp*s12 + 16*epi*pow(eprot,2)*pow(mLamC,2)*mp*s12 - 4*eprot*pow(mKst,2)*pow(mLamC,2)*mp*s12 + 8*epi*eprot*mLam*pow(mLamC,2)*mp*s12 - 8*epi*eprot*pow(mLamC,3)*mp*s12 + 4*pow(kkk,2)*pow(mKst,2)*pow(mp,2)*s12 - 4*epi*pow(eprot,2)*mLam*pow(mp,2)*s12 + 4*epi*pow(mKst,2)*mLam*pow(mp,2)*s12 + 2*eprot*pow(mKst,2)*mLam*pow(mp,2)*s12 + 8*epi*eprot*mLam*mLamC*pow(mp,2)*s12 - 2*pow(mKst,2)*mLam*mLamC*pow(mp,2)*s12 - 4*epi*mLam*pow(mLamC,2)*pow(mp,2)*s12 - 8*pow(epi,2)*pow(eprot,2)*pow(ppp,2)*s12 - 2*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s12 + 4*epi*eprot*pow(mKst,2)*pow(ppp,2)*s12 + 2*pow(kkk,2)*pow(mKst,2)*pow(ppp,2)*s12 - 12*epi*pow(eprot,2)*mLam*pow(ppp,2)*s12 + 6*eprot*pow(mKst,2)*mLam*pow(ppp,2)*s12 + 8*pow(epi,2)*eprot*mLamC*pow(ppp,2)*s12 + 8*epi*pow(eprot,2)*mLamC*pow(ppp,2)*s12 - 4*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s12 - 4*eprot*pow(mKst,2)*mLamC*pow(ppp,2)*s12 + 12*epi*eprot*mLam*mLamC*pow(ppp,2)*s12 - 8*epi*eprot*pow(mLamC,2)*pow(ppp,2)*s12 + 4*eprot*pow(kkk,2)*mp*pow(ppp,2)*s12 + 4*epi*eprot*mLam*mp*pow(ppp,2)*s12 - 2*pow(mKst,2)*mLam*mp*pow(ppp,2)*s12 - 4*epi*mLam*mLamC*mp*pow(ppp,2)*s12 + 2*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s12 + 2*pow(kkk,2)*pow(ppp,4)*s12 - 4*pow(epi,3)*pow(eprot,3)*s23 - 6*pow(epi,2)*pow(eprot,3)*mLam*s23 + 4*pow(epi,3)*pow(eprot,2)*mLamC*s23 + 12*pow(epi,2)*pow(eprot,3)*mLamC*s23 + 6*pow(epi,2)*pow(eprot,2)*mLam*mLamC*s23 + 12*epi*pow(eprot,3)*mLam*mLamC*s23 - 12*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*s23 - 12*epi*pow(eprot,3)*pow(mLamC,2)*s23 - 12*epi*pow(eprot,2)*mLam*pow(mLamC,2)*s23 - 6*pow(eprot,3)*mLam*pow(mLamC,2)*s23 + 12*epi*pow(eprot,2)*pow(mLamC,3)*s23 + 4*pow(eprot,3)*pow(mLamC,3)*s23 + 6*pow(eprot,2)*mLam*pow(mLamC,3)*s23 - 4*pow(eprot,2)*pow(mLamC,4)*s23 - 4*pow(epi,3)*pow(eprot,2)*mp*s23 - 4*pow(epi,2)*pow(eprot,2)*mLam*mp*s23 + 4*pow(epi,3)*eprot*mLamC*mp*s23 + 12*pow(epi,2)*pow(eprot,2)*mLamC*mp*s23 + 4*pow(epi,2)*eprot*mLam*mLamC*mp*s23 + 8*epi*pow(eprot,2)*mLam*mLamC*mp*s23 - 12*pow(epi,2)*eprot*pow(mLamC,2)*mp*s23 - 12*epi*pow(eprot,2)*pow(mLamC,2)*mp*s23 - 8*epi*eprot*mLam*pow(mLamC,2)*mp*s23 - 4*pow(eprot,2)*mLam*pow(mLamC,2)*mp*s23 + 12*epi*eprot*pow(mLamC,3)*mp*s23 + 4*pow(eprot,2)*pow(mLamC,3)*mp*s23 + 4*eprot*mLam*pow(mLamC,3)*mp*s23 - 4*eprot*pow(mLamC,4)*mp*s23 + 2*pow(epi,2)*eprot*mLam*pow(mp,2)*s23 - 2*pow(epi,2)*mLam*mLamC*pow(mp,2)*s23 - 4*epi*eprot*mLam*mLamC*pow(mp,2)*s23 + 4*epi*mLam*pow(mLamC,2)*pow(mp,2)*s23 + 2*eprot*mLam*pow(mLamC,2)*pow(mp,2)*s23 - 2*mLam*pow(mLamC,3)*pow(mp,2)*s23 + 4*pow(epi,3)*eprot*pow(ppp,2)*s23 + 6*pow(epi,2)*eprot*mLam*pow(ppp,2)*s23 - 12*pow(epi,2)*eprot*mLamC*pow(ppp,2)*s23 + 2*epi*pow(kkk,2)*mLamC*pow(ppp,2)*s23 - 12*epi*eprot*mLam*mLamC*pow(ppp,2)*s23 - pow(kkk,2)*mLam*mLamC*pow(ppp,2)*s23 + 12*epi*eprot*pow(mLamC,2)*pow(ppp,2)*s23 - 2*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2)*s23 + 6*eprot*mLam*pow(mLamC,2)*pow(ppp,2)*s23 - 4*eprot*pow(mLamC,3)*pow(ppp,2)*s23 - 2*epi*pow(kkk,2)*mp*pow(ppp,2)*s23 - 2*pow(epi,2)*mLam*mp*pow(ppp,2)*s23 + pow(kkk,2)*mLam*mp*pow(ppp,2)*s23 + 2*pow(kkk,2)*mLamC*mp*pow(ppp,2)*s23 + 4*epi*mLam*mLamC*mp*pow(ppp,2)*s23 - 2*mLam*pow(mLamC,2)*mp*pow(ppp,2)*s23 + 4*epi*pow(eprot,3)*s12*s23 + 6*pow(eprot,3)*mLam*s12*s23 - 4*epi*pow(eprot,2)*mLamC*s12*s23 - 4*pow(eprot,3)*mLamC*s12*s23 - 6*pow(eprot,2)*mLam*mLamC*s12*s23 + 4*pow(eprot,2)*pow(mLamC,2)*s12*s23 + 4*epi*pow(eprot,2)*mp*s12*s23 + 4*pow(eprot,2)*mLam*mp*s12*s23 - 4*epi*eprot*mLamC*mp*s12*s23 - 4*pow(eprot,2)*mLamC*mp*s12*s23 - 4*eprot*mLam*mLamC*mp*s12*s23 + 4*eprot*pow(mLamC,2)*mp*s12*s23 - 2*eprot*mLam*pow(mp,2)*s12*s23 + 2*mLam*mLamC*pow(mp,2)*s12*s23 - 4*epi*eprot*pow(ppp,2)*s12*s23 - 6*eprot*mLam*pow(ppp,2)*s12*s23 + 4*eprot*mLamC*pow(ppp,2)*s12*s23 + 2*mLam*mp*pow(ppp,2)*s12*s23 + kkk*ppp*(-4*pow(kkk,2)*pow(mKst,2)*mLam*mp - 8*pow(kkk,2)*pow(mKst,2)*mLamC*mp + 4*pow(mKst,2)*pow(mLamC,3)*mp - 2*pow(mKst,2)*mLam*mLamC*pow(mp,2) + 4*mLam*pow(mLamC,3)*pow(mp,2) + 3*pow(kkk,2)*mLam*mLamC*pow(ppp,2) - 6*pow(mKst,2)*mLam*mLamC*pow(ppp,2) + 6*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) + 4*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) - 3*pow(kkk,2)*mLam*mp*pow(ppp,2) - 6*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 4*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 8*pow(epi,3)*(2*pow(eprot,3) - pow(mKst,2)*mp + pow(eprot,2)*(-4*mLamC + 3*mp) + mLamC*(mLamC*mp + pow(ppp,2)) - eprot*(3*pow(mKst,2) - 2*pow(mLamC,2) + 4*mLamC*mp + 2*pow(ppp,2))) + 4*pow(eprot,3)*(3*mLam - 2*mLamC)*(pow(mLamC,2) - s12) - 4*pow(mKst,2)*mLam*mp*s12 + 2*pow(mKst,2)*pow(mp,2)*s12 - 4*mLam*mLamC*pow(mp,2)*s12 + 2*pow(mKst,2)*pow(ppp,2)*s12 - 4*mLam*mp*pow(ppp,2)*s12 + 4*mLam*pow(mLamC,2)*mp*s23 - 4*pow(mLamC,3)*mp*s23 + 2*mLam*mLamC*pow(mp,2)*s23 + 6*mLam*mLamC*pow(ppp,2)*s23 - 4*pow(mLamC,2)*pow(ppp,2)*s23 - 2*pow(mp,2)*s12*s23 - 2*pow(ppp,2)*s12*s23 + 4*eprot*(pow(kkk,2)*pow(mKst,2)*(mLam + 2*mLamC) - 2*mLam*pow(mLamC,3)*mp + 2*pow(mLamC,4)*mp - mLam*pow(mLamC,2)*pow(mp,2) - 3*mLam*pow(mLamC,2)*pow(ppp,2) + 2*pow(mLamC,3)*pow(ppp,2) + 2*mLam*mLamC*mp*s12 - 2*pow(mLamC,2)*mp*s12 + mLam*pow(mp,2)*s12 + 3*mLam*pow(ppp,2)*s12 - 2*mLamC*pow(ppp,2)*s12 + pow(mKst,2)*(-4*mLam*pow(mLamC,2) + 4*pow(mLamC,3) + mLam*mLamC*mp - 2*pow(mLamC,2)*mp + 3*mLam*s12 - 3*mLamC*s12 + mp*s12) + mLam*pow(mLamC,2)*s23 - 2*pow(mLamC,3)*s23 - mLam*mLamC*mp*s23 + 2*pow(mLamC,2)*mp*s23 + mLamC*s12*s23 - mp*s12*s23) + 2*pow(eprot,2)*(4*pow(mLamC,4) - 4*pow(mLamC,3)*mp + pow(mKst,2)*(3*mLam*mLamC - 2*pow(mLamC,2) - s12) - 4*pow(mLamC,2)*s12 + 4*mLamC*mp*s12 + 2*pow(mLamC,2)*s23 + s12*s23 + mLam*(-6*pow(mLamC,3) + 4*pow(mLamC,2)*mp + 6*mLamC*s12 - 4*mp*s12 - 3*mLamC*s23)) - 2*epi*(-4*pow(kkk,2)*pow(mKst,2)*mp - 2*pow(mKst,2)*mLam*mLamC*mp + 8*pow(mKst,2)*pow(mLamC,2)*mp + 4*mLam*pow(mLamC,3)*mp - 4*pow(mLamC,4)*mp - pow(mKst,2)*mLam*pow(mp,2) + 6*mLam*pow(mLamC,2)*pow(mp,2) - 3*pow(mKst,2)*mLam*pow(ppp,2) + 3*pow(kkk,2)*mLamC*pow(ppp,2) + 4*pow(mKst,2)*mLamC*pow(ppp,2) + 6*mLam*pow(mLamC,2)*pow(ppp,2) - 4*pow(mLamC,3)*pow(ppp,2) - 3*pow(kkk,2)*mp*pow(ppp,2) + 4*mLam*mLamC*mp*pow(ppp,2) - 2*mLamC*pow(mp,2)*s12 - 2*mLamC*pow(ppp,2)*s12 + 2*pow(eprot,3)*(9*mLam*mLamC - 8*pow(mLamC,2) + s12) + 2*mLam*mLamC*mp*s23 - 4*pow(mLamC,2)*mp*s23 + mLam*pow(mp,2)*s23 + 3*mLam*pow(ppp,2)*s23 - 4*mLamC*pow(ppp,2)*s23 + pow(eprot,2)*(pow(mKst,2)*(3*mLam - 4*mLamC) + 24*pow(mLamC,3) - 20*pow(mLamC,2)*mp - 6*mLamC*s12 + 8*mp*s12 + mLam*(-22*pow(mLamC,2) + 12*mLamC*mp - 3*s23) + 4*mLamC*s23) + 2*eprot*(2*pow(kkk,2)*pow(mKst,2) + 2*mLam*pow(mLamC,3) - 4*pow(mLamC,4) - 8*mLam*pow(mLamC,2)*mp + 12*pow(mLamC,3)*mp - 3*mLam*mLamC*pow(mp,2) - 9*mLam*mLamC*pow(ppp,2) + 8*pow(mLamC,2)*pow(ppp,2) + pow(mKst,2)*(-9*mLam*mLamC + 14*pow(mLamC,2) + mLam*mp - 4*mLamC*mp - 4*s12) + 2*pow(mLamC,2)*s12 - 4*mLamC*mp*s12 + pow(mp,2)*s12 - pow(ppp,2)*s12 + mLam*mLamC*s23 - 4*pow(mLamC,2)*s23 - mLam*mp*s23 + 4*mLamC*mp*s23)) + 4*pow(epi,2)*(2*pow(eprot,3)*(3*mLam - 5*mLamC) + 2*mLam*pow(mLamC,2)*mp - 4*pow(mLamC,3)*mp + 2*mLam*mLamC*pow(mp,2) + 3*mLam*mLamC*pow(ppp,2) - 4*pow(mLamC,2)*pow(ppp,2) + mLam*mp*pow(ppp,2) + pow(mKst,2)*(-(mLam*mp) + 5*mLamC*mp + pow(ppp,2)) - mLamC*mp*s23 - pow(ppp,2)*s23 + pow(eprot,2)*(-pow(mKst,2) - 8*mLam*mLamC + 18*pow(mLamC,2) + 4*mLam*mp - 14*mLamC*mp + s23) - eprot*(pow(mKst,2)*(5*mLam + 2*(-8*mLamC + mp)) + 2*(4*pow(mLamC,3) - 9*pow(mLamC,2)*mp - 5*mLamC*pow(ppp,2) + mLam*(-pow(mLamC,2) + 3*mLamC*mp + pow(mp,2) + 3*pow(ppp,2)) + mLamC*s23 - mp*s23))))*cos(psi) + pow(kkk,2)*pow(ppp,2)*(-5*pow(mKst,2)*mLam*mLamC + 6*pow(mKst,2)*pow(mLamC,2) - pow(mKst,2)*mLam*mp - 2*pow(mKst,2)*mLamC*mp - 4*mLam*pow(mLamC,2)*mp + 4*pow(mLamC,3)*mp - 2*mLam*mLamC*pow(mp,2) - 6*mLam*mLamC*pow(ppp,2) + 4*pow(mLamC,2)*pow(ppp,2) - 4*pow(epi,2)*(pow(eprot,2) - 2*pow(mKst,2) - 3*eprot*mLamC + pow(mLamC,2) + 3*eprot*mp - 2*mLamC*mp - pow(ppp,2)) + 2*pow(mKst,2)*s12 + 2*pow(mp,2)*s12 + 2*pow(ppp,2)*s12 - 4*eprot*(mLamC - mp)*(mLam*mLamC - 2*pow(mLamC,2) + s12) + pow(eprot,2)*(6*mLam*mLamC - 2*(2*pow(mLamC,2) + s12)) - mLam*mLamC*s23 - 2*pow(mLamC,2)*s23 + mLam*mp*s23 + 2*mLamC*mp*s23 + 2*epi*(mLam*pow(mLamC,2) + 2*pow(mLamC,3) + pow(eprot,2)*(-3*mLam + 4*mLamC) + eprot*(mLam - 10*mLamC)*(mLamC - mp) + mLam*mLamC*mp - 6*pow(mLamC,2)*mp + mLam*pow(mp,2) + pow(mKst,2)*(2*mLam - 7*mLamC + mp) + 3*mLam*pow(ppp,2) - 4*mLamC*pow(ppp,2) + mLamC*s23 - mp*s23))*cos(2*psi) - 2*epi*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) + pow(kkk,3)*mLam*mLamC*pow(ppp,3)*cos(3*psi) + 2*pow(kkk,3)*pow(mLamC,2)*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) - pow(kkk,3)*mLam*mp*pow(ppp,3)*cos(3*psi) - 2*pow(kkk,3)*mLamC*mp*pow(ppp,3)*cos(3*psi)))/(3.*pow(mKst,2)*s12));
	    	break;
	    case FormulaParam::ReA2C: //f14
	    	return ReBWTwoResonances(s23,mKst,GKst, s12, mLam, GLam)*((-2*pow(mLamC,3)*(2*epi*(pow(eprot,2) - pow(mKst,2) - 2*eprot*mLamC + pow(mLamC,2)) - (eprot - mLamC)*(pow(mKst,2) - s23) - 2*kkk*(eprot - mLamC)*ppp*cos(psi))*(-4*pow(epi,3)*pow(eprot,2) - 6*pow(epi,2)*pow(eprot,2)*mLam + 12*pow(epi,2)*pow(eprot,2)*mLamC + 12*epi*pow(eprot,2)*mLam*mLamC - 12*epi*pow(eprot,2)*pow(mLamC,2) - 6*pow(eprot,2)*mLam*pow(mLamC,2) + 4*pow(eprot,2)*pow(mLamC,3) - 4*pow(epi,3)*eprot*mp - 4*pow(epi,2)*eprot*mLam*mp + 12*pow(epi,2)*eprot*mLamC*mp + 8*epi*eprot*mLam*mLamC*mp - 12*epi*eprot*pow(mLamC,2)*mp - 4*eprot*mLam*pow(mLamC,2)*mp + 4*eprot*pow(mLamC,3)*mp + 2*pow(epi,2)*mLam*pow(mp,2) - 4*epi*mLam*mLamC*pow(mp,2) + 2*mLam*pow(mLamC,2)*pow(mp,2) - 2*epi*pow(kkk,2)*pow(ppp,2) + pow(kkk,2)*mLam*pow(ppp,2) + 2*pow(kkk,2)*mLamC*pow(ppp,2) + 4*epi*pow(eprot,2)*s12 + 6*pow(eprot,2)*mLam*s12 - 4*pow(eprot,2)*mLamC*s12 + 4*epi*eprot*mp*s12 + 4*eprot*mLam*mp*s12 - 4*eprot*mLamC*mp*s12 - 2*mLam*pow(mp,2)*s12 + 4*kkk*ppp*(epi*eprot*(mLam - 4*mLamC) + epi*(mLam - 2*mLamC)*mp + mLamC*(-mLam + mLamC)*mp + pow(epi,2)*(2*eprot + mp) - eprot*(mLam*mLamC - 2*pow(mLamC,2) + s12))*cos(psi) - pow(kkk,2)*(2*epi - mLam - 2*mLamC)*pow(ppp,2)*cos(2*psi)))/(3.*pow(mKst,2)*s12));
	    	break;
	    case FormulaParam::ReB1D: //f15
	    	return ReBWTwoResonances(s23,mKst,GKst, s12, mLam, GLam)*((2*pow(mLamC,2)*(-8*pow(epi,4)*pow(eprot,4) + 8*pow(epi,4)*pow(eprot,2)*pow(mKst,2) + 4*pow(epi,3)*pow(eprot,3)*pow(mKst,2) + 8*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(mKst,2) + 12*pow(epi,3)*pow(eprot,4)*mLam - 12*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mLam - 6*pow(epi,2)*pow(eprot,3)*pow(mKst,2)*mLam + 4*epi*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mLam + 16*pow(epi,4)*pow(eprot,3)*mLamC + 24*pow(epi,3)*pow(eprot,4)*mLamC - 28*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mLamC - 12*pow(epi,2)*pow(eprot,3)*pow(mKst,2)*mLamC - 16*epi*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mLamC - 24*pow(epi,3)*pow(eprot,3)*mLam*mLamC - 24*pow(epi,2)*pow(eprot,4)*mLam*mLamC + 30*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLam*mLamC + 12*epi*pow(eprot,3)*pow(mKst,2)*mLam*mLamC - 4*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mLam*mLamC - 8*pow(epi,4)*pow(eprot,2)*pow(mLamC,2) - 48*pow(epi,3)*pow(eprot,3)*pow(mLamC,2) - 24*pow(epi,2)*pow(eprot,4)*pow(mLamC,2) + 36*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2) + 12*epi*pow(eprot,3)*pow(mKst,2)*pow(mLamC,2) + 8*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*pow(mLamC,2) + 12*pow(epi,3)*pow(eprot,2)*mLam*pow(mLamC,2) + 48*pow(epi,2)*pow(eprot,3)*mLam*pow(mLamC,2) + 12*epi*pow(eprot,4)*mLam*pow(mLamC,2) - 24*epi*pow(eprot,2)*pow(mKst,2)*mLam*pow(mLamC,2) - 6*pow(eprot,3)*pow(mKst,2)*mLam*pow(mLamC,2) + 24*pow(epi,3)*pow(eprot,2)*pow(mLamC,3) + 48*pow(epi,2)*pow(eprot,3)*pow(mLamC,3) + 8*epi*pow(eprot,4)*pow(mLamC,3) - 20*epi*pow(eprot,2)*pow(mKst,2)*pow(mLamC,3) - 4*pow(eprot,3)*pow(mKst,2)*pow(mLamC,3) - 24*pow(epi,2)*pow(eprot,2)*mLam*pow(mLamC,3) - 24*epi*pow(eprot,3)*mLam*pow(mLamC,3) + 6*pow(eprot,2)*pow(mKst,2)*mLam*pow(mLamC,3) - 24*pow(epi,2)*pow(eprot,2)*pow(mLamC,4) - 16*epi*pow(eprot,3)*pow(mLamC,4) + 4*pow(eprot,2)*pow(mKst,2)*pow(mLamC,4) + 12*epi*pow(eprot,2)*mLam*pow(mLamC,4) + 8*epi*pow(eprot,2)*pow(mLamC,5) + 8*pow(epi,4)*pow(eprot,3)*mp - 8*pow(epi,4)*eprot*pow(mKst,2)*mp - 4*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mp + 8*pow(epi,2)*eprot*pow(kkk,2)*pow(mKst,2)*mp - 8*pow(epi,3)*pow(eprot,3)*mLam*mp + 8*pow(epi,3)*eprot*pow(mKst,2)*mLam*mp + 4*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLam*mp - 16*pow(epi,4)*pow(eprot,2)*mLamC*mp - 24*pow(epi,3)*pow(eprot,3)*mLamC*mp + 28*pow(epi,3)*eprot*pow(mKst,2)*mLamC*mp + 12*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLamC*mp - 16*epi*eprot*pow(kkk,2)*pow(mKst,2)*mLamC*mp + 16*pow(epi,3)*pow(eprot,2)*mLam*mLamC*mp + 16*pow(epi,2)*pow(eprot,3)*mLam*mLamC*mp - 20*pow(epi,2)*eprot*pow(mKst,2)*mLam*mLamC*mp - 8*epi*pow(eprot,2)*pow(mKst,2)*mLam*mLamC*mp + 8*pow(epi,4)*eprot*pow(mLamC,2)*mp + 48*pow(epi,3)*pow(eprot,2)*pow(mLamC,2)*mp + 24*pow(epi,2)*pow(eprot,3)*pow(mLamC,2)*mp - 36*pow(epi,2)*eprot*pow(mKst,2)*pow(mLamC,2)*mp - 12*epi*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2)*mp + 8*eprot*pow(kkk,2)*pow(mKst,2)*pow(mLamC,2)*mp - 8*pow(epi,3)*eprot*mLam*pow(mLamC,2)*mp - 32*pow(epi,2)*pow(eprot,2)*mLam*pow(mLamC,2)*mp - 8*epi*pow(eprot,3)*mLam*pow(mLamC,2)*mp + 16*epi*eprot*pow(mKst,2)*mLam*pow(mLamC,2)*mp + 4*pow(eprot,2)*pow(mKst,2)*mLam*pow(mLamC,2)*mp - 24*pow(epi,3)*eprot*pow(mLamC,3)*mp - 48*pow(epi,2)*pow(eprot,2)*pow(mLamC,3)*mp - 8*epi*pow(eprot,3)*pow(mLamC,3)*mp + 20*epi*eprot*pow(mKst,2)*pow(mLamC,3)*mp + 4*pow(eprot,2)*pow(mKst,2)*pow(mLamC,3)*mp + 16*pow(epi,2)*eprot*mLam*pow(mLamC,3)*mp + 16*epi*pow(eprot,2)*mLam*pow(mLamC,3)*mp - 4*eprot*pow(mKst,2)*mLam*pow(mLamC,3)*mp + 24*pow(epi,2)*eprot*pow(mLamC,4)*mp + 16*epi*pow(eprot,2)*pow(mLamC,4)*mp - 4*eprot*pow(mKst,2)*pow(mLamC,4)*mp - 8*epi*eprot*mLam*pow(mLamC,4)*mp - 8*epi*eprot*pow(mLamC,5)*mp - 4*pow(epi,3)*pow(eprot,2)*mLam*pow(mp,2) + 4*pow(epi,3)*pow(mKst,2)*mLam*pow(mp,2) + 2*pow(epi,2)*eprot*pow(mKst,2)*mLam*pow(mp,2) - 4*epi*pow(kkk,2)*pow(mKst,2)*mLam*pow(mp,2) + 8*pow(epi,3)*eprot*mLam*mLamC*pow(mp,2) + 8*pow(epi,2)*pow(eprot,2)*mLam*mLamC*pow(mp,2) - 10*pow(epi,2)*pow(mKst,2)*mLam*mLamC*pow(mp,2) - 4*epi*eprot*pow(mKst,2)*mLam*mLamC*pow(mp,2) + 4*pow(kkk,2)*pow(mKst,2)*mLam*mLamC*pow(mp,2) - 4*pow(epi,3)*mLam*pow(mLamC,2)*pow(mp,2) - 16*pow(epi,2)*eprot*mLam*pow(mLamC,2)*pow(mp,2) - 4*epi*pow(eprot,2)*mLam*pow(mLamC,2)*pow(mp,2) + 8*epi*pow(mKst,2)*mLam*pow(mLamC,2)*pow(mp,2) + 2*eprot*pow(mKst,2)*mLam*pow(mLamC,2)*pow(mp,2) + 8*pow(epi,2)*mLam*pow(mLamC,3)*pow(mp,2) + 8*epi*eprot*mLam*pow(mLamC,3)*pow(mp,2) - 2*pow(mKst,2)*mLam*pow(mLamC,3)*pow(mp,2) - 4*epi*mLam*pow(mLamC,4)*pow(mp,2) + 8*pow(epi,4)*pow(eprot,2)*pow(ppp,2) - 4*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(ppp,2) - 4*pow(epi,3)*eprot*pow(mKst,2)*pow(ppp,2) + 8*pow(epi,2)*pow(kkk,2)*pow(mKst,2)*pow(ppp,2) - 12*pow(epi,3)*pow(eprot,2)*mLam*pow(ppp,2) + 6*epi*pow(eprot,2)*pow(kkk,2)*mLam*pow(ppp,2) + 6*pow(epi,2)*eprot*pow(mKst,2)*mLam*pow(ppp,2) - 4*epi*pow(kkk,2)*pow(mKst,2)*mLam*pow(ppp,2) - 8*pow(epi,4)*eprot*mLamC*pow(ppp,2) - 24*pow(epi,3)*pow(eprot,2)*mLamC*pow(ppp,2) + 12*pow(epi,2)*eprot*pow(kkk,2)*mLamC*pow(ppp,2) + 8*epi*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2) + 12*pow(epi,2)*eprot*pow(mKst,2)*mLamC*pow(ppp,2) - 14*epi*pow(kkk,2)*pow(mKst,2)*mLamC*pow(ppp,2) + 12*pow(epi,3)*eprot*mLam*mLamC*pow(ppp,2) + 24*pow(epi,2)*pow(eprot,2)*mLam*mLamC*pow(ppp,2) - 2*epi*eprot*pow(kkk,2)*mLam*mLamC*pow(ppp,2) - 6*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*pow(ppp,2) - 12*epi*eprot*pow(mKst,2)*mLam*mLamC*pow(ppp,2) + 5*pow(kkk,2)*pow(mKst,2)*mLam*mLamC*pow(ppp,2) + 24*pow(epi,3)*eprot*pow(mLamC,2)*pow(ppp,2) + 24*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*pow(ppp,2) - 4*pow(epi,2)*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 20*epi*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 4*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 12*epi*eprot*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) + 6*pow(kkk,2)*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) - 24*pow(epi,2)*eprot*mLam*pow(mLamC,2)*pow(ppp,2) - 12*epi*pow(eprot,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 2*epi*pow(kkk,2)*mLam*pow(mLamC,2)*pow(ppp,2) + 4*eprot*pow(kkk,2)*mLam*pow(mLamC,2)*pow(ppp,2) + 6*eprot*pow(mKst,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 24*pow(epi,2)*eprot*pow(mLamC,3)*pow(ppp,2) - 8*epi*pow(eprot,2)*pow(mLamC,3)*pow(ppp,2) + 4*epi*pow(kkk,2)*pow(mLamC,3)*pow(ppp,2) + 8*eprot*pow(kkk,2)*pow(mLamC,3)*pow(ppp,2) + 4*eprot*pow(mKst,2)*pow(mLamC,3)*pow(ppp,2) + 12*epi*eprot*mLam*pow(mLamC,3)*pow(ppp,2) + 8*epi*eprot*pow(mLamC,4)*pow(ppp,2) + 12*pow(epi,2)*eprot*pow(kkk,2)*mp*pow(ppp,2) - 2*epi*pow(kkk,2)*pow(mKst,2)*mp*pow(ppp,2) - 4*pow(epi,3)*eprot*mLam*mp*pow(ppp,2) - 2*epi*eprot*pow(kkk,2)*mLam*mp*pow(ppp,2) + 2*pow(epi,2)*pow(mKst,2)*mLam*mp*pow(ppp,2) - pow(kkk,2)*pow(mKst,2)*mLam*mp*pow(ppp,2) - 8*pow(epi,2)*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 20*epi*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 2*pow(kkk,2)*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 4*pow(epi,3)*mLam*mLamC*mp*pow(ppp,2) + 8*pow(epi,2)*eprot*mLam*mLamC*mp*pow(ppp,2) + 2*epi*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2) + 4*eprot*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2) - 4*epi*pow(mKst,2)*mLam*mLamC*mp*pow(ppp,2) + 12*epi*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) + 8*eprot*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) - 8*pow(epi,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 4*epi*eprot*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 4*pow(kkk,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 2*pow(mKst,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 4*pow(kkk,2)*pow(mLamC,3)*mp*pow(ppp,2) + 4*epi*mLam*pow(mLamC,3)*mp*pow(ppp,2) - 2*epi*pow(kkk,2)*mLam*pow(mp,2)*pow(ppp,2) + 2*pow(kkk,2)*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 4*pow(epi,2)*pow(kkk,2)*pow(ppp,4) - 6*epi*pow(kkk,2)*mLam*pow(ppp,4) - 8*epi*pow(kkk,2)*mLamC*pow(ppp,4) + 6*pow(kkk,2)*mLam*mLamC*pow(ppp,4) + 4*pow(kkk,2)*pow(mLamC,2)*pow(ppp,4) + 8*pow(epi,2)*pow(eprot,4)*s12 - 8*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*s12 - 4*epi*pow(eprot,3)*pow(mKst,2)*s12 - 12*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*s12 - 12*epi*pow(eprot,4)*mLam*s12 + 12*epi*pow(eprot,2)*pow(mKst,2)*mLam*s12 + 6*pow(eprot,3)*pow(mKst,2)*mLam*s12 - 16*pow(epi,2)*pow(eprot,3)*mLamC*s12 - 8*epi*pow(eprot,4)*mLamC*s12 + 12*epi*pow(eprot,2)*pow(mKst,2)*mLamC*s12 + 4*pow(eprot,3)*pow(mKst,2)*mLamC*s12 + 24*epi*pow(eprot,3)*mLam*mLamC*s12 - 6*pow(eprot,2)*pow(mKst,2)*mLam*mLamC*s12 + 8*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*s12 + 16*epi*pow(eprot,3)*pow(mLamC,2)*s12 - 4*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2)*s12 - 12*epi*pow(eprot,2)*mLam*pow(mLamC,2)*s12 - 8*epi*pow(eprot,2)*pow(mLamC,3)*s12 - 8*pow(epi,2)*pow(eprot,3)*mp*s12 + 8*pow(epi,2)*eprot*pow(mKst,2)*mp*s12 + 4*epi*pow(eprot,2)*pow(mKst,2)*mp*s12 - 8*eprot*pow(kkk,2)*pow(mKst,2)*mp*s12 + 8*epi*pow(eprot,3)*mLam*mp*s12 - 8*epi*eprot*pow(mKst,2)*mLam*mp*s12 - 4*pow(eprot,2)*pow(mKst,2)*mLam*mp*s12 + 16*pow(epi,2)*pow(eprot,2)*mLamC*mp*s12 + 8*epi*pow(eprot,3)*mLamC*mp*s12 - 12*epi*eprot*pow(mKst,2)*mLamC*mp*s12 - 4*pow(eprot,2)*pow(mKst,2)*mLamC*mp*s12 - 16*epi*pow(eprot,2)*mLam*mLamC*mp*s12 + 4*eprot*pow(mKst,2)*mLam*mLamC*mp*s12 - 8*pow(epi,2)*eprot*pow(mLamC,2)*mp*s12 - 16*epi*pow(eprot,2)*pow(mLamC,2)*mp*s12 + 4*eprot*pow(mKst,2)*pow(mLamC,2)*mp*s12 + 8*epi*eprot*mLam*pow(mLamC,2)*mp*s12 + 8*epi*eprot*pow(mLamC,3)*mp*s12 + 4*pow(kkk,2)*pow(mKst,2)*pow(mp,2)*s12 + 4*epi*pow(eprot,2)*mLam*pow(mp,2)*s12 - 4*epi*pow(mKst,2)*mLam*pow(mp,2)*s12 - 2*eprot*pow(mKst,2)*mLam*pow(mp,2)*s12 - 8*epi*eprot*mLam*mLamC*pow(mp,2)*s12 + 2*pow(mKst,2)*mLam*mLamC*pow(mp,2)*s12 + 4*epi*mLam*pow(mLamC,2)*pow(mp,2)*s12 - 8*pow(epi,2)*pow(eprot,2)*pow(ppp,2)*s12 - 2*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s12 + 4*epi*eprot*pow(mKst,2)*pow(ppp,2)*s12 + 2*pow(kkk,2)*pow(mKst,2)*pow(ppp,2)*s12 + 12*epi*pow(eprot,2)*mLam*pow(ppp,2)*s12 - 6*eprot*pow(mKst,2)*mLam*pow(ppp,2)*s12 + 8*pow(epi,2)*eprot*mLamC*pow(ppp,2)*s12 + 8*epi*pow(eprot,2)*mLamC*pow(ppp,2)*s12 - 4*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s12 - 4*eprot*pow(mKst,2)*mLamC*pow(ppp,2)*s12 - 12*epi*eprot*mLam*mLamC*pow(ppp,2)*s12 - 8*epi*eprot*pow(mLamC,2)*pow(ppp,2)*s12 - 4*eprot*pow(kkk,2)*mp*pow(ppp,2)*s12 + 4*epi*eprot*mLam*mp*pow(ppp,2)*s12 - 2*pow(mKst,2)*mLam*mp*pow(ppp,2)*s12 - 4*epi*mLam*mLamC*mp*pow(ppp,2)*s12 + 2*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s12 + 2*pow(kkk,2)*pow(ppp,4)*s12 - 4*pow(epi,3)*pow(eprot,3)*s23 + 6*pow(epi,2)*pow(eprot,3)*mLam*s23 + 4*pow(epi,3)*pow(eprot,2)*mLamC*s23 + 12*pow(epi,2)*pow(eprot,3)*mLamC*s23 - 6*pow(epi,2)*pow(eprot,2)*mLam*mLamC*s23 - 12*epi*pow(eprot,3)*mLam*mLamC*s23 - 12*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*s23 - 12*epi*pow(eprot,3)*pow(mLamC,2)*s23 + 12*epi*pow(eprot,2)*mLam*pow(mLamC,2)*s23 + 6*pow(eprot,3)*mLam*pow(mLamC,2)*s23 + 12*epi*pow(eprot,2)*pow(mLamC,3)*s23 + 4*pow(eprot,3)*pow(mLamC,3)*s23 - 6*pow(eprot,2)*mLam*pow(mLamC,3)*s23 - 4*pow(eprot,2)*pow(mLamC,4)*s23 + 4*pow(epi,3)*pow(eprot,2)*mp*s23 - 4*pow(epi,2)*pow(eprot,2)*mLam*mp*s23 - 4*pow(epi,3)*eprot*mLamC*mp*s23 - 12*pow(epi,2)*pow(eprot,2)*mLamC*mp*s23 + 4*pow(epi,2)*eprot*mLam*mLamC*mp*s23 + 8*epi*pow(eprot,2)*mLam*mLamC*mp*s23 + 12*pow(epi,2)*eprot*pow(mLamC,2)*mp*s23 + 12*epi*pow(eprot,2)*pow(mLamC,2)*mp*s23 - 8*epi*eprot*mLam*pow(mLamC,2)*mp*s23 - 4*pow(eprot,2)*mLam*pow(mLamC,2)*mp*s23 - 12*epi*eprot*pow(mLamC,3)*mp*s23 - 4*pow(eprot,2)*pow(mLamC,3)*mp*s23 + 4*eprot*mLam*pow(mLamC,3)*mp*s23 + 4*eprot*pow(mLamC,4)*mp*s23 - 2*pow(epi,2)*eprot*mLam*pow(mp,2)*s23 + 2*pow(epi,2)*mLam*mLamC*pow(mp,2)*s23 + 4*epi*eprot*mLam*mLamC*pow(mp,2)*s23 - 4*epi*mLam*pow(mLamC,2)*pow(mp,2)*s23 - 2*eprot*mLam*pow(mLamC,2)*pow(mp,2)*s23 + 2*mLam*pow(mLamC,3)*pow(mp,2)*s23 + 4*pow(epi,3)*eprot*pow(ppp,2)*s23 - 6*pow(epi,2)*eprot*mLam*pow(ppp,2)*s23 - 12*pow(epi,2)*eprot*mLamC*pow(ppp,2)*s23 + 2*epi*pow(kkk,2)*mLamC*pow(ppp,2)*s23 + 12*epi*eprot*mLam*mLamC*pow(ppp,2)*s23 + pow(kkk,2)*mLam*mLamC*pow(ppp,2)*s23 + 12*epi*eprot*pow(mLamC,2)*pow(ppp,2)*s23 - 2*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2)*s23 - 6*eprot*mLam*pow(mLamC,2)*pow(ppp,2)*s23 - 4*eprot*pow(mLamC,3)*pow(ppp,2)*s23 + 2*epi*pow(kkk,2)*mp*pow(ppp,2)*s23 - 2*pow(epi,2)*mLam*mp*pow(ppp,2)*s23 + pow(kkk,2)*mLam*mp*pow(ppp,2)*s23 - 2*pow(kkk,2)*mLamC*mp*pow(ppp,2)*s23 + 4*epi*mLam*mLamC*mp*pow(ppp,2)*s23 - 2*mLam*pow(mLamC,2)*mp*pow(ppp,2)*s23 + 4*epi*pow(eprot,3)*s12*s23 - 6*pow(eprot,3)*mLam*s12*s23 - 4*epi*pow(eprot,2)*mLamC*s12*s23 - 4*pow(eprot,3)*mLamC*s12*s23 + 6*pow(eprot,2)*mLam*mLamC*s12*s23 + 4*pow(eprot,2)*pow(mLamC,2)*s12*s23 - 4*epi*pow(eprot,2)*mp*s12*s23 + 4*pow(eprot,2)*mLam*mp*s12*s23 + 4*epi*eprot*mLamC*mp*s12*s23 + 4*pow(eprot,2)*mLamC*mp*s12*s23 - 4*eprot*mLam*mLamC*mp*s12*s23 - 4*eprot*pow(mLamC,2)*mp*s12*s23 + 2*eprot*mLam*pow(mp,2)*s12*s23 - 2*mLam*mLamC*pow(mp,2)*s12*s23 - 4*epi*eprot*pow(ppp,2)*s12*s23 + 6*eprot*mLam*pow(ppp,2)*s12*s23 + 4*eprot*mLamC*pow(ppp,2)*s12*s23 + 2*mLam*mp*pow(ppp,2)*s12*s23 - kkk*ppp*(4*pow(kkk,2)*pow(mKst,2)*mLam*mp - 8*pow(kkk,2)*pow(mKst,2)*mLamC*mp + 4*pow(mKst,2)*pow(mLamC,3)*mp - 2*pow(mKst,2)*mLam*mLamC*pow(mp,2) + 4*mLam*pow(mLamC,3)*pow(mp,2) + 3*pow(kkk,2)*mLam*mLamC*pow(ppp,2) - 6*pow(mKst,2)*mLam*mLamC*pow(ppp,2) - 6*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 4*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) + 3*pow(kkk,2)*mLam*mp*pow(ppp,2) - 6*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 4*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 8*pow(epi,3)*(2*pow(eprot,3) + pow(mKst,2)*mp - pow(eprot,2)*(4*mLamC + 3*mp) + eprot*(-3*pow(mKst,2) + 2*pow(mLamC,2) + 4*mLamC*mp - 2*pow(ppp,2)) + mLamC*(-(mLamC*mp) + pow(ppp,2))) + 4*pow(eprot,3)*(3*mLam + 2*mLamC)*(pow(mLamC,2) - s12) + 4*pow(mKst,2)*mLam*mp*s12 - 2*pow(mKst,2)*pow(mp,2)*s12 - 4*mLam*mLamC*pow(mp,2)*s12 - 2*pow(mKst,2)*pow(ppp,2)*s12 + 4*mLam*mp*pow(ppp,2)*s12 - 4*mLam*pow(mLamC,2)*mp*s23 - 4*pow(mLamC,3)*mp*s23 + 2*mLam*mLamC*pow(mp,2)*s23 + 6*mLam*mLamC*pow(ppp,2)*s23 + 4*pow(mLamC,2)*pow(ppp,2)*s23 + 2*pow(mp,2)*s12*s23 + 2*pow(ppp,2)*s12*s23 + 4*eprot*(pow(kkk,2)*pow(mKst,2)*(mLam - 2*mLamC) + 2*mLam*pow(mLamC,3)*mp + 2*pow(mLamC,4)*mp - mLam*pow(mLamC,2)*pow(mp,2) - 3*mLam*pow(mLamC,2)*pow(ppp,2) - 2*pow(mLamC,3)*pow(ppp,2) - 2*mLam*mLamC*mp*s12 - 2*pow(mLamC,2)*mp*s12 + mLam*pow(mp,2)*s12 + 3*mLam*pow(ppp,2)*s12 + 2*mLamC*pow(ppp,2)*s12 + pow(mKst,2)*(-4*mLam*pow(mLamC,2) - 4*pow(mLamC,3) - mLam*mLamC*mp - 2*pow(mLamC,2)*mp + 3*mLam*s12 + 3*mLamC*s12 + mp*s12) + mLam*pow(mLamC,2)*s23 + 2*pow(mLamC,3)*s23 + mLam*mLamC*mp*s23 + 2*pow(mLamC,2)*mp*s23 - mLamC*s12*s23 - mp*s12*s23) + 2*pow(eprot,2)*(-4*pow(mLamC,4) - 4*pow(mLamC,3)*mp + 4*pow(mLamC,2)*s12 + 4*mLamC*mp*s12 + pow(mKst,2)*(3*mLam*mLamC + 2*pow(mLamC,2) + s12) - 2*pow(mLamC,2)*s23 - s12*s23 + mLam*(-6*pow(mLamC,3) - 4*pow(mLamC,2)*mp + 6*mLamC*s12 + 4*mp*s12 - 3*mLamC*s23)) + 4*pow(epi,2)*(2*pow(eprot,3)*(3*mLam + 5*mLamC) - 2*mLam*pow(mLamC,2)*mp - 4*pow(mLamC,3)*mp + 2*mLam*mLamC*pow(mp,2) - eprot*pow(mKst,2)*(5*mLam + 2*(8*mLamC + mp)) + 3*mLam*mLamC*pow(ppp,2) + 4*pow(mLamC,2)*pow(ppp,2) - mLam*mp*pow(ppp,2) + pow(mKst,2)*(mLam*mp + 5*mLamC*mp - pow(ppp,2)) + pow(eprot,2)*(pow(mKst,2) - 18*pow(mLamC,2) - 14*mLamC*mp - 4*mLam*(2*mLamC + mp) - s23) - mLamC*mp*s23 + pow(ppp,2)*s23 + 2*eprot*(4*pow(mLamC,3) + 9*pow(mLamC,2)*mp + mLam*(pow(mLamC,2) + 3*mLamC*mp - pow(mp,2) - 3*pow(ppp,2)) + mp*s23 + mLamC*(-5*pow(ppp,2) + s23))) - 2*epi*(-4*pow(kkk,2)*pow(mKst,2)*mp + 2*pow(mKst,2)*mLam*mLamC*mp + 8*pow(mKst,2)*pow(mLamC,2)*mp - 4*mLam*pow(mLamC,3)*mp - 4*pow(mLamC,4)*mp - pow(mKst,2)*mLam*pow(mp,2) + 6*mLam*pow(mLamC,2)*pow(mp,2) - 3*pow(mKst,2)*mLam*pow(ppp,2) - 3*pow(kkk,2)*mLamC*pow(ppp,2) - 4*pow(mKst,2)*mLamC*pow(ppp,2) + 6*mLam*pow(mLamC,2)*pow(ppp,2) + 4*pow(mLamC,3)*pow(ppp,2) - 3*pow(kkk,2)*mp*pow(ppp,2) - 4*mLam*mLamC*mp*pow(ppp,2) + 2*pow(eprot,3)*(9*mLam*mLamC + 8*pow(mLamC,2) - s12) + 2*mLamC*pow(mp,2)*s12 + 2*mLamC*pow(ppp,2)*s12 - 2*mLam*mLamC*mp*s23 - 4*pow(mLamC,2)*mp*s23 + mLam*pow(mp,2)*s23 + 3*mLam*pow(ppp,2)*s23 + 4*mLamC*pow(ppp,2)*s23 - 2*eprot*(2*pow(kkk,2)*pow(mKst,2) - 2*mLam*pow(mLamC,3) - 4*pow(mLamC,4) - 8*mLam*pow(mLamC,2)*mp - 12*pow(mLamC,3)*mp + 3*mLam*mLamC*pow(mp,2) + 9*mLam*mLamC*pow(ppp,2) + 8*pow(mLamC,2)*pow(ppp,2) + pow(mKst,2)*(9*mLam*mLamC + 14*pow(mLamC,2) + mLam*mp + 4*mLamC*mp - 4*s12) + 2*pow(mLamC,2)*s12 + 4*mLamC*mp*s12 + pow(mp,2)*s12 - pow(ppp,2)*s12 - mLam*mLamC*s23 - 4*pow(mLamC,2)*s23 - mLam*mp*s23 - 4*mLamC*mp*s23) + pow(eprot,2)*(-24*pow(mLamC,3) + pow(mKst,2)*(3*mLam + 4*mLamC) - 20*pow(mLamC,2)*mp + 6*mLamC*s12 + 8*mp*s12 - 4*mLamC*s23 - mLam*(22*pow(mLamC,2) + 12*mLamC*mp + 3*s23))))*cos(psi) + pow(kkk,2)*pow(ppp,2)*(5*pow(mKst,2)*mLam*mLamC + 6*pow(mKst,2)*pow(mLamC,2) - pow(mKst,2)*mLam*mp + 2*pow(mKst,2)*mLamC*mp - 4*mLam*pow(mLamC,2)*mp - 4*pow(mLamC,3)*mp + 2*mLam*mLamC*pow(mp,2) + 6*mLam*mLamC*pow(ppp,2) + 4*pow(mLamC,2)*pow(ppp,2) - 4*pow(epi,2)*(pow(eprot,2) - 2*pow(mKst,2) + pow(mLamC,2) + 2*mLamC*mp - 3*eprot*(mLamC + mp) - pow(ppp,2)) + 4*eprot*(mLamC + mp)*(mLam*mLamC + 2*pow(mLamC,2) - s12) + 2*pow(mKst,2)*s12 + 2*pow(mp,2)*s12 + 2*pow(ppp,2)*s12 - 2*pow(eprot,2)*(3*mLam*mLamC + 2*pow(mLamC,2) + s12) + mLam*mLamC*s23 - 2*pow(mLamC,2)*s23 + mLam*mp*s23 - 2*mLamC*mp*s23 + 2*epi*(-(mLam*pow(mLamC,2)) + 2*pow(mLamC,3) + pow(eprot,2)*(3*mLam + 4*mLamC) + mLam*mLamC*mp + 6*pow(mLamC,2)*mp - mLam*pow(mp,2) - eprot*(mLam + 10*mLamC)*(mLamC + mp) - pow(mKst,2)*(2*mLam + 7*mLamC + mp) - 3*mLam*pow(ppp,2) - 4*mLamC*pow(ppp,2) + mLamC*s23 + mp*s23))*cos(2*psi) - 2*epi*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) - pow(kkk,3)*mLam*mLamC*pow(ppp,3)*cos(3*psi) + 2*pow(kkk,3)*pow(mLamC,2)*pow(ppp,3)*cos(3*psi) - 2*epi*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) - pow(kkk,3)*mLam*mp*pow(ppp,3)*cos(3*psi) + 2*pow(kkk,3)*mLamC*mp*pow(ppp,3)*cos(3*psi)))/(3.*pow(mKst,2)*s12));
	    	break;
	    case FormulaParam::ReB2D: //f16
	    	return ReBWTwoResonances(s23,mKst,GKst, s12, mLam, GLam)*((-2*pow(mLamC,3)*(2*epi*(pow(eprot,2) - pow(mKst,2) - 2*eprot*mLamC + pow(mLamC,2)) - (eprot - mLamC)*(pow(mKst,2) - s23) - 2*kkk*(eprot - mLamC)*ppp*cos(psi))*(4*pow(epi,3)*pow(eprot,2) - 6*pow(epi,2)*pow(eprot,2)*mLam - 12*pow(epi,2)*pow(eprot,2)*mLamC + 12*epi*pow(eprot,2)*mLam*mLamC + 12*epi*pow(eprot,2)*pow(mLamC,2) - 6*pow(eprot,2)*mLam*pow(mLamC,2) - 4*pow(eprot,2)*pow(mLamC,3) - 4*pow(epi,3)*eprot*mp + 4*pow(epi,2)*eprot*mLam*mp + 12*pow(epi,2)*eprot*mLamC*mp - 8*epi*eprot*mLam*mLamC*mp - 12*epi*eprot*pow(mLamC,2)*mp + 4*eprot*mLam*pow(mLamC,2)*mp + 4*eprot*pow(mLamC,3)*mp + 2*pow(epi,2)*mLam*pow(mp,2) - 4*epi*mLam*mLamC*pow(mp,2) + 2*mLam*pow(mLamC,2)*pow(mp,2) + 2*epi*pow(kkk,2)*pow(ppp,2) + pow(kkk,2)*mLam*pow(ppp,2) - 2*pow(kkk,2)*mLamC*pow(ppp,2) - 4*epi*pow(eprot,2)*s12 + 6*pow(eprot,2)*mLam*s12 + 4*pow(eprot,2)*mLamC*s12 + 4*epi*eprot*mp*s12 - 4*eprot*mLam*mp*s12 - 4*eprot*mLamC*mp*s12 - 2*mLam*pow(mp,2)*s12 - 4*kkk*ppp*(-(epi*eprot*(mLam + 4*mLamC)) + pow(epi,2)*(2*eprot - mp) - mLamC*(mLam + mLamC)*mp + epi*(mLam + 2*mLamC)*mp + eprot*(mLam*mLamC + 2*pow(mLamC,2) - s12))*cos(psi) + pow(kkk,2)*(2*epi + mLam - 2*mLamC)*pow(ppp,2)*cos(2*psi)))/(3.*pow(mKst,2)*s12));
	    	break;
	    case FormulaParam::ReA1B: //f17
	    	return ReBWTwoResonances(s23,mKst,GKst, s13, mDel, GDel)*((-2*pow(mLamC,2)*(-8*pow(epi,4)*pow(eprot,4) - 24*pow(epi,3)*pow(eprot,5) - 24*pow(epi,2)*pow(eprot,6) - 8*epi*pow(eprot,7) - 12*pow(epi,3)*pow(eprot,4)*mDel - 24*pow(epi,2)*pow(eprot,5)*mDel - 12*epi*pow(eprot,6)*mDel + 8*pow(epi,4)*pow(eprot,2)*pow(mKst,2) + 28*pow(epi,3)*pow(eprot,3)*pow(mKst,2) + 36*pow(epi,2)*pow(eprot,4)*pow(mKst,2) + 20*epi*pow(eprot,5)*pow(mKst,2) + 4*pow(eprot,6)*pow(mKst,2) + 8*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(mKst,2) + 16*epi*pow(eprot,3)*pow(kkk,2)*pow(mKst,2) + 8*pow(eprot,4)*pow(kkk,2)*pow(mKst,2) + 12*pow(epi,3)*pow(eprot,2)*mDel*pow(mKst,2) + 30*pow(epi,2)*pow(eprot,3)*mDel*pow(mKst,2) + 24*epi*pow(eprot,4)*mDel*pow(mKst,2) + 6*pow(eprot,5)*mDel*pow(mKst,2) - 4*epi*pow(eprot,2)*pow(kkk,2)*mDel*pow(mKst,2) - 4*pow(eprot,3)*pow(kkk,2)*mDel*pow(mKst,2) + 16*pow(epi,4)*pow(eprot,3)*mLamC + 48*pow(epi,3)*pow(eprot,4)*mLamC + 48*pow(epi,2)*pow(eprot,5)*mLamC + 16*epi*pow(eprot,6)*mLamC + 24*pow(epi,3)*pow(eprot,3)*mDel*mLamC + 48*pow(epi,2)*pow(eprot,4)*mDel*mLamC + 24*epi*pow(eprot,5)*mDel*mLamC - 4*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mLamC - 12*pow(epi,2)*pow(eprot,3)*pow(mKst,2)*mLamC - 12*epi*pow(eprot,4)*pow(mKst,2)*mLamC - 4*pow(eprot,5)*pow(mKst,2)*mLamC - 6*pow(epi,2)*pow(eprot,2)*mDel*pow(mKst,2)*mLamC - 12*epi*pow(eprot,3)*mDel*pow(mKst,2)*mLamC - 6*pow(eprot,4)*mDel*pow(mKst,2)*mLamC - 8*pow(epi,4)*pow(eprot,2)*pow(mLamC,2) - 24*pow(epi,3)*pow(eprot,3)*pow(mLamC,2) - 24*pow(epi,2)*pow(eprot,4)*pow(mLamC,2) - 8*epi*pow(eprot,5)*pow(mLamC,2) - 12*pow(epi,3)*pow(eprot,2)*mDel*pow(mLamC,2) - 24*pow(epi,2)*pow(eprot,3)*mDel*pow(mLamC,2) - 12*epi*pow(eprot,4)*mDel*pow(mLamC,2) - 8*pow(epi,4)*pow(eprot,3)*mp - 24*pow(epi,3)*pow(eprot,4)*mp - 24*pow(epi,2)*pow(eprot,5)*mp - 8*epi*pow(eprot,6)*mp - 8*pow(epi,3)*pow(eprot,3)*mDel*mp - 16*pow(epi,2)*pow(eprot,4)*mDel*mp - 8*epi*pow(eprot,5)*mDel*mp + 8*pow(epi,4)*eprot*pow(mKst,2)*mp + 28*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mp + 36*pow(epi,2)*pow(eprot,3)*pow(mKst,2)*mp + 20*epi*pow(eprot,4)*pow(mKst,2)*mp + 4*pow(eprot,5)*pow(mKst,2)*mp - 8*pow(epi,2)*eprot*pow(kkk,2)*pow(mKst,2)*mp - 16*epi*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mp - 8*pow(eprot,3)*pow(kkk,2)*pow(mKst,2)*mp + 8*pow(epi,3)*eprot*mDel*pow(mKst,2)*mp + 20*pow(epi,2)*pow(eprot,2)*mDel*pow(mKst,2)*mp + 16*epi*pow(eprot,3)*mDel*pow(mKst,2)*mp + 4*pow(eprot,4)*mDel*pow(mKst,2)*mp + 16*pow(epi,4)*pow(eprot,2)*mLamC*mp + 48*pow(epi,3)*pow(eprot,3)*mLamC*mp + 48*pow(epi,2)*pow(eprot,4)*mLamC*mp + 16*epi*pow(eprot,5)*mLamC*mp + 16*pow(epi,3)*pow(eprot,2)*mDel*mLamC*mp + 32*pow(epi,2)*pow(eprot,3)*mDel*mLamC*mp + 16*epi*pow(eprot,4)*mDel*mLamC*mp - 4*pow(epi,3)*eprot*pow(mKst,2)*mLamC*mp - 12*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLamC*mp - 12*epi*pow(eprot,3)*pow(mKst,2)*mLamC*mp - 4*pow(eprot,4)*pow(mKst,2)*mLamC*mp - 4*pow(epi,2)*eprot*mDel*pow(mKst,2)*mLamC*mp - 8*epi*pow(eprot,2)*mDel*pow(mKst,2)*mLamC*mp - 4*pow(eprot,3)*mDel*pow(mKst,2)*mLamC*mp - 8*pow(epi,4)*eprot*pow(mLamC,2)*mp - 24*pow(epi,3)*pow(eprot,2)*pow(mLamC,2)*mp - 24*pow(epi,2)*pow(eprot,3)*pow(mLamC,2)*mp - 8*epi*pow(eprot,4)*pow(mLamC,2)*mp - 8*pow(epi,3)*eprot*mDel*pow(mLamC,2)*mp - 16*pow(epi,2)*pow(eprot,2)*mDel*pow(mLamC,2)*mp - 8*epi*pow(eprot,3)*mDel*pow(mLamC,2)*mp + 4*pow(epi,3)*pow(eprot,2)*mDel*pow(mp,2) + 8*pow(epi,2)*pow(eprot,3)*mDel*pow(mp,2) + 4*epi*pow(eprot,4)*mDel*pow(mp,2) - 4*pow(epi,3)*mDel*pow(mKst,2)*pow(mp,2) - 10*pow(epi,2)*eprot*mDel*pow(mKst,2)*pow(mp,2) - 8*epi*pow(eprot,2)*mDel*pow(mKst,2)*pow(mp,2) - 2*pow(eprot,3)*mDel*pow(mKst,2)*pow(mp,2) + 4*epi*pow(kkk,2)*mDel*pow(mKst,2)*pow(mp,2) + 4*eprot*pow(kkk,2)*mDel*pow(mKst,2)*pow(mp,2) - 8*pow(epi,3)*eprot*mDel*mLamC*pow(mp,2) - 16*pow(epi,2)*pow(eprot,2)*mDel*mLamC*pow(mp,2) - 8*epi*pow(eprot,3)*mDel*mLamC*pow(mp,2) + 2*pow(epi,2)*mDel*pow(mKst,2)*mLamC*pow(mp,2) + 4*epi*eprot*mDel*pow(mKst,2)*mLamC*pow(mp,2) + 2*pow(eprot,2)*mDel*pow(mKst,2)*mLamC*pow(mp,2) + 4*pow(epi,3)*mDel*pow(mLamC,2)*pow(mp,2) + 8*pow(epi,2)*eprot*mDel*pow(mLamC,2)*pow(mp,2) + 4*epi*pow(eprot,2)*mDel*pow(mLamC,2)*pow(mp,2) + 8*pow(epi,4)*pow(eprot,2)*pow(ppp,2) + 32*pow(epi,3)*pow(eprot,3)*pow(ppp,2) + 40*pow(epi,2)*pow(eprot,4)*pow(ppp,2) + 16*epi*pow(eprot,5)*pow(ppp,2) - 4*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(ppp,2) - 8*epi*pow(eprot,3)*pow(kkk,2)*pow(ppp,2) - 4*pow(eprot,4)*pow(kkk,2)*pow(ppp,2) + 12*pow(epi,3)*pow(eprot,2)*mDel*pow(ppp,2) + 36*pow(epi,2)*pow(eprot,3)*mDel*pow(ppp,2) + 24*epi*pow(eprot,4)*mDel*pow(ppp,2) - 6*epi*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,2) - 6*pow(eprot,3)*pow(kkk,2)*mDel*pow(ppp,2) - 20*pow(epi,3)*eprot*pow(mKst,2)*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*pow(ppp,2) - 36*epi*pow(eprot,3)*pow(mKst,2)*pow(ppp,2) - 8*pow(eprot,4)*pow(mKst,2)*pow(ppp,2) + 8*pow(epi,2)*pow(kkk,2)*pow(mKst,2)*pow(ppp,2) - 8*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*pow(ppp,2) - 14*pow(epi,2)*eprot*mDel*pow(mKst,2)*pow(ppp,2) - 26*epi*pow(eprot,2)*mDel*pow(mKst,2)*pow(ppp,2) - 12*pow(eprot,3)*mDel*pow(mKst,2)*pow(ppp,2) + 4*epi*pow(kkk,2)*mDel*pow(mKst,2)*pow(ppp,2) + 12*eprot*pow(kkk,2)*mDel*pow(mKst,2)*pow(ppp,2) - 8*pow(epi,4)*eprot*mLamC*pow(ppp,2) - 48*pow(epi,3)*pow(eprot,2)*mLamC*pow(ppp,2) - 72*pow(epi,2)*pow(eprot,3)*mLamC*pow(ppp,2) - 32*epi*pow(eprot,4)*mLamC*pow(ppp,2) + 12*pow(epi,2)*eprot*pow(kkk,2)*mLamC*pow(ppp,2) + 20*epi*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2) + 8*pow(eprot,3)*pow(kkk,2)*mLamC*pow(ppp,2) - 12*pow(epi,3)*eprot*mDel*mLamC*pow(ppp,2) - 44*pow(epi,2)*pow(eprot,2)*mDel*mLamC*pow(ppp,2) - 32*epi*pow(eprot,3)*mDel*mLamC*pow(ppp,2) + 2*epi*eprot*pow(kkk,2)*mDel*mLamC*pow(ppp,2) + 4*pow(eprot,2)*pow(kkk,2)*mDel*mLamC*pow(ppp,2) + 8*pow(epi,2)*eprot*pow(mKst,2)*mLamC*pow(ppp,2) + 16*epi*pow(eprot,2)*pow(mKst,2)*mLamC*pow(ppp,2) + 8*pow(eprot,3)*pow(mKst,2)*mLamC*pow(ppp,2) - 2*epi*pow(kkk,2)*pow(mKst,2)*mLamC*pow(ppp,2) - 2*eprot*pow(kkk,2)*pow(mKst,2)*mLamC*pow(ppp,2) + 4*epi*eprot*mDel*pow(mKst,2)*mLamC*pow(ppp,2) + 4*pow(eprot,2)*mDel*pow(mKst,2)*mLamC*pow(ppp,2) + pow(kkk,2)*mDel*pow(mKst,2)*mLamC*pow(ppp,2) + 16*pow(epi,3)*eprot*pow(mLamC,2)*pow(ppp,2) + 32*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*pow(ppp,2) + 16*epi*pow(eprot,3)*pow(mLamC,2)*pow(ppp,2) - 4*pow(epi,2)*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 4*epi*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) + 8*pow(epi,2)*eprot*mDel*pow(mLamC,2)*pow(ppp,2) + 8*epi*pow(eprot,2)*mDel*pow(mLamC,2)*pow(ppp,2) + 2*epi*pow(kkk,2)*mDel*pow(mLamC,2)*pow(ppp,2) + 16*pow(epi,3)*pow(eprot,2)*mp*pow(ppp,2) + 32*pow(epi,2)*pow(eprot,3)*mp*pow(ppp,2) + 16*epi*pow(eprot,4)*mp*pow(ppp,2) - 12*pow(epi,2)*eprot*pow(kkk,2)*mp*pow(ppp,2) - 20*epi*pow(eprot,2)*pow(kkk,2)*mp*pow(ppp,2) - 8*pow(eprot,3)*pow(kkk,2)*mp*pow(ppp,2) - 4*pow(epi,3)*eprot*mDel*mp*pow(ppp,2) + 4*epi*pow(eprot,3)*mDel*mp*pow(ppp,2) - 2*epi*eprot*pow(kkk,2)*mDel*mp*pow(ppp,2) - 4*pow(eprot,2)*pow(kkk,2)*mDel*mp*pow(ppp,2) - 8*pow(epi,3)*pow(mKst,2)*mp*pow(ppp,2) - 24*pow(epi,2)*eprot*pow(mKst,2)*mp*pow(ppp,2) - 24*epi*pow(eprot,2)*pow(mKst,2)*mp*pow(ppp,2) - 8*pow(eprot,3)*pow(mKst,2)*mp*pow(ppp,2) + 14*epi*pow(kkk,2)*pow(mKst,2)*mp*pow(ppp,2) + 14*eprot*pow(kkk,2)*pow(mKst,2)*mp*pow(ppp,2) - 6*pow(epi,2)*mDel*pow(mKst,2)*mp*pow(ppp,2) - 8*epi*eprot*mDel*pow(mKst,2)*mp*pow(ppp,2) - 2*pow(eprot,2)*mDel*pow(mKst,2)*mp*pow(ppp,2) - 7*pow(kkk,2)*mDel*pow(mKst,2)*mp*pow(ppp,2) - 24*pow(epi,3)*eprot*mLamC*mp*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,2)*mLamC*mp*pow(ppp,2) - 24*epi*pow(eprot,3)*mLamC*mp*pow(ppp,2) + 8*pow(epi,2)*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 12*epi*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 4*pow(eprot,2)*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 4*pow(epi,3)*mDel*mLamC*mp*pow(ppp,2) - 8*pow(epi,2)*eprot*mDel*mLamC*mp*pow(ppp,2) - 12*epi*pow(eprot,2)*mDel*mLamC*mp*pow(ppp,2) + 2*epi*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) + 4*eprot*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) + 4*pow(epi,2)*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 8*epi*eprot*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 4*pow(eprot,2)*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 4*epi*mDel*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 4*eprot*mDel*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 8*pow(epi,3)*pow(mLamC,2)*mp*pow(ppp,2) + 16*pow(epi,2)*eprot*pow(mLamC,2)*mp*pow(ppp,2) + 8*epi*pow(eprot,2)*pow(mLamC,2)*mp*pow(ppp,2) + 8*pow(epi,2)*mDel*pow(mLamC,2)*mp*pow(ppp,2) + 8*epi*eprot*mDel*pow(mLamC,2)*mp*pow(ppp,2) - 4*pow(epi,2)*eprot*mDel*pow(mp,2)*pow(ppp,2) - 4*epi*pow(eprot,2)*mDel*pow(mp,2)*pow(ppp,2) + 2*epi*pow(kkk,2)*mDel*pow(mp,2)*pow(ppp,2) + 2*eprot*pow(kkk,2)*mDel*pow(mp,2)*pow(ppp,2) + 2*epi*mDel*pow(mKst,2)*pow(mp,2)*pow(ppp,2) + 2*eprot*mDel*pow(mKst,2)*pow(mp,2)*pow(ppp,2) + 4*pow(epi,2)*mDel*mLamC*pow(mp,2)*pow(ppp,2) + 4*epi*eprot*mDel*mLamC*pow(mp,2)*pow(ppp,2) - 8*pow(epi,3)*eprot*pow(ppp,4) - 16*pow(epi,2)*pow(eprot,2)*pow(ppp,4) - 8*epi*pow(eprot,3)*pow(ppp,4) + 4*pow(epi,2)*pow(kkk,2)*pow(ppp,4) + 8*epi*eprot*pow(kkk,2)*pow(ppp,4) + 4*pow(eprot,2)*pow(kkk,2)*pow(ppp,4) - 12*pow(epi,2)*eprot*mDel*pow(ppp,4) - 12*epi*pow(eprot,2)*mDel*pow(ppp,4) + 6*epi*pow(kkk,2)*mDel*pow(ppp,4) + 6*eprot*pow(kkk,2)*mDel*pow(ppp,4) + 12*pow(epi,2)*pow(mKst,2)*pow(ppp,4) + 16*epi*eprot*pow(mKst,2)*pow(ppp,4) + 4*pow(eprot,2)*pow(mKst,2)*pow(ppp,4) + 2*epi*mDel*pow(mKst,2)*pow(ppp,4) + 6*eprot*mDel*pow(mKst,2)*pow(ppp,4) + 8*pow(epi,3)*mLamC*pow(ppp,4) + 24*pow(epi,2)*eprot*mLamC*pow(ppp,4) + 16*epi*pow(eprot,2)*mLamC*pow(ppp,4) - 8*epi*pow(kkk,2)*mLamC*pow(ppp,4) - 8*eprot*pow(kkk,2)*mLamC*pow(ppp,4) + 12*pow(epi,2)*mDel*mLamC*pow(ppp,4) + 8*epi*eprot*mDel*mLamC*pow(ppp,4) + 4*pow(kkk,2)*mDel*mLamC*pow(ppp,4) - 4*epi*pow(mKst,2)*mLamC*pow(ppp,4) - 4*eprot*pow(mKst,2)*mLamC*pow(ppp,4) + 2*mDel*pow(mKst,2)*mLamC*pow(ppp,4) - 8*pow(epi,2)*pow(mLamC,2)*pow(ppp,4) - 8*epi*eprot*pow(mLamC,2)*pow(ppp,4) + 4*epi*mDel*pow(mLamC,2)*pow(ppp,4) - 8*pow(epi,2)*eprot*mp*pow(ppp,4) - 8*epi*pow(eprot,2)*mp*pow(ppp,4) + 8*epi*pow(kkk,2)*mp*pow(ppp,4) + 8*eprot*pow(kkk,2)*mp*pow(ppp,4) + 4*epi*eprot*mDel*mp*pow(ppp,4) - 4*pow(kkk,2)*mDel*mp*pow(ppp,4) + 4*epi*pow(mKst,2)*mp*pow(ppp,4) + 4*eprot*pow(mKst,2)*mp*pow(ppp,4) - 2*mDel*pow(mKst,2)*mp*pow(ppp,4) + 8*pow(epi,2)*mLamC*mp*pow(ppp,4) + 8*epi*eprot*mLamC*mp*pow(ppp,4) - 4*epi*mDel*mLamC*mp*pow(ppp,4) + 8*pow(epi,2)*pow(eprot,4)*s13 + 8*epi*pow(eprot,5)*s13 + 12*epi*pow(eprot,4)*mDel*s13 - 8*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*s13 - 12*epi*pow(eprot,3)*pow(mKst,2)*s13 - 4*pow(eprot,4)*pow(mKst,2)*s13 - 12*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*s13 - 12*epi*pow(eprot,2)*mDel*pow(mKst,2)*s13 - 6*pow(eprot,3)*mDel*pow(mKst,2)*s13 - 16*pow(epi,2)*pow(eprot,3)*mLamC*s13 - 16*epi*pow(eprot,4)*mLamC*s13 - 24*epi*pow(eprot,3)*mDel*mLamC*s13 + 4*epi*pow(eprot,2)*pow(mKst,2)*mLamC*s13 + 4*pow(eprot,3)*pow(mKst,2)*mLamC*s13 + 6*pow(eprot,2)*mDel*pow(mKst,2)*mLamC*s13 + 8*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*s13 + 8*epi*pow(eprot,3)*pow(mLamC,2)*s13 + 12*epi*pow(eprot,2)*mDel*pow(mLamC,2)*s13 + 8*pow(epi,2)*pow(eprot,3)*mp*s13 + 8*epi*pow(eprot,4)*mp*s13 + 8*epi*pow(eprot,3)*mDel*mp*s13 - 8*pow(epi,2)*eprot*pow(mKst,2)*mp*s13 - 12*epi*pow(eprot,2)*pow(mKst,2)*mp*s13 - 4*pow(eprot,3)*pow(mKst,2)*mp*s13 + 8*eprot*pow(kkk,2)*pow(mKst,2)*mp*s13 - 8*epi*eprot*mDel*pow(mKst,2)*mp*s13 - 4*pow(eprot,2)*mDel*pow(mKst,2)*mp*s13 - 16*pow(epi,2)*pow(eprot,2)*mLamC*mp*s13 - 16*epi*pow(eprot,3)*mLamC*mp*s13 - 16*epi*pow(eprot,2)*mDel*mLamC*mp*s13 + 4*epi*eprot*pow(mKst,2)*mLamC*mp*s13 + 4*pow(eprot,2)*pow(mKst,2)*mLamC*mp*s13 + 4*eprot*mDel*pow(mKst,2)*mLamC*mp*s13 + 8*pow(epi,2)*eprot*pow(mLamC,2)*mp*s13 + 8*epi*pow(eprot,2)*pow(mLamC,2)*mp*s13 + 8*epi*eprot*mDel*pow(mLamC,2)*mp*s13 - 4*epi*pow(eprot,2)*mDel*pow(mp,2)*s13 + 4*pow(kkk,2)*pow(mKst,2)*pow(mp,2)*s13 + 4*epi*mDel*pow(mKst,2)*pow(mp,2)*s13 + 2*eprot*mDel*pow(mKst,2)*pow(mp,2)*s13 + 8*epi*eprot*mDel*mLamC*pow(mp,2)*s13 - 2*mDel*pow(mKst,2)*mLamC*pow(mp,2)*s13 - 4*epi*mDel*pow(mLamC,2)*pow(mp,2)*s13 - 8*pow(epi,2)*pow(eprot,2)*pow(ppp,2)*s13 - 4*epi*pow(eprot,3)*pow(ppp,2)*s13 - 2*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s13 - 12*epi*pow(eprot,2)*mDel*pow(ppp,2)*s13 + 12*epi*eprot*pow(mKst,2)*pow(ppp,2)*s13 + 2*pow(eprot,2)*pow(mKst,2)*pow(ppp,2)*s13 + 2*pow(kkk,2)*pow(mKst,2)*pow(ppp,2)*s13 + 6*eprot*mDel*pow(mKst,2)*pow(ppp,2)*s13 + 8*pow(epi,2)*eprot*mLamC*pow(ppp,2)*s13 + 12*epi*pow(eprot,2)*mLamC*pow(ppp,2)*s13 - 4*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s13 + 12*epi*eprot*mDel*mLamC*pow(ppp,2)*s13 - 4*eprot*pow(mKst,2)*mLamC*pow(ppp,2)*s13 - 8*epi*eprot*pow(mLamC,2)*pow(ppp,2)*s13 - 8*epi*pow(eprot,2)*mp*pow(ppp,2)*s13 + 4*eprot*pow(kkk,2)*mp*pow(ppp,2)*s13 + 4*epi*eprot*mDel*mp*pow(ppp,2)*s13 + 4*eprot*pow(mKst,2)*mp*pow(ppp,2)*s13 - 2*mDel*pow(mKst,2)*mp*pow(ppp,2)*s13 + 8*epi*eprot*mLamC*mp*pow(ppp,2)*s13 - 4*epi*mDel*mLamC*mp*pow(ppp,2)*s13 - 4*epi*eprot*pow(mp,2)*pow(ppp,2)*s13 + 2*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s13 + 2*pow(mKst,2)*pow(mp,2)*pow(ppp,2)*s13 + 4*epi*mLamC*pow(mp,2)*pow(ppp,2)*s13 - 4*epi*eprot*pow(ppp,4)*s13 + 2*pow(kkk,2)*pow(ppp,4)*s13 + 2*pow(mKst,2)*pow(ppp,4)*s13 + 4*epi*mLamC*pow(ppp,4)*s13 - 4*pow(epi,3)*pow(eprot,3)*s23 - 12*pow(epi,2)*pow(eprot,4)*s23 - 12*epi*pow(eprot,5)*s23 - 4*pow(eprot,6)*s23 - 6*pow(epi,2)*pow(eprot,3)*mDel*s23 - 12*epi*pow(eprot,4)*mDel*s23 - 6*pow(eprot,5)*mDel*s23 + 4*pow(epi,3)*pow(eprot,2)*mLamC*s23 + 12*pow(epi,2)*pow(eprot,3)*mLamC*s23 + 12*epi*pow(eprot,4)*mLamC*s23 + 4*pow(eprot,5)*mLamC*s23 + 6*pow(epi,2)*pow(eprot,2)*mDel*mLamC*s23 + 12*epi*pow(eprot,3)*mDel*mLamC*s23 + 6*pow(eprot,4)*mDel*mLamC*s23 - 4*pow(epi,3)*pow(eprot,2)*mp*s23 - 12*pow(epi,2)*pow(eprot,3)*mp*s23 - 12*epi*pow(eprot,4)*mp*s23 - 4*pow(eprot,5)*mp*s23 - 4*pow(epi,2)*pow(eprot,2)*mDel*mp*s23 - 8*epi*pow(eprot,3)*mDel*mp*s23 - 4*pow(eprot,4)*mDel*mp*s23 + 4*pow(epi,3)*eprot*mLamC*mp*s23 + 12*pow(epi,2)*pow(eprot,2)*mLamC*mp*s23 + 12*epi*pow(eprot,3)*mLamC*mp*s23 + 4*pow(eprot,4)*mLamC*mp*s23 + 4*pow(epi,2)*eprot*mDel*mLamC*mp*s23 + 8*epi*pow(eprot,2)*mDel*mLamC*mp*s23 + 4*pow(eprot,3)*mDel*mLamC*mp*s23 + 2*pow(epi,2)*eprot*mDel*pow(mp,2)*s23 + 4*epi*pow(eprot,2)*mDel*pow(mp,2)*s23 + 2*pow(eprot,3)*mDel*pow(mp,2)*s23 - 2*pow(epi,2)*mDel*mLamC*pow(mp,2)*s23 - 4*epi*eprot*mDel*mLamC*pow(mp,2)*s23 - 2*pow(eprot,2)*mDel*mLamC*pow(mp,2)*s23 + 4*pow(epi,3)*eprot*pow(ppp,2)*s23 + 16*pow(epi,2)*pow(eprot,2)*pow(ppp,2)*s23 + 20*epi*pow(eprot,3)*pow(ppp,2)*s23 + 8*pow(eprot,4)*pow(ppp,2)*s23 + 6*pow(epi,2)*eprot*mDel*pow(ppp,2)*s23 + 18*epi*pow(eprot,2)*mDel*pow(ppp,2)*s23 + 12*pow(eprot,3)*mDel*pow(ppp,2)*s23 - 8*pow(epi,2)*eprot*mLamC*pow(ppp,2)*s23 - 16*epi*pow(eprot,2)*mLamC*pow(ppp,2)*s23 - 8*pow(eprot,3)*mLamC*pow(ppp,2)*s23 + 2*epi*pow(kkk,2)*mLamC*pow(ppp,2)*s23 + 2*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s23 - 4*epi*eprot*mDel*mLamC*pow(ppp,2)*s23 - 4*pow(eprot,2)*mDel*mLamC*pow(ppp,2)*s23 - pow(kkk,2)*mDel*mLamC*pow(ppp,2)*s23 + 8*pow(epi,2)*eprot*mp*pow(ppp,2)*s23 + 16*epi*pow(eprot,2)*mp*pow(ppp,2)*s23 + 8*pow(eprot,3)*mp*pow(ppp,2)*s23 - 2*epi*pow(kkk,2)*mp*pow(ppp,2)*s23 - 2*eprot*pow(kkk,2)*mp*pow(ppp,2)*s23 - 2*pow(epi,2)*mDel*mp*pow(ppp,2)*s23 + 2*pow(eprot,2)*mDel*mp*pow(ppp,2)*s23 + pow(kkk,2)*mDel*mp*pow(ppp,2)*s23 - 4*pow(epi,2)*mLamC*mp*pow(ppp,2)*s23 - 8*epi*eprot*mLamC*mp*pow(ppp,2)*s23 - 4*pow(eprot,2)*mLamC*mp*pow(ppp,2)*s23 - 4*epi*mDel*mLamC*mp*pow(ppp,2)*s23 - 4*eprot*mDel*mLamC*mp*pow(ppp,2)*s23 - 2*epi*mDel*pow(mp,2)*pow(ppp,2)*s23 - 2*eprot*mDel*pow(mp,2)*pow(ppp,2)*s23 - 4*pow(epi,2)*pow(ppp,4)*s23 - 8*epi*eprot*pow(ppp,4)*s23 - 4*pow(eprot,2)*pow(ppp,4)*s23 - 6*epi*mDel*pow(ppp,4)*s23 - 6*eprot*mDel*pow(ppp,4)*s23 + 4*epi*mLamC*pow(ppp,4)*s23 + 4*eprot*mLamC*pow(ppp,4)*s23 - 2*mDel*mLamC*pow(ppp,4)*s23 - 4*epi*mp*pow(ppp,4)*s23 - 4*eprot*mp*pow(ppp,4)*s23 + 2*mDel*mp*pow(ppp,4)*s23 + 4*epi*pow(eprot,3)*s13*s23 + 4*pow(eprot,4)*s13*s23 + 6*pow(eprot,3)*mDel*s13*s23 - 4*epi*pow(eprot,2)*mLamC*s13*s23 - 4*pow(eprot,3)*mLamC*s13*s23 - 6*pow(eprot,2)*mDel*mLamC*s13*s23 + 4*epi*pow(eprot,2)*mp*s13*s23 + 4*pow(eprot,3)*mp*s13*s23 + 4*pow(eprot,2)*mDel*mp*s13*s23 - 4*epi*eprot*mLamC*mp*s13*s23 - 4*pow(eprot,2)*mLamC*mp*s13*s23 - 4*eprot*mDel*mLamC*mp*s13*s23 - 2*eprot*mDel*pow(mp,2)*s13*s23 + 2*mDel*mLamC*pow(mp,2)*s13*s23 - 4*epi*eprot*pow(ppp,2)*s13*s23 - 2*pow(eprot,2)*pow(ppp,2)*s13*s23 - 6*eprot*mDel*pow(ppp,2)*s13*s23 + 4*eprot*mLamC*pow(ppp,2)*s13*s23 - 4*eprot*mp*pow(ppp,2)*s13*s23 + 2*mDel*mp*pow(ppp,2)*s13*s23 - 2*pow(mp,2)*pow(ppp,2)*s13*s23 - 2*pow(ppp,4)*s13*s23 + kkk*ppp*(8*pow(eprot,6) - 4*pow(kkk,2)*mDel*pow(mKst,2)*mp + 4*pow(eprot,5)*(3*mDel - 2*mLamC + 2*mp) + 3*pow(kkk,2)*mDel*mLamC*pow(ppp,2) + 4*mDel*pow(mKst,2)*mLamC*pow(ppp,2) - 3*pow(kkk,2)*mDel*mp*pow(ppp,2) - 8*mDel*pow(mKst,2)*mp*pow(ppp,2) + 4*mDel*mLamC*pow(ppp,4) - 4*mDel*mp*pow(ppp,4) + 8*pow(epi,3)*(2*pow(eprot,3) - pow(mKst,2)*mp + pow(eprot,2)*(-4*mLamC + 3*mp) + mLamC*(mLamC*mp + pow(ppp,2)) - eprot*(3*pow(mKst,2) - 2*pow(mLamC,2) + 4*mLamC*mp + 2*pow(ppp,2))) - 4*mDel*pow(mKst,2)*mp*s13 + 6*pow(mKst,2)*pow(mp,2)*s13 - 4*mDel*mLamC*pow(mp,2)*s13 + 6*pow(mKst,2)*pow(ppp,2)*s13 - 4*mDel*mp*pow(ppp,2)*s13 + 4*pow(mp,2)*pow(ppp,2)*s13 + 4*pow(ppp,4)*s13 - 2*pow(eprot,3)*(-4*(pow(mKst,2)*(mLamC - 2*mp) + (mLamC - mp)*(2*pow(ppp,2) + s13 - s23)) + mDel*(11*pow(mKst,2) + 4*mLamC*mp + 2*pow(mp,2) + 12*pow(ppp,2) + 6*s13 - 3*s23)) - 4*pow(eprot,4)*(pow(mKst,2) + 3*mDel*mLamC - 2*mDel*mp + 2*mLamC*mp + 4*pow(ppp,2) + 2*s13 - s23) - 4*mDel*mLamC*pow(ppp,2)*s23 + 4*mDel*mp*pow(ppp,2)*s23 - 2*pow(mp,2)*s13*s23 - 2*pow(ppp,2)*s13*s23 + 2*eprot*(-4*pow(mKst,2)*mLamC*pow(ppp,2) + 8*pow(mKst,2)*mp*pow(ppp,2) - 4*mLamC*pow(ppp,4) + 4*mp*pow(ppp,4) + pow(kkk,2)*(2*mDel*pow(mKst,2) + 4*pow(mKst,2)*mp + 3*(-mLamC + mp)*pow(ppp,2)) - 2*pow(mKst,2)*mLamC*s13 + 6*pow(mKst,2)*mp*s13 - 4*mLamC*pow(ppp,2)*s13 + 4*mp*pow(ppp,2)*s13 + mDel*pow(mKst,2)*(2*mLamC*mp + 3*pow(mp,2) + 11*pow(ppp,2) + 6*s13) + mDel*(2*mLamC*mp + pow(mp,2) + 3*pow(ppp,2))*(2*pow(ppp,2) + 2*s13 - s23) + 4*mLamC*pow(ppp,2)*s23 - 4*mp*pow(ppp,2)*s23 + 2*mLamC*s13*s23 - 2*mp*s13*s23) + 4*pow(epi,2)*(10*pow(eprot,4) + pow(mKst,2)*mLamC*mp + 2*pow(eprot,3)*(3*mDel - 9*mLamC + 7*mp) + 7*pow(mKst,2)*pow(ppp,2) - 4*pow(mLamC,2)*pow(ppp,2) + 6*mLamC*mp*pow(ppp,2) + 2*pow(ppp,4) - eprot*mDel*(5*pow(mKst,2) - 2*pow(mLamC,2) + 6*mLamC*mp + 2*pow(mp,2) + 6*pow(ppp,2)) + mDel*(-(pow(mKst,2)*mp) + 2*pow(mLamC,2)*mp + 2*mLamC*pow(mp,2) + 3*mLamC*pow(ppp,2) + mp*pow(ppp,2)) - mLamC*mp*s23 - pow(ppp,2)*s23 + pow(eprot,2)*(-13*pow(mKst,2) - 8*mDel*mLamC + 8*pow(mLamC,2) + 4*mDel*mp - 18*mLamC*mp - 12*pow(ppp,2) + s23) + 2*eprot*(pow(mKst,2)*(mLamC - 4*mp) + 2*pow(mLamC,2)*mp + 6*mLamC*pow(ppp,2) - 4*mp*pow(ppp,2) - mLamC*s23 + mp*s23)) + pow(eprot,2)*(-8*pow(kkk,2)*pow(mKst,2) + 4*pow(mKst,2)*mLamC*mp + 4*pow(mKst,2)*pow(ppp,2) + 8*mLamC*mp*pow(ppp,2) + 8*pow(ppp,4) - 6*pow(mKst,2)*s13 + 8*mLamC*mp*s13 + 4*pow(ppp,2)*s13 - 4*mLamC*mp*s23 - 4*pow(ppp,2)*s23 + 2*s13*s23 + 4*mDel*(pow(mKst,2)*mLamC + mLamC*(pow(mp,2) + 2*pow(ppp,2) + 3*s13 - s23) + mp*(-pow(ppp,2) - 2*s13 + s23))) + 2*epi*(16*pow(eprot,5) + 4*pow(kkk,2)*pow(mKst,2)*mp + 2*mDel*pow(mKst,2)*mLamC*mp + 3*mDel*pow(mKst,2)*pow(mp,2) + 2*pow(eprot,4)*(9*mDel - 12*mLamC + 10*mp) + 5*mDel*pow(mKst,2)*pow(ppp,2) - 3*pow(kkk,2)*mLamC*pow(ppp,2) - 4*pow(mKst,2)*mLamC*pow(ppp,2) + 4*mDel*pow(mLamC,2)*pow(ppp,2) + 3*pow(kkk,2)*mp*pow(ppp,2) + 8*pow(mKst,2)*mp*pow(ppp,2) + 2*mDel*pow(mp,2)*pow(ppp,2) + 6*mDel*pow(ppp,4) - 4*mLamC*pow(ppp,4) + 4*mp*pow(ppp,4) + 2*mLamC*pow(mp,2)*s13 + 2*mLamC*pow(ppp,2)*s13 - 2*pow(eprot,3)*(8*pow(mKst,2) + 11*mDel*mLamC - 4*pow(mLamC,2) - 6*mDel*mp + 12*mLamC*mp + 12*pow(ppp,2) + s13 - 2*s23) - 2*mDel*mLamC*mp*s23 - mDel*pow(mp,2)*s23 - 3*mDel*pow(ppp,2)*s23 + 4*mLamC*pow(ppp,2)*s23 - 4*mp*pow(ppp,2)*s23 + pow(eprot,2)*(4*pow(mKst,2)*(2*mLamC - 5*mp) + 4*pow(mLamC,2)*mp + 28*mLamC*pow(ppp,2) - 24*mp*pow(ppp,2) + 6*mLamC*s13 - 8*mp*s13 - mDel*(21*pow(mKst,2) - 4*pow(mLamC,2) + 16*mLamC*mp + 6*pow(mp,2) + 24*pow(ppp,2) - 3*s23) - 8*mLamC*s23 + 8*mp*s23) + 2*eprot*(-2*pow(kkk,2)*pow(mKst,2) + 2*pow(mKst,2)*mLamC*mp + 8*pow(mKst,2)*pow(ppp,2) - 4*pow(mLamC,2)*pow(ppp,2) + 8*mLamC*mp*pow(ppp,2) + 4*pow(ppp,4) + 4*pow(mKst,2)*s13 - 2*pow(mLamC,2)*s13 + 4*mLamC*mp*s13 - pow(mp,2)*s13 + pow(ppp,2)*s13 - 2*mLamC*mp*s23 - 2*pow(ppp,2)*s23 + mDel*(pow(mKst,2)*(mLamC - mp) + 2*pow(mLamC,2)*mp + 3*mLamC*pow(mp,2) + 3*mLamC*pow(ppp,2) + 2*mp*pow(ppp,2) - mLamC*s23 + mp*s23))))*cos(psi) + pow(kkk,2)*pow(ppp,2)*(-4*pow(eprot,4) + mDel*pow(mKst,2)*mLamC + pow(eprot,3)*(-6*mDel + 8*mLamC - 8*mp) - 3*mDel*pow(mKst,2)*mp + 4*mDel*mLamC*pow(ppp,2) - 4*mDel*mp*pow(ppp,2) - 4*pow(epi,2)*(pow(eprot,2) - 2*pow(mKst,2) - 3*eprot*mLamC + pow(mLamC,2) + 3*eprot*mp - 2*mLamC*mp - pow(ppp,2)) + pow(eprot,2)*(4*mDel*(mLamC - mp) + 4*mLamC*mp + 4*pow(ppp,2) - 2*s13) + 2*pow(mKst,2)*s13 + 2*pow(mp,2)*s13 + 2*pow(ppp,2)*s13 + 2*eprot*(-(pow(mKst,2)*(mLamC - 3*mp)) + mDel*(4*pow(mKst,2) + 2*mLamC*mp + pow(mp,2) + 3*pow(ppp,2)) - (mLamC - mp)*(4*pow(ppp,2) + 2*s13 - s23)) - mDel*mLamC*s23 + mDel*mp*s23 + 2*epi*(-4*pow(eprot,3) - pow(mKst,2)*mLamC + pow(eprot,2)*(-3*mDel + 10*(mLamC - mp)) + 3*pow(mKst,2)*mp - 4*mLamC*pow(ppp,2) + 4*mp*pow(ppp,2) + mDel*(2*pow(mKst,2) + pow(mLamC,2) + mLamC*mp + pow(mp,2) + 3*pow(ppp,2)) + eprot*(4*pow(mKst,2) + mDel*mLamC - 2*pow(mLamC,2) - mDel*mp + 6*mLamC*mp + 4*pow(ppp,2)) + mLamC*s23 - mp*s23))*cos(2*psi) - 2*epi*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) - 2*eprot*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) + pow(kkk,3)*mDel*mLamC*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) + 2*eprot*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) - pow(kkk,3)*mDel*mp*pow(ppp,3)*cos(3*psi)))/(3.*pow(mKst,2)*s13));
	    	break;
	    case FormulaParam::ReA2B: //f18
	    	return ReBWTwoResonances(s23,mKst,GKst, s13, mDel, GDel)*((2*pow(mLamC,3)*(2*epi*(pow(eprot,2) - pow(mKst,2) - 2*eprot*mLamC + pow(mLamC,2)) - (eprot - mLamC)*(pow(mKst,2) - s23) - 2*kkk*(eprot - mLamC)*ppp*cos(psi))*(4*pow(epi,3)*pow(eprot,2) + 12*pow(epi,2)*pow(eprot,3) + 12*epi*pow(eprot,4) + 4*pow(eprot,5) + 6*pow(epi,2)*pow(eprot,2)*mDel + 12*epi*pow(eprot,3)*mDel + 6*pow(eprot,4)*mDel + 4*pow(epi,3)*eprot*mp + 12*pow(epi,2)*pow(eprot,2)*mp + 12*epi*pow(eprot,3)*mp + 4*pow(eprot,4)*mp + 4*pow(epi,2)*eprot*mDel*mp + 8*epi*pow(eprot,2)*mDel*mp + 4*pow(eprot,3)*mDel*mp - 2*pow(epi,2)*mDel*pow(mp,2) - 4*epi*eprot*mDel*pow(mp,2) - 2*pow(eprot,2)*mDel*pow(mp,2) - 8*pow(epi,2)*eprot*pow(ppp,2) - 16*epi*pow(eprot,2)*pow(ppp,2) - 8*pow(eprot,3)*pow(ppp,2) + 2*epi*pow(kkk,2)*pow(ppp,2) + 2*eprot*pow(kkk,2)*pow(ppp,2) - 4*epi*eprot*mDel*pow(ppp,2) - 4*pow(eprot,2)*mDel*pow(ppp,2) - pow(kkk,2)*mDel*pow(ppp,2) - 4*pow(epi,2)*mp*pow(ppp,2) - 8*epi*eprot*mp*pow(ppp,2) - 4*pow(eprot,2)*mp*pow(ppp,2) - 4*epi*mDel*mp*pow(ppp,2) - 4*eprot*mDel*mp*pow(ppp,2) + 4*epi*pow(ppp,4) + 4*eprot*pow(ppp,4) - 2*mDel*pow(ppp,4) - 4*epi*pow(eprot,2)*s13 - 4*pow(eprot,3)*s13 - 6*pow(eprot,2)*mDel*s13 - 4*epi*eprot*mp*s13 - 4*pow(eprot,2)*mp*s13 - 4*eprot*mDel*mp*s13 + 2*mDel*pow(mp,2)*s13 + 4*eprot*pow(ppp,2)*s13 - 4*kkk*ppp*(2*pow(eprot,3) + pow(epi,2)*(2*eprot + mp) + pow(eprot,2)*(mDel + mp) + mDel*pow(ppp,2) + epi*(4*pow(eprot,2) + mDel*mp + eprot*(mDel + 2*mp) - 2*pow(ppp,2)) + eprot*(mDel*mp - 2*pow(ppp,2) - s13))*cos(psi) + pow(kkk,2)*(2*epi + 2*eprot - mDel)*pow(ppp,2)*cos(2*psi)))/(3.*pow(mKst,2)*s13));
	    	break;
	    case FormulaParam::ReB1A: //f19
	    	return ReBWTwoResonances(s23,mKst,GKst, s13, mDel, GDel)*((-2*pow(mLamC,2)*(8*pow(epi,4)*pow(eprot,4) + 24*pow(epi,3)*pow(eprot,5) + 24*pow(epi,2)*pow(eprot,6) + 8*epi*pow(eprot,7) - 12*pow(epi,3)*pow(eprot,4)*mDel - 24*pow(epi,2)*pow(eprot,5)*mDel - 12*epi*pow(eprot,6)*mDel - 8*pow(epi,4)*pow(eprot,2)*pow(mKst,2) - 28*pow(epi,3)*pow(eprot,3)*pow(mKst,2) - 36*pow(epi,2)*pow(eprot,4)*pow(mKst,2) - 20*epi*pow(eprot,5)*pow(mKst,2) - 4*pow(eprot,6)*pow(mKst,2) - 8*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(mKst,2) - 16*epi*pow(eprot,3)*pow(kkk,2)*pow(mKst,2) - 8*pow(eprot,4)*pow(kkk,2)*pow(mKst,2) + 12*pow(epi,3)*pow(eprot,2)*mDel*pow(mKst,2) + 30*pow(epi,2)*pow(eprot,3)*mDel*pow(mKst,2) + 24*epi*pow(eprot,4)*mDel*pow(mKst,2) + 6*pow(eprot,5)*mDel*pow(mKst,2) - 4*epi*pow(eprot,2)*pow(kkk,2)*mDel*pow(mKst,2) - 4*pow(eprot,3)*pow(kkk,2)*mDel*pow(mKst,2) - 16*pow(epi,4)*pow(eprot,3)*mLamC - 48*pow(epi,3)*pow(eprot,4)*mLamC - 48*pow(epi,2)*pow(eprot,5)*mLamC - 16*epi*pow(eprot,6)*mLamC + 24*pow(epi,3)*pow(eprot,3)*mDel*mLamC + 48*pow(epi,2)*pow(eprot,4)*mDel*mLamC + 24*epi*pow(eprot,5)*mDel*mLamC + 4*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mLamC + 12*pow(epi,2)*pow(eprot,3)*pow(mKst,2)*mLamC + 12*epi*pow(eprot,4)*pow(mKst,2)*mLamC + 4*pow(eprot,5)*pow(mKst,2)*mLamC - 6*pow(epi,2)*pow(eprot,2)*mDel*pow(mKst,2)*mLamC - 12*epi*pow(eprot,3)*mDel*pow(mKst,2)*mLamC - 6*pow(eprot,4)*mDel*pow(mKst,2)*mLamC + 8*pow(epi,4)*pow(eprot,2)*pow(mLamC,2) + 24*pow(epi,3)*pow(eprot,3)*pow(mLamC,2) + 24*pow(epi,2)*pow(eprot,4)*pow(mLamC,2) + 8*epi*pow(eprot,5)*pow(mLamC,2) - 12*pow(epi,3)*pow(eprot,2)*mDel*pow(mLamC,2) - 24*pow(epi,2)*pow(eprot,3)*mDel*pow(mLamC,2) - 12*epi*pow(eprot,4)*mDel*pow(mLamC,2) - 8*pow(epi,4)*pow(eprot,3)*mp - 24*pow(epi,3)*pow(eprot,4)*mp - 24*pow(epi,2)*pow(eprot,5)*mp - 8*epi*pow(eprot,6)*mp + 8*pow(epi,3)*pow(eprot,3)*mDel*mp + 16*pow(epi,2)*pow(eprot,4)*mDel*mp + 8*epi*pow(eprot,5)*mDel*mp + 8*pow(epi,4)*eprot*pow(mKst,2)*mp + 28*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mp + 36*pow(epi,2)*pow(eprot,3)*pow(mKst,2)*mp + 20*epi*pow(eprot,4)*pow(mKst,2)*mp + 4*pow(eprot,5)*pow(mKst,2)*mp - 8*pow(epi,2)*eprot*pow(kkk,2)*pow(mKst,2)*mp - 16*epi*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mp - 8*pow(eprot,3)*pow(kkk,2)*pow(mKst,2)*mp - 8*pow(epi,3)*eprot*mDel*pow(mKst,2)*mp - 20*pow(epi,2)*pow(eprot,2)*mDel*pow(mKst,2)*mp - 16*epi*pow(eprot,3)*mDel*pow(mKst,2)*mp - 4*pow(eprot,4)*mDel*pow(mKst,2)*mp + 16*pow(epi,4)*pow(eprot,2)*mLamC*mp + 48*pow(epi,3)*pow(eprot,3)*mLamC*mp + 48*pow(epi,2)*pow(eprot,4)*mLamC*mp + 16*epi*pow(eprot,5)*mLamC*mp - 16*pow(epi,3)*pow(eprot,2)*mDel*mLamC*mp - 32*pow(epi,2)*pow(eprot,3)*mDel*mLamC*mp - 16*epi*pow(eprot,4)*mDel*mLamC*mp - 4*pow(epi,3)*eprot*pow(mKst,2)*mLamC*mp - 12*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLamC*mp - 12*epi*pow(eprot,3)*pow(mKst,2)*mLamC*mp - 4*pow(eprot,4)*pow(mKst,2)*mLamC*mp + 4*pow(epi,2)*eprot*mDel*pow(mKst,2)*mLamC*mp + 8*epi*pow(eprot,2)*mDel*pow(mKst,2)*mLamC*mp + 4*pow(eprot,3)*mDel*pow(mKst,2)*mLamC*mp - 8*pow(epi,4)*eprot*pow(mLamC,2)*mp - 24*pow(epi,3)*pow(eprot,2)*pow(mLamC,2)*mp - 24*pow(epi,2)*pow(eprot,3)*pow(mLamC,2)*mp - 8*epi*pow(eprot,4)*pow(mLamC,2)*mp + 8*pow(epi,3)*eprot*mDel*pow(mLamC,2)*mp + 16*pow(epi,2)*pow(eprot,2)*mDel*pow(mLamC,2)*mp + 8*epi*pow(eprot,3)*mDel*pow(mLamC,2)*mp + 4*pow(epi,3)*pow(eprot,2)*mDel*pow(mp,2) + 8*pow(epi,2)*pow(eprot,3)*mDel*pow(mp,2) + 4*epi*pow(eprot,4)*mDel*pow(mp,2) - 4*pow(epi,3)*mDel*pow(mKst,2)*pow(mp,2) - 10*pow(epi,2)*eprot*mDel*pow(mKst,2)*pow(mp,2) - 8*epi*pow(eprot,2)*mDel*pow(mKst,2)*pow(mp,2) - 2*pow(eprot,3)*mDel*pow(mKst,2)*pow(mp,2) + 4*epi*pow(kkk,2)*mDel*pow(mKst,2)*pow(mp,2) + 4*eprot*pow(kkk,2)*mDel*pow(mKst,2)*pow(mp,2) - 8*pow(epi,3)*eprot*mDel*mLamC*pow(mp,2) - 16*pow(epi,2)*pow(eprot,2)*mDel*mLamC*pow(mp,2) - 8*epi*pow(eprot,3)*mDel*mLamC*pow(mp,2) + 2*pow(epi,2)*mDel*pow(mKst,2)*mLamC*pow(mp,2) + 4*epi*eprot*mDel*pow(mKst,2)*mLamC*pow(mp,2) + 2*pow(eprot,2)*mDel*pow(mKst,2)*mLamC*pow(mp,2) + 4*pow(epi,3)*mDel*pow(mLamC,2)*pow(mp,2) + 8*pow(epi,2)*eprot*mDel*pow(mLamC,2)*pow(mp,2) + 4*epi*pow(eprot,2)*mDel*pow(mLamC,2)*pow(mp,2) - 8*pow(epi,4)*pow(eprot,2)*pow(ppp,2) - 32*pow(epi,3)*pow(eprot,3)*pow(ppp,2) - 40*pow(epi,2)*pow(eprot,4)*pow(ppp,2) - 16*epi*pow(eprot,5)*pow(ppp,2) + 4*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(ppp,2) + 8*epi*pow(eprot,3)*pow(kkk,2)*pow(ppp,2) + 4*pow(eprot,4)*pow(kkk,2)*pow(ppp,2) + 12*pow(epi,3)*pow(eprot,2)*mDel*pow(ppp,2) + 36*pow(epi,2)*pow(eprot,3)*mDel*pow(ppp,2) + 24*epi*pow(eprot,4)*mDel*pow(ppp,2) - 6*epi*pow(eprot,2)*pow(kkk,2)*mDel*pow(ppp,2) - 6*pow(eprot,3)*pow(kkk,2)*mDel*pow(ppp,2) + 20*pow(epi,3)*eprot*pow(mKst,2)*pow(ppp,2) + 48*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*pow(ppp,2) + 36*epi*pow(eprot,3)*pow(mKst,2)*pow(ppp,2) + 8*pow(eprot,4)*pow(mKst,2)*pow(ppp,2) - 8*pow(epi,2)*pow(kkk,2)*pow(mKst,2)*pow(ppp,2) + 8*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*pow(ppp,2) - 14*pow(epi,2)*eprot*mDel*pow(mKst,2)*pow(ppp,2) - 26*epi*pow(eprot,2)*mDel*pow(mKst,2)*pow(ppp,2) - 12*pow(eprot,3)*mDel*pow(mKst,2)*pow(ppp,2) + 4*epi*pow(kkk,2)*mDel*pow(mKst,2)*pow(ppp,2) + 12*eprot*pow(kkk,2)*mDel*pow(mKst,2)*pow(ppp,2) + 8*pow(epi,4)*eprot*mLamC*pow(ppp,2) + 48*pow(epi,3)*pow(eprot,2)*mLamC*pow(ppp,2) + 72*pow(epi,2)*pow(eprot,3)*mLamC*pow(ppp,2) + 32*epi*pow(eprot,4)*mLamC*pow(ppp,2) - 12*pow(epi,2)*eprot*pow(kkk,2)*mLamC*pow(ppp,2) - 20*epi*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2) - 8*pow(eprot,3)*pow(kkk,2)*mLamC*pow(ppp,2) - 12*pow(epi,3)*eprot*mDel*mLamC*pow(ppp,2) - 44*pow(epi,2)*pow(eprot,2)*mDel*mLamC*pow(ppp,2) - 32*epi*pow(eprot,3)*mDel*mLamC*pow(ppp,2) + 2*epi*eprot*pow(kkk,2)*mDel*mLamC*pow(ppp,2) + 4*pow(eprot,2)*pow(kkk,2)*mDel*mLamC*pow(ppp,2) - 8*pow(epi,2)*eprot*pow(mKst,2)*mLamC*pow(ppp,2) - 16*epi*pow(eprot,2)*pow(mKst,2)*mLamC*pow(ppp,2) - 8*pow(eprot,3)*pow(mKst,2)*mLamC*pow(ppp,2) + 2*epi*pow(kkk,2)*pow(mKst,2)*mLamC*pow(ppp,2) + 2*eprot*pow(kkk,2)*pow(mKst,2)*mLamC*pow(ppp,2) + 4*epi*eprot*mDel*pow(mKst,2)*mLamC*pow(ppp,2) + 4*pow(eprot,2)*mDel*pow(mKst,2)*mLamC*pow(ppp,2) + pow(kkk,2)*mDel*pow(mKst,2)*mLamC*pow(ppp,2) - 16*pow(epi,3)*eprot*pow(mLamC,2)*pow(ppp,2) - 32*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*pow(ppp,2) - 16*epi*pow(eprot,3)*pow(mLamC,2)*pow(ppp,2) + 4*pow(epi,2)*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) + 4*epi*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) + 8*pow(epi,2)*eprot*mDel*pow(mLamC,2)*pow(ppp,2) + 8*epi*pow(eprot,2)*mDel*pow(mLamC,2)*pow(ppp,2) + 2*epi*pow(kkk,2)*mDel*pow(mLamC,2)*pow(ppp,2) + 16*pow(epi,3)*pow(eprot,2)*mp*pow(ppp,2) + 32*pow(epi,2)*pow(eprot,3)*mp*pow(ppp,2) + 16*epi*pow(eprot,4)*mp*pow(ppp,2) - 12*pow(epi,2)*eprot*pow(kkk,2)*mp*pow(ppp,2) - 20*epi*pow(eprot,2)*pow(kkk,2)*mp*pow(ppp,2) - 8*pow(eprot,3)*pow(kkk,2)*mp*pow(ppp,2) + 4*pow(epi,3)*eprot*mDel*mp*pow(ppp,2) - 4*epi*pow(eprot,3)*mDel*mp*pow(ppp,2) + 2*epi*eprot*pow(kkk,2)*mDel*mp*pow(ppp,2) + 4*pow(eprot,2)*pow(kkk,2)*mDel*mp*pow(ppp,2) - 8*pow(epi,3)*pow(mKst,2)*mp*pow(ppp,2) - 24*pow(epi,2)*eprot*pow(mKst,2)*mp*pow(ppp,2) - 24*epi*pow(eprot,2)*pow(mKst,2)*mp*pow(ppp,2) - 8*pow(eprot,3)*pow(mKst,2)*mp*pow(ppp,2) + 14*epi*pow(kkk,2)*pow(mKst,2)*mp*pow(ppp,2) + 14*eprot*pow(kkk,2)*pow(mKst,2)*mp*pow(ppp,2) + 6*pow(epi,2)*mDel*pow(mKst,2)*mp*pow(ppp,2) + 8*epi*eprot*mDel*pow(mKst,2)*mp*pow(ppp,2) + 2*pow(eprot,2)*mDel*pow(mKst,2)*mp*pow(ppp,2) + 7*pow(kkk,2)*mDel*pow(mKst,2)*mp*pow(ppp,2) - 24*pow(epi,3)*eprot*mLamC*mp*pow(ppp,2) - 48*pow(epi,2)*pow(eprot,2)*mLamC*mp*pow(ppp,2) - 24*epi*pow(eprot,3)*mLamC*mp*pow(ppp,2) + 8*pow(epi,2)*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 12*epi*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 4*pow(eprot,2)*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 4*pow(epi,3)*mDel*mLamC*mp*pow(ppp,2) + 8*pow(epi,2)*eprot*mDel*mLamC*mp*pow(ppp,2) + 12*epi*pow(eprot,2)*mDel*mLamC*mp*pow(ppp,2) - 2*epi*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) - 4*eprot*pow(kkk,2)*mDel*mLamC*mp*pow(ppp,2) + 4*pow(epi,2)*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 8*epi*eprot*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 4*pow(eprot,2)*pow(mKst,2)*mLamC*mp*pow(ppp,2) - 4*epi*mDel*pow(mKst,2)*mLamC*mp*pow(ppp,2) - 4*eprot*mDel*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 8*pow(epi,3)*pow(mLamC,2)*mp*pow(ppp,2) + 16*pow(epi,2)*eprot*pow(mLamC,2)*mp*pow(ppp,2) + 8*epi*pow(eprot,2)*pow(mLamC,2)*mp*pow(ppp,2) - 8*pow(epi,2)*mDel*pow(mLamC,2)*mp*pow(ppp,2) - 8*epi*eprot*mDel*pow(mLamC,2)*mp*pow(ppp,2) - 4*pow(epi,2)*eprot*mDel*pow(mp,2)*pow(ppp,2) - 4*epi*pow(eprot,2)*mDel*pow(mp,2)*pow(ppp,2) + 2*epi*pow(kkk,2)*mDel*pow(mp,2)*pow(ppp,2) + 2*eprot*pow(kkk,2)*mDel*pow(mp,2)*pow(ppp,2) + 2*epi*mDel*pow(mKst,2)*pow(mp,2)*pow(ppp,2) + 2*eprot*mDel*pow(mKst,2)*pow(mp,2)*pow(ppp,2) + 4*pow(epi,2)*mDel*mLamC*pow(mp,2)*pow(ppp,2) + 4*epi*eprot*mDel*mLamC*pow(mp,2)*pow(ppp,2) + 8*pow(epi,3)*eprot*pow(ppp,4) + 16*pow(epi,2)*pow(eprot,2)*pow(ppp,4) + 8*epi*pow(eprot,3)*pow(ppp,4) - 4*pow(epi,2)*pow(kkk,2)*pow(ppp,4) - 8*epi*eprot*pow(kkk,2)*pow(ppp,4) - 4*pow(eprot,2)*pow(kkk,2)*pow(ppp,4) - 12*pow(epi,2)*eprot*mDel*pow(ppp,4) - 12*epi*pow(eprot,2)*mDel*pow(ppp,4) + 6*epi*pow(kkk,2)*mDel*pow(ppp,4) + 6*eprot*pow(kkk,2)*mDel*pow(ppp,4) - 12*pow(epi,2)*pow(mKst,2)*pow(ppp,4) - 16*epi*eprot*pow(mKst,2)*pow(ppp,4) - 4*pow(eprot,2)*pow(mKst,2)*pow(ppp,4) + 2*epi*mDel*pow(mKst,2)*pow(ppp,4) + 6*eprot*mDel*pow(mKst,2)*pow(ppp,4) - 8*pow(epi,3)*mLamC*pow(ppp,4) - 24*pow(epi,2)*eprot*mLamC*pow(ppp,4) - 16*epi*pow(eprot,2)*mLamC*pow(ppp,4) + 8*epi*pow(kkk,2)*mLamC*pow(ppp,4) + 8*eprot*pow(kkk,2)*mLamC*pow(ppp,4) + 12*pow(epi,2)*mDel*mLamC*pow(ppp,4) + 8*epi*eprot*mDel*mLamC*pow(ppp,4) + 4*pow(kkk,2)*mDel*mLamC*pow(ppp,4) + 4*epi*pow(mKst,2)*mLamC*pow(ppp,4) + 4*eprot*pow(mKst,2)*mLamC*pow(ppp,4) + 2*mDel*pow(mKst,2)*mLamC*pow(ppp,4) + 8*pow(epi,2)*pow(mLamC,2)*pow(ppp,4) + 8*epi*eprot*pow(mLamC,2)*pow(ppp,4) + 4*epi*mDel*pow(mLamC,2)*pow(ppp,4) - 8*pow(epi,2)*eprot*mp*pow(ppp,4) - 8*epi*pow(eprot,2)*mp*pow(ppp,4) + 8*epi*pow(kkk,2)*mp*pow(ppp,4) + 8*eprot*pow(kkk,2)*mp*pow(ppp,4) - 4*epi*eprot*mDel*mp*pow(ppp,4) + 4*pow(kkk,2)*mDel*mp*pow(ppp,4) + 4*epi*pow(mKst,2)*mp*pow(ppp,4) + 4*eprot*pow(mKst,2)*mp*pow(ppp,4) + 2*mDel*pow(mKst,2)*mp*pow(ppp,4) + 8*pow(epi,2)*mLamC*mp*pow(ppp,4) + 8*epi*eprot*mLamC*mp*pow(ppp,4) + 4*epi*mDel*mLamC*mp*pow(ppp,4) - 8*pow(epi,2)*pow(eprot,4)*s13 - 8*epi*pow(eprot,5)*s13 + 12*epi*pow(eprot,4)*mDel*s13 + 8*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*s13 + 12*epi*pow(eprot,3)*pow(mKst,2)*s13 + 4*pow(eprot,4)*pow(mKst,2)*s13 + 12*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*s13 - 12*epi*pow(eprot,2)*mDel*pow(mKst,2)*s13 - 6*pow(eprot,3)*mDel*pow(mKst,2)*s13 + 16*pow(epi,2)*pow(eprot,3)*mLamC*s13 + 16*epi*pow(eprot,4)*mLamC*s13 - 24*epi*pow(eprot,3)*mDel*mLamC*s13 - 4*epi*pow(eprot,2)*pow(mKst,2)*mLamC*s13 - 4*pow(eprot,3)*pow(mKst,2)*mLamC*s13 + 6*pow(eprot,2)*mDel*pow(mKst,2)*mLamC*s13 - 8*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*s13 - 8*epi*pow(eprot,3)*pow(mLamC,2)*s13 + 12*epi*pow(eprot,2)*mDel*pow(mLamC,2)*s13 + 8*pow(epi,2)*pow(eprot,3)*mp*s13 + 8*epi*pow(eprot,4)*mp*s13 - 8*epi*pow(eprot,3)*mDel*mp*s13 - 8*pow(epi,2)*eprot*pow(mKst,2)*mp*s13 - 12*epi*pow(eprot,2)*pow(mKst,2)*mp*s13 - 4*pow(eprot,3)*pow(mKst,2)*mp*s13 + 8*eprot*pow(kkk,2)*pow(mKst,2)*mp*s13 + 8*epi*eprot*mDel*pow(mKst,2)*mp*s13 + 4*pow(eprot,2)*mDel*pow(mKst,2)*mp*s13 - 16*pow(epi,2)*pow(eprot,2)*mLamC*mp*s13 - 16*epi*pow(eprot,3)*mLamC*mp*s13 + 16*epi*pow(eprot,2)*mDel*mLamC*mp*s13 + 4*epi*eprot*pow(mKst,2)*mLamC*mp*s13 + 4*pow(eprot,2)*pow(mKst,2)*mLamC*mp*s13 - 4*eprot*mDel*pow(mKst,2)*mLamC*mp*s13 + 8*pow(epi,2)*eprot*pow(mLamC,2)*mp*s13 + 8*epi*pow(eprot,2)*pow(mLamC,2)*mp*s13 - 8*epi*eprot*mDel*pow(mLamC,2)*mp*s13 - 4*epi*pow(eprot,2)*mDel*pow(mp,2)*s13 - 4*pow(kkk,2)*pow(mKst,2)*pow(mp,2)*s13 + 4*epi*mDel*pow(mKst,2)*pow(mp,2)*s13 + 2*eprot*mDel*pow(mKst,2)*pow(mp,2)*s13 + 8*epi*eprot*mDel*mLamC*pow(mp,2)*s13 - 2*mDel*pow(mKst,2)*mLamC*pow(mp,2)*s13 - 4*epi*mDel*pow(mLamC,2)*pow(mp,2)*s13 + 8*pow(epi,2)*pow(eprot,2)*pow(ppp,2)*s13 + 4*epi*pow(eprot,3)*pow(ppp,2)*s13 + 2*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s13 - 12*epi*pow(eprot,2)*mDel*pow(ppp,2)*s13 - 12*epi*eprot*pow(mKst,2)*pow(ppp,2)*s13 - 2*pow(eprot,2)*pow(mKst,2)*pow(ppp,2)*s13 - 2*pow(kkk,2)*pow(mKst,2)*pow(ppp,2)*s13 + 6*eprot*mDel*pow(mKst,2)*pow(ppp,2)*s13 - 8*pow(epi,2)*eprot*mLamC*pow(ppp,2)*s13 - 12*epi*pow(eprot,2)*mLamC*pow(ppp,2)*s13 + 4*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s13 + 12*epi*eprot*mDel*mLamC*pow(ppp,2)*s13 + 4*eprot*pow(mKst,2)*mLamC*pow(ppp,2)*s13 + 8*epi*eprot*pow(mLamC,2)*pow(ppp,2)*s13 - 8*epi*pow(eprot,2)*mp*pow(ppp,2)*s13 + 4*eprot*pow(kkk,2)*mp*pow(ppp,2)*s13 - 4*epi*eprot*mDel*mp*pow(ppp,2)*s13 + 4*eprot*pow(mKst,2)*mp*pow(ppp,2)*s13 + 2*mDel*pow(mKst,2)*mp*pow(ppp,2)*s13 + 8*epi*eprot*mLamC*mp*pow(ppp,2)*s13 + 4*epi*mDel*mLamC*mp*pow(ppp,2)*s13 + 4*epi*eprot*pow(mp,2)*pow(ppp,2)*s13 - 2*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s13 - 2*pow(mKst,2)*pow(mp,2)*pow(ppp,2)*s13 - 4*epi*mLamC*pow(mp,2)*pow(ppp,2)*s13 + 4*epi*eprot*pow(ppp,4)*s13 - 2*pow(kkk,2)*pow(ppp,4)*s13 - 2*pow(mKst,2)*pow(ppp,4)*s13 - 4*epi*mLamC*pow(ppp,4)*s13 + 4*pow(epi,3)*pow(eprot,3)*s23 + 12*pow(epi,2)*pow(eprot,4)*s23 + 12*epi*pow(eprot,5)*s23 + 4*pow(eprot,6)*s23 - 6*pow(epi,2)*pow(eprot,3)*mDel*s23 - 12*epi*pow(eprot,4)*mDel*s23 - 6*pow(eprot,5)*mDel*s23 - 4*pow(epi,3)*pow(eprot,2)*mLamC*s23 - 12*pow(epi,2)*pow(eprot,3)*mLamC*s23 - 12*epi*pow(eprot,4)*mLamC*s23 - 4*pow(eprot,5)*mLamC*s23 + 6*pow(epi,2)*pow(eprot,2)*mDel*mLamC*s23 + 12*epi*pow(eprot,3)*mDel*mLamC*s23 + 6*pow(eprot,4)*mDel*mLamC*s23 - 4*pow(epi,3)*pow(eprot,2)*mp*s23 - 12*pow(epi,2)*pow(eprot,3)*mp*s23 - 12*epi*pow(eprot,4)*mp*s23 - 4*pow(eprot,5)*mp*s23 + 4*pow(epi,2)*pow(eprot,2)*mDel*mp*s23 + 8*epi*pow(eprot,3)*mDel*mp*s23 + 4*pow(eprot,4)*mDel*mp*s23 + 4*pow(epi,3)*eprot*mLamC*mp*s23 + 12*pow(epi,2)*pow(eprot,2)*mLamC*mp*s23 + 12*epi*pow(eprot,3)*mLamC*mp*s23 + 4*pow(eprot,4)*mLamC*mp*s23 - 4*pow(epi,2)*eprot*mDel*mLamC*mp*s23 - 8*epi*pow(eprot,2)*mDel*mLamC*mp*s23 - 4*pow(eprot,3)*mDel*mLamC*mp*s23 + 2*pow(epi,2)*eprot*mDel*pow(mp,2)*s23 + 4*epi*pow(eprot,2)*mDel*pow(mp,2)*s23 + 2*pow(eprot,3)*mDel*pow(mp,2)*s23 - 2*pow(epi,2)*mDel*mLamC*pow(mp,2)*s23 - 4*epi*eprot*mDel*mLamC*pow(mp,2)*s23 - 2*pow(eprot,2)*mDel*mLamC*pow(mp,2)*s23 - 4*pow(epi,3)*eprot*pow(ppp,2)*s23 - 16*pow(epi,2)*pow(eprot,2)*pow(ppp,2)*s23 - 20*epi*pow(eprot,3)*pow(ppp,2)*s23 - 8*pow(eprot,4)*pow(ppp,2)*s23 + 6*pow(epi,2)*eprot*mDel*pow(ppp,2)*s23 + 18*epi*pow(eprot,2)*mDel*pow(ppp,2)*s23 + 12*pow(eprot,3)*mDel*pow(ppp,2)*s23 + 8*pow(epi,2)*eprot*mLamC*pow(ppp,2)*s23 + 16*epi*pow(eprot,2)*mLamC*pow(ppp,2)*s23 + 8*pow(eprot,3)*mLamC*pow(ppp,2)*s23 - 2*epi*pow(kkk,2)*mLamC*pow(ppp,2)*s23 - 2*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s23 - 4*epi*eprot*mDel*mLamC*pow(ppp,2)*s23 - 4*pow(eprot,2)*mDel*mLamC*pow(ppp,2)*s23 - pow(kkk,2)*mDel*mLamC*pow(ppp,2)*s23 + 8*pow(epi,2)*eprot*mp*pow(ppp,2)*s23 + 16*epi*pow(eprot,2)*mp*pow(ppp,2)*s23 + 8*pow(eprot,3)*mp*pow(ppp,2)*s23 - 2*epi*pow(kkk,2)*mp*pow(ppp,2)*s23 - 2*eprot*pow(kkk,2)*mp*pow(ppp,2)*s23 + 2*pow(epi,2)*mDel*mp*pow(ppp,2)*s23 - 2*pow(eprot,2)*mDel*mp*pow(ppp,2)*s23 - pow(kkk,2)*mDel*mp*pow(ppp,2)*s23 - 4*pow(epi,2)*mLamC*mp*pow(ppp,2)*s23 - 8*epi*eprot*mLamC*mp*pow(ppp,2)*s23 - 4*pow(eprot,2)*mLamC*mp*pow(ppp,2)*s23 + 4*epi*mDel*mLamC*mp*pow(ppp,2)*s23 + 4*eprot*mDel*mLamC*mp*pow(ppp,2)*s23 - 2*epi*mDel*pow(mp,2)*pow(ppp,2)*s23 - 2*eprot*mDel*pow(mp,2)*pow(ppp,2)*s23 + 4*pow(epi,2)*pow(ppp,4)*s23 + 8*epi*eprot*pow(ppp,4)*s23 + 4*pow(eprot,2)*pow(ppp,4)*s23 - 6*epi*mDel*pow(ppp,4)*s23 - 6*eprot*mDel*pow(ppp,4)*s23 - 4*epi*mLamC*pow(ppp,4)*s23 - 4*eprot*mLamC*pow(ppp,4)*s23 - 2*mDel*mLamC*pow(ppp,4)*s23 - 4*epi*mp*pow(ppp,4)*s23 - 4*eprot*mp*pow(ppp,4)*s23 - 2*mDel*mp*pow(ppp,4)*s23 - 4*epi*pow(eprot,3)*s13*s23 - 4*pow(eprot,4)*s13*s23 + 6*pow(eprot,3)*mDel*s13*s23 + 4*epi*pow(eprot,2)*mLamC*s13*s23 + 4*pow(eprot,3)*mLamC*s13*s23 - 6*pow(eprot,2)*mDel*mLamC*s13*s23 + 4*epi*pow(eprot,2)*mp*s13*s23 + 4*pow(eprot,3)*mp*s13*s23 - 4*pow(eprot,2)*mDel*mp*s13*s23 - 4*epi*eprot*mLamC*mp*s13*s23 - 4*pow(eprot,2)*mLamC*mp*s13*s23 + 4*eprot*mDel*mLamC*mp*s13*s23 - 2*eprot*mDel*pow(mp,2)*s13*s23 + 2*mDel*mLamC*pow(mp,2)*s13*s23 + 4*epi*eprot*pow(ppp,2)*s13*s23 + 2*pow(eprot,2)*pow(ppp,2)*s13*s23 - 6*eprot*mDel*pow(ppp,2)*s13*s23 - 4*eprot*mLamC*pow(ppp,2)*s13*s23 - 4*eprot*mp*pow(ppp,2)*s13*s23 - 2*mDel*mp*pow(ppp,2)*s13*s23 + 2*pow(mp,2)*pow(ppp,2)*s13*s23 + 2*pow(ppp,4)*s13*s23 + kkk*ppp*(-8*pow(eprot,6) + 4*pow(kkk,2)*mDel*pow(mKst,2)*mp + 4*pow(eprot,5)*(3*mDel + 2*(mLamC + mp)) + 3*pow(kkk,2)*mDel*mLamC*pow(ppp,2) + 4*mDel*pow(mKst,2)*mLamC*pow(ppp,2) + 3*pow(kkk,2)*mDel*mp*pow(ppp,2) + 8*mDel*pow(mKst,2)*mp*pow(ppp,2) + 4*mDel*mLamC*pow(ppp,4) + 4*mDel*mp*pow(ppp,4) - 8*pow(epi,3)*(2*pow(eprot,3) + pow(mKst,2)*mp - pow(eprot,2)*(4*mLamC + 3*mp) + eprot*(-3*pow(mKst,2) + 2*pow(mLamC,2) + 4*mLamC*mp - 2*pow(ppp,2)) + mLamC*(-(mLamC*mp) + pow(ppp,2))) + 4*mDel*pow(mKst,2)*mp*s13 - 6*pow(mKst,2)*pow(mp,2)*s13 - 4*mDel*mLamC*pow(mp,2)*s13 - 6*pow(mKst,2)*pow(ppp,2)*s13 + 4*mDel*mp*pow(ppp,2)*s13 - 4*pow(mp,2)*pow(ppp,2)*s13 - 4*pow(ppp,4)*s13 - 2*pow(eprot,3)*(4*pow(mKst,2)*(mLamC + 2*mp) + mDel*(11*pow(mKst,2) - 4*mLamC*mp + 2*pow(mp,2) + 12*pow(ppp,2) + 6*s13 - 3*s23) + 4*(mLamC + mp)*(2*pow(ppp,2) + s13 - s23)) + 4*pow(eprot,4)*(pow(mKst,2) - 3*mDel*mLamC - 2*mDel*mp - 2*mLamC*mp + 4*pow(ppp,2) + 2*s13 - s23) - 4*mDel*mLamC*pow(ppp,2)*s23 - 4*mDel*mp*pow(ppp,2)*s23 + 2*pow(mp,2)*s13*s23 + 2*pow(ppp,2)*s13*s23 + 2*pow(eprot,2)*(4*pow(kkk,2)*pow(mKst,2) + 2*pow(mKst,2)*mLamC*mp - 2*pow(mKst,2)*pow(ppp,2) + 4*mLamC*mp*pow(ppp,2) - 4*pow(ppp,4) + 3*pow(mKst,2)*s13 + 4*mLamC*mp*s13 - 2*pow(ppp,2)*s13 + 2*mDel*(pow(mKst,2)*mLamC + mp*(pow(ppp,2) + 2*s13 - s23) + mLamC*(pow(mp,2) + 2*pow(ppp,2) + 3*s13 - s23)) - 2*mLamC*mp*s23 + 2*pow(ppp,2)*s23 - s13*s23) + 2*eprot*(4*pow(mKst,2)*mLamC*pow(ppp,2) + 8*pow(mKst,2)*mp*pow(ppp,2) + 4*mLamC*pow(ppp,4) + 4*mp*pow(ppp,4) + pow(kkk,2)*(2*mDel*pow(mKst,2) + 4*pow(mKst,2)*mp + 3*(mLamC + mp)*pow(ppp,2)) + 2*pow(mKst,2)*mLamC*s13 + 6*pow(mKst,2)*mp*s13 + 4*mLamC*pow(ppp,2)*s13 + 4*mp*pow(ppp,2)*s13 + mDel*pow(mKst,2)*(-2*mLamC*mp + 3*pow(mp,2) + 11*pow(ppp,2) + 6*s13) - mDel*(2*mLamC*mp - pow(mp,2) - 3*pow(ppp,2))*(2*pow(ppp,2) + 2*s13 - s23) - 4*mLamC*pow(ppp,2)*s23 - 4*mp*pow(ppp,2)*s23 - 2*mLamC*s13*s23 - 2*mp*s13*s23) - 4*pow(epi,2)*(10*pow(eprot,4) - pow(mKst,2)*mLamC*mp - 2*pow(eprot,3)*(3*mDel + 9*mLamC + 7*mp) + 7*pow(mKst,2)*pow(ppp,2) - 4*pow(mLamC,2)*pow(ppp,2) - 6*mLamC*mp*pow(ppp,2) + 2*pow(ppp,4) + mDel*(-(pow(mKst,2)*mp) + 2*pow(mLamC,2)*mp - 2*mLamC*pow(mp,2) - 3*mLamC*pow(ppp,2) + mp*pow(ppp,2)) + mLamC*mp*s23 - pow(ppp,2)*s23 + pow(eprot,2)*(-13*pow(mKst,2) + 8*mDel*mLamC + 8*pow(mLamC,2) + 4*mDel*mp + 18*mLamC*mp - 12*pow(ppp,2) + s23) + eprot*(-4*pow(mLamC,2)*mp + 2*pow(mKst,2)*(mLamC + 4*mp) + 12*mLamC*pow(ppp,2) + 8*mp*pow(ppp,2) + mDel*(5*pow(mKst,2) - 2*pow(mLamC,2) - 6*mLamC*mp + 2*pow(mp,2) + 6*pow(ppp,2)) - 2*mLamC*s23 - 2*mp*s23)) - 2*epi*(16*pow(eprot,5) - 4*pow(kkk,2)*pow(mKst,2)*mp + 2*mDel*pow(mKst,2)*mLamC*mp - 3*mDel*pow(mKst,2)*pow(mp,2) - 2*pow(eprot,4)*(9*mDel + 12*mLamC + 10*mp) - 5*mDel*pow(mKst,2)*pow(ppp,2) - 3*pow(kkk,2)*mLamC*pow(ppp,2) - 4*pow(mKst,2)*mLamC*pow(ppp,2) - 4*mDel*pow(mLamC,2)*pow(ppp,2) - 3*pow(kkk,2)*mp*pow(ppp,2) - 8*pow(mKst,2)*mp*pow(ppp,2) - 2*mDel*pow(mp,2)*pow(ppp,2) - 6*mDel*pow(ppp,4) - 4*mLamC*pow(ppp,4) - 4*mp*pow(ppp,4) + 2*mLamC*pow(mp,2)*s13 + 2*mLamC*pow(ppp,2)*s13 - 2*pow(eprot,3)*(8*pow(mKst,2) - 11*mDel*mLamC - 4*pow(mLamC,2) - 6*mDel*mp - 12*mLamC*mp + 12*pow(ppp,2) + s13 - 2*s23) - 2*mDel*mLamC*mp*s23 + mDel*pow(mp,2)*s23 + 3*mDel*pow(ppp,2)*s23 + 4*mLamC*pow(ppp,2)*s23 + 4*mp*pow(ppp,2)*s23 + pow(eprot,2)*(-4*pow(mLamC,2)*mp + 4*pow(mKst,2)*(2*mLamC + 5*mp) + 28*mLamC*pow(ppp,2) + 24*mp*pow(ppp,2) + 6*mLamC*s13 + 8*mp*s13 + mDel*(21*pow(mKst,2) - 4*pow(mLamC,2) - 16*mLamC*mp + 6*pow(mp,2) + 24*pow(ppp,2) - 3*s23) - 8*mLamC*s23 - 8*mp*s23) - 2*eprot*(2*pow(kkk,2)*pow(mKst,2) + 2*pow(mKst,2)*mLamC*mp - 8*pow(mKst,2)*pow(ppp,2) + 4*pow(mLamC,2)*pow(ppp,2) + 8*mLamC*mp*pow(ppp,2) - 4*pow(ppp,4) - 4*pow(mKst,2)*s13 + 2*pow(mLamC,2)*s13 + 4*mLamC*mp*s13 + pow(mp,2)*s13 - pow(ppp,2)*s13 - 2*mLamC*mp*s23 + 2*pow(ppp,2)*s23 + mDel*(-2*pow(mLamC,2)*mp + pow(mKst,2)*(mLamC + mp) + mLamC*(3*pow(mp,2) + 3*pow(ppp,2) - s23) - mp*(2*pow(ppp,2) + s23)))))*cos(psi) + pow(kkk,2)*pow(ppp,2)*(4*pow(eprot,4) + mDel*pow(mKst,2)*mLamC + 3*mDel*pow(mKst,2)*mp - 2*pow(eprot,3)*(3*mDel + 4*(mLamC + mp)) + 4*mDel*mLamC*pow(ppp,2) + 4*mDel*mp*pow(ppp,2) + 4*pow(epi,2)*(pow(eprot,2) - 2*pow(mKst,2) + pow(mLamC,2) + 2*mLamC*mp - 3*eprot*(mLamC + mp) - pow(ppp,2)) - 2*pow(mKst,2)*s13 - 2*pow(mp,2)*s13 - 2*pow(ppp,2)*s13 + 2*pow(eprot,2)*(2*mLamC*mp + 2*mDel*(mLamC + mp) - 2*pow(ppp,2) + s13) + 2*eprot*(pow(mKst,2)*(mLamC + 3*mp) + mDel*(4*pow(mKst,2) - 2*mLamC*mp + pow(mp,2) + 3*pow(ppp,2)) + (mLamC + mp)*(4*pow(ppp,2) + 2*s13 - s23)) - mDel*mLamC*s23 - mDel*mp*s23 + 2*epi*(4*pow(eprot,3) + pow(mKst,2)*mLamC + 3*pow(mKst,2)*mp - pow(eprot,2)*(3*mDel + 10*(mLamC + mp)) + 4*mLamC*pow(ppp,2) + 4*mp*pow(ppp,2) + eprot*(-4*pow(mKst,2) + mDel*mLamC + 2*pow(mLamC,2) + mDel*mp + 6*mLamC*mp - 4*pow(ppp,2)) + mDel*(2*pow(mKst,2) + pow(mLamC,2) - mLamC*mp + pow(mp,2) + 3*pow(ppp,2)) - mLamC*s23 - mp*s23))*cos(2*psi) + 2*epi*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) + 2*eprot*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) + pow(kkk,3)*mDel*mLamC*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) + 2*eprot*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) + pow(kkk,3)*mDel*mp*pow(ppp,3)*cos(3*psi)))/(3.*pow(mKst,2)*s13));
	    	break;
	    case FormulaParam::ReB2A: //f20
	    	return ReBWTwoResonances(s23,mKst,GKst, s13, mDel, GDel)*((-2*pow(mLamC,3)*(2*epi*(pow(eprot,2) - pow(mKst,2) - 2*eprot*mLamC + pow(mLamC,2)) - (eprot - mLamC)*(pow(mKst,2) - s23) - 2*kkk*(eprot - mLamC)*ppp*cos(psi))*(4*pow(epi,3)*pow(eprot,2) + 12*pow(epi,2)*pow(eprot,3) + 12*epi*pow(eprot,4) + 4*pow(eprot,5) - 6*pow(epi,2)*pow(eprot,2)*mDel - 12*epi*pow(eprot,3)*mDel - 6*pow(eprot,4)*mDel - 4*pow(epi,3)*eprot*mp - 12*pow(epi,2)*pow(eprot,2)*mp - 12*epi*pow(eprot,3)*mp - 4*pow(eprot,4)*mp + 4*pow(epi,2)*eprot*mDel*mp + 8*epi*pow(eprot,2)*mDel*mp + 4*pow(eprot,3)*mDel*mp + 2*pow(epi,2)*mDel*pow(mp,2) + 4*epi*eprot*mDel*pow(mp,2) + 2*pow(eprot,2)*mDel*pow(mp,2) - 8*pow(epi,2)*eprot*pow(ppp,2) - 16*epi*pow(eprot,2)*pow(ppp,2) - 8*pow(eprot,3)*pow(ppp,2) + 2*epi*pow(kkk,2)*pow(ppp,2) + 2*eprot*pow(kkk,2)*pow(ppp,2) + 4*epi*eprot*mDel*pow(ppp,2) + 4*pow(eprot,2)*mDel*pow(ppp,2) + pow(kkk,2)*mDel*pow(ppp,2) + 4*pow(epi,2)*mp*pow(ppp,2) + 8*epi*eprot*mp*pow(ppp,2) + 4*pow(eprot,2)*mp*pow(ppp,2) - 4*epi*mDel*mp*pow(ppp,2) - 4*eprot*mDel*mp*pow(ppp,2) + 4*epi*pow(ppp,4) + 4*eprot*pow(ppp,4) + 2*mDel*pow(ppp,4) - 4*epi*pow(eprot,2)*s13 - 4*pow(eprot,3)*s13 + 6*pow(eprot,2)*mDel*s13 + 4*epi*eprot*mp*s13 + 4*pow(eprot,2)*mp*s13 - 4*eprot*mDel*mp*s13 - 2*mDel*pow(mp,2)*s13 + 4*eprot*pow(ppp,2)*s13 + 4*kkk*ppp*(-2*pow(eprot,3) + pow(epi,2)*(-2*eprot + mp) + pow(eprot,2)*(mDel + mp) + mDel*pow(ppp,2) + epi*(-4*pow(eprot,2) - mDel*mp + eprot*(mDel + 2*mp) + 2*pow(ppp,2)) + eprot*(-(mDel*mp) + 2*pow(ppp,2) + s13))*cos(psi) + pow(kkk,2)*(2*epi + 2*eprot + mDel)*pow(ppp,2)*cos(2*psi)))/(3.*pow(mKst,2)*s13));
	    	break;
		default :
			cout << "Error" << endl;
			return 0;
			break;
    }

    return 0;
}

vector <double> IntegrateF_x_i(int Nmax = 100000,double relError = 0.0001)
{
	/*
		Main function to compute intF_x, the integrals of each functions of the cut according to parameters
	*/
	FunctionF_x_i integratedFunction;
	ROOT::Math::AdaptiveIntegratorMultiDim myIntegrator;
	myIntegrator.SetFunction(integratedFunction);
	double sij_min[2] = {(m1 + m2)*(m1 + m2),(m2 + m3)*(m2 + m3)};
	double sij_max[2] = {(M-m3)*(M-m3),(M-m1)*(M-m1)};
	vector <double> intF_x;
	myIntegrator.SetRelTolerance(relError);
	ROOT::Math::IntegratorMultiDimOptions newOption = myIntegrator.Options();
	newOption.SetNCalls(Nmax);
	myIntegrator.SetOptions(newOption);
	cout << "NCalls : " << myIntegrator.Options().NCalls()<< endl;

	
    for (FormulaParam::FormulaParam numParam = FormulaParam::A2; numParam < FormulaParam::NUM_FINAL_PARAM; numParam++){
        integratedFunction.SetParam(numParam);
        intF_x.push_back(myIntegrator.Integral(sij_min,sij_max));
		intF_x.push_back(myIntegrator.Error());
    }
	return intF_x;
}