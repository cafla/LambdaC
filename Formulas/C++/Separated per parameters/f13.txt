(-2*pow(mLamC,2)*(-8*pow(epi,4)*pow(eprot,4) + 8*pow(epi,4)*pow(eprot,2)*pow(mKst,2) + 4*pow(epi,3)*pow(eprot,3)*pow(mKst,2) + 8*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(mKst,2) - 12*pow(epi,3)*pow(eprot,4)*mLam + 12*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mLam + 6*pow(epi,2)*pow(eprot,3)*pow(mKst,2)*mLam - 4*epi*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mLam + 16*pow(epi,4)*pow(eprot,3)*mLamC + 24*pow(epi,3)*pow(eprot,4)*mLamC - 28*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mLamC - 12*pow(epi,2)*pow(eprot,3)*pow(mKst,2)*mLamC - 16*epi*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mLamC + 24*pow(epi,3)*pow(eprot,3)*mLam*mLamC + 24*pow(epi,2)*pow(eprot,4)*mLam*mLamC - 30*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLam*mLamC - 12*epi*pow(eprot,3)*pow(mKst,2)*mLam*mLamC + 4*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*mLam*mLamC - 8*pow(epi,4)*pow(eprot,2)*pow(mLamC,2) - 48*pow(epi,3)*pow(eprot,3)*pow(mLamC,2) - 24*pow(epi,2)*pow(eprot,4)*pow(mLamC,2) + 36*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2) + 12*epi*pow(eprot,3)*pow(mKst,2)*pow(mLamC,2) + 8*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*pow(mLamC,2) - 12*pow(epi,3)*pow(eprot,2)*mLam*pow(mLamC,2) - 48*pow(epi,2)*pow(eprot,3)*mLam*pow(mLamC,2) - 12*epi*pow(eprot,4)*mLam*pow(mLamC,2) + 24*epi*pow(eprot,2)*pow(mKst,2)*mLam*pow(mLamC,2) + 6*pow(eprot,3)*pow(mKst,2)*mLam*pow(mLamC,2) + 24*pow(epi,3)*pow(eprot,2)*pow(mLamC,3) + 48*pow(epi,2)*pow(eprot,3)*pow(mLamC,3) + 8*epi*pow(eprot,4)*pow(mLamC,3) - 20*epi*pow(eprot,2)*pow(mKst,2)*pow(mLamC,3) - 4*pow(eprot,3)*pow(mKst,2)*pow(mLamC,3) + 24*pow(epi,2)*pow(eprot,2)*mLam*pow(mLamC,3) + 24*epi*pow(eprot,3)*mLam*pow(mLamC,3) - 6*pow(eprot,2)*pow(mKst,2)*mLam*pow(mLamC,3) - 24*pow(epi,2)*pow(eprot,2)*pow(mLamC,4) - 16*epi*pow(eprot,3)*pow(mLamC,4) + 4*pow(eprot,2)*pow(mKst,2)*pow(mLamC,4) - 12*epi*pow(eprot,2)*mLam*pow(mLamC,4) + 8*epi*pow(eprot,2)*pow(mLamC,5) - 8*pow(epi,4)*pow(eprot,3)*mp + 8*pow(epi,4)*eprot*pow(mKst,2)*mp + 4*pow(epi,3)*pow(eprot,2)*pow(mKst,2)*mp - 8*pow(epi,2)*eprot*pow(kkk,2)*pow(mKst,2)*mp - 8*pow(epi,3)*pow(eprot,3)*mLam*mp + 8*pow(epi,3)*eprot*pow(mKst,2)*mLam*mp + 4*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLam*mp + 16*pow(epi,4)*pow(eprot,2)*mLamC*mp + 24*pow(epi,3)*pow(eprot,3)*mLamC*mp - 28*pow(epi,3)*eprot*pow(mKst,2)*mLamC*mp - 12*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*mLamC*mp + 16*epi*eprot*pow(kkk,2)*pow(mKst,2)*mLamC*mp + 16*pow(epi,3)*pow(eprot,2)*mLam*mLamC*mp + 16*pow(epi,2)*pow(eprot,3)*mLam*mLamC*mp - 20*pow(epi,2)*eprot*pow(mKst,2)*mLam*mLamC*mp - 8*epi*pow(eprot,2)*pow(mKst,2)*mLam*mLamC*mp - 8*pow(epi,4)*eprot*pow(mLamC,2)*mp - 48*pow(epi,3)*pow(eprot,2)*pow(mLamC,2)*mp - 24*pow(epi,2)*pow(eprot,3)*pow(mLamC,2)*mp + 36*pow(epi,2)*eprot*pow(mKst,2)*pow(mLamC,2)*mp + 12*epi*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2)*mp - 8*eprot*pow(kkk,2)*pow(mKst,2)*pow(mLamC,2)*mp - 8*pow(epi,3)*eprot*mLam*pow(mLamC,2)*mp - 32*pow(epi,2)*pow(eprot,2)*mLam*pow(mLamC,2)*mp - 8*epi*pow(eprot,3)*mLam*pow(mLamC,2)*mp + 16*epi*eprot*pow(mKst,2)*mLam*pow(mLamC,2)*mp + 4*pow(eprot,2)*pow(mKst,2)*mLam*pow(mLamC,2)*mp + 24*pow(epi,3)*eprot*pow(mLamC,3)*mp + 48*pow(epi,2)*pow(eprot,2)*pow(mLamC,3)*mp + 8*epi*pow(eprot,3)*pow(mLamC,3)*mp - 20*epi*eprot*pow(mKst,2)*pow(mLamC,3)*mp - 4*pow(eprot,2)*pow(mKst,2)*pow(mLamC,3)*mp + 16*pow(epi,2)*eprot*mLam*pow(mLamC,3)*mp + 16*epi*pow(eprot,2)*mLam*pow(mLamC,3)*mp - 4*eprot*pow(mKst,2)*mLam*pow(mLamC,3)*mp - 24*pow(epi,2)*eprot*pow(mLamC,4)*mp - 16*epi*pow(eprot,2)*pow(mLamC,4)*mp + 4*eprot*pow(mKst,2)*pow(mLamC,4)*mp - 8*epi*eprot*mLam*pow(mLamC,4)*mp + 8*epi*eprot*pow(mLamC,5)*mp + 4*pow(epi,3)*pow(eprot,2)*mLam*pow(mp,2) - 4*pow(epi,3)*pow(mKst,2)*mLam*pow(mp,2) - 2*pow(epi,2)*eprot*pow(mKst,2)*mLam*pow(mp,2) + 4*epi*pow(kkk,2)*pow(mKst,2)*mLam*pow(mp,2) - 8*pow(epi,3)*eprot*mLam*mLamC*pow(mp,2) - 8*pow(epi,2)*pow(eprot,2)*mLam*mLamC*pow(mp,2) + 10*pow(epi,2)*pow(mKst,2)*mLam*mLamC*pow(mp,2) + 4*epi*eprot*pow(mKst,2)*mLam*mLamC*pow(mp,2) - 4*pow(kkk,2)*pow(mKst,2)*mLam*mLamC*pow(mp,2) + 4*pow(epi,3)*mLam*pow(mLamC,2)*pow(mp,2) + 16*pow(epi,2)*eprot*mLam*pow(mLamC,2)*pow(mp,2) + 4*epi*pow(eprot,2)*mLam*pow(mLamC,2)*pow(mp,2) - 8*epi*pow(mKst,2)*mLam*pow(mLamC,2)*pow(mp,2) - 2*eprot*pow(mKst,2)*mLam*pow(mLamC,2)*pow(mp,2) - 8*pow(epi,2)*mLam*pow(mLamC,3)*pow(mp,2) - 8*epi*eprot*mLam*pow(mLamC,3)*pow(mp,2) + 2*pow(mKst,2)*mLam*pow(mLamC,3)*pow(mp,2) + 4*epi*mLam*pow(mLamC,4)*pow(mp,2) + 8*pow(epi,4)*pow(eprot,2)*pow(ppp,2) - 4*pow(epi,2)*pow(eprot,2)*pow(kkk,2)*pow(ppp,2) - 4*pow(epi,3)*eprot*pow(mKst,2)*pow(ppp,2) + 8*pow(epi,2)*pow(kkk,2)*pow(mKst,2)*pow(ppp,2) + 12*pow(epi,3)*pow(eprot,2)*mLam*pow(ppp,2) - 6*epi*pow(eprot,2)*pow(kkk,2)*mLam*pow(ppp,2) - 6*pow(epi,2)*eprot*pow(mKst,2)*mLam*pow(ppp,2) + 4*epi*pow(kkk,2)*pow(mKst,2)*mLam*pow(ppp,2) - 8*pow(epi,4)*eprot*mLamC*pow(ppp,2) - 24*pow(epi,3)*pow(eprot,2)*mLamC*pow(ppp,2) + 12*pow(epi,2)*eprot*pow(kkk,2)*mLamC*pow(ppp,2) + 8*epi*pow(eprot,2)*pow(kkk,2)*mLamC*pow(ppp,2) + 12*pow(epi,2)*eprot*pow(mKst,2)*mLamC*pow(ppp,2) - 14*epi*pow(kkk,2)*pow(mKst,2)*mLamC*pow(ppp,2) - 12*pow(epi,3)*eprot*mLam*mLamC*pow(ppp,2) - 24*pow(epi,2)*pow(eprot,2)*mLam*mLamC*pow(ppp,2) + 2*epi*eprot*pow(kkk,2)*mLam*mLamC*pow(ppp,2) + 6*pow(eprot,2)*pow(kkk,2)*mLam*mLamC*pow(ppp,2) + 12*epi*eprot*pow(mKst,2)*mLam*mLamC*pow(ppp,2) - 5*pow(kkk,2)*pow(mKst,2)*mLam*mLamC*pow(ppp,2) + 24*pow(epi,3)*eprot*pow(mLamC,2)*pow(ppp,2) + 24*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*pow(ppp,2) - 4*pow(epi,2)*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 20*epi*eprot*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 4*pow(eprot,2)*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) - 12*epi*eprot*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) + 6*pow(kkk,2)*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) + 24*pow(epi,2)*eprot*mLam*pow(mLamC,2)*pow(ppp,2) + 12*epi*pow(eprot,2)*mLam*pow(mLamC,2)*pow(ppp,2) + 2*epi*pow(kkk,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 4*eprot*pow(kkk,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 6*eprot*pow(mKst,2)*mLam*pow(mLamC,2)*pow(ppp,2) - 24*pow(epi,2)*eprot*pow(mLamC,3)*pow(ppp,2) - 8*epi*pow(eprot,2)*pow(mLamC,3)*pow(ppp,2) + 4*epi*pow(kkk,2)*pow(mLamC,3)*pow(ppp,2) + 8*eprot*pow(kkk,2)*pow(mLamC,3)*pow(ppp,2) + 4*eprot*pow(mKst,2)*pow(mLamC,3)*pow(ppp,2) - 12*epi*eprot*mLam*pow(mLamC,3)*pow(ppp,2) + 8*epi*eprot*pow(mLamC,4)*pow(ppp,2) - 12*pow(epi,2)*eprot*pow(kkk,2)*mp*pow(ppp,2) + 2*epi*pow(kkk,2)*pow(mKst,2)*mp*pow(ppp,2) - 4*pow(epi,3)*eprot*mLam*mp*pow(ppp,2) - 2*epi*eprot*pow(kkk,2)*mLam*mp*pow(ppp,2) + 2*pow(epi,2)*pow(mKst,2)*mLam*mp*pow(ppp,2) - pow(kkk,2)*pow(mKst,2)*mLam*mp*pow(ppp,2) + 8*pow(epi,2)*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 20*epi*eprot*pow(kkk,2)*mLamC*mp*pow(ppp,2) - 2*pow(kkk,2)*pow(mKst,2)*mLamC*mp*pow(ppp,2) + 4*pow(epi,3)*mLam*mLamC*mp*pow(ppp,2) + 8*pow(epi,2)*eprot*mLam*mLamC*mp*pow(ppp,2) + 2*epi*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2) + 4*eprot*pow(kkk,2)*mLam*mLamC*mp*pow(ppp,2) - 4*epi*pow(mKst,2)*mLam*mLamC*mp*pow(ppp,2) - 12*epi*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) - 8*eprot*pow(kkk,2)*pow(mLamC,2)*mp*pow(ppp,2) - 8*pow(epi,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 4*epi*eprot*mLam*pow(mLamC,2)*mp*pow(ppp,2) - 4*pow(kkk,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 2*pow(mKst,2)*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 4*pow(kkk,2)*pow(mLamC,3)*mp*pow(ppp,2) + 4*epi*mLam*pow(mLamC,3)*mp*pow(ppp,2) + 2*epi*pow(kkk,2)*mLam*pow(mp,2)*pow(ppp,2) - 2*pow(kkk,2)*mLam*mLamC*pow(mp,2)*pow(ppp,2) + 4*pow(epi,2)*pow(kkk,2)*pow(ppp,4) + 6*epi*pow(kkk,2)*mLam*pow(ppp,4) - 8*epi*pow(kkk,2)*mLamC*pow(ppp,4) - 6*pow(kkk,2)*mLam*mLamC*pow(ppp,4) + 4*pow(kkk,2)*pow(mLamC,2)*pow(ppp,4) + 8*pow(epi,2)*pow(eprot,4)*s12 - 8*pow(epi,2)*pow(eprot,2)*pow(mKst,2)*s12 - 4*epi*pow(eprot,3)*pow(mKst,2)*s12 - 12*pow(eprot,2)*pow(kkk,2)*pow(mKst,2)*s12 + 12*epi*pow(eprot,4)*mLam*s12 - 12*epi*pow(eprot,2)*pow(mKst,2)*mLam*s12 - 6*pow(eprot,3)*pow(mKst,2)*mLam*s12 - 16*pow(epi,2)*pow(eprot,3)*mLamC*s12 - 8*epi*pow(eprot,4)*mLamC*s12 + 12*epi*pow(eprot,2)*pow(mKst,2)*mLamC*s12 + 4*pow(eprot,3)*pow(mKst,2)*mLamC*s12 - 24*epi*pow(eprot,3)*mLam*mLamC*s12 + 6*pow(eprot,2)*pow(mKst,2)*mLam*mLamC*s12 + 8*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*s12 + 16*epi*pow(eprot,3)*pow(mLamC,2)*s12 - 4*pow(eprot,2)*pow(mKst,2)*pow(mLamC,2)*s12 + 12*epi*pow(eprot,2)*mLam*pow(mLamC,2)*s12 - 8*epi*pow(eprot,2)*pow(mLamC,3)*s12 + 8*pow(epi,2)*pow(eprot,3)*mp*s12 - 8*pow(epi,2)*eprot*pow(mKst,2)*mp*s12 - 4*epi*pow(eprot,2)*pow(mKst,2)*mp*s12 + 8*eprot*pow(kkk,2)*pow(mKst,2)*mp*s12 + 8*epi*pow(eprot,3)*mLam*mp*s12 - 8*epi*eprot*pow(mKst,2)*mLam*mp*s12 - 4*pow(eprot,2)*pow(mKst,2)*mLam*mp*s12 - 16*pow(epi,2)*pow(eprot,2)*mLamC*mp*s12 - 8*epi*pow(eprot,3)*mLamC*mp*s12 + 12*epi*eprot*pow(mKst,2)*mLamC*mp*s12 + 4*pow(eprot,2)*pow(mKst,2)*mLamC*mp*s12 - 16*epi*pow(eprot,2)*mLam*mLamC*mp*s12 + 4*eprot*pow(mKst,2)*mLam*mLamC*mp*s12 + 8*pow(epi,2)*eprot*pow(mLamC,2)*mp*s12 + 16*epi*pow(eprot,2)*pow(mLamC,2)*mp*s12 - 4*eprot*pow(mKst,2)*pow(mLamC,2)*mp*s12 + 8*epi*eprot*mLam*pow(mLamC,2)*mp*s12 - 8*epi*eprot*pow(mLamC,3)*mp*s12 + 4*pow(kkk,2)*pow(mKst,2)*pow(mp,2)*s12 - 4*epi*pow(eprot,2)*mLam*pow(mp,2)*s12 + 4*epi*pow(mKst,2)*mLam*pow(mp,2)*s12 + 2*eprot*pow(mKst,2)*mLam*pow(mp,2)*s12 + 8*epi*eprot*mLam*mLamC*pow(mp,2)*s12 - 2*pow(mKst,2)*mLam*mLamC*pow(mp,2)*s12 - 4*epi*mLam*pow(mLamC,2)*pow(mp,2)*s12 - 8*pow(epi,2)*pow(eprot,2)*pow(ppp,2)*s12 - 2*pow(eprot,2)*pow(kkk,2)*pow(ppp,2)*s12 + 4*epi*eprot*pow(mKst,2)*pow(ppp,2)*s12 + 2*pow(kkk,2)*pow(mKst,2)*pow(ppp,2)*s12 - 12*epi*pow(eprot,2)*mLam*pow(ppp,2)*s12 + 6*eprot*pow(mKst,2)*mLam*pow(ppp,2)*s12 + 8*pow(epi,2)*eprot*mLamC*pow(ppp,2)*s12 + 8*epi*pow(eprot,2)*mLamC*pow(ppp,2)*s12 - 4*eprot*pow(kkk,2)*mLamC*pow(ppp,2)*s12 - 4*eprot*pow(mKst,2)*mLamC*pow(ppp,2)*s12 + 12*epi*eprot*mLam*mLamC*pow(ppp,2)*s12 - 8*epi*eprot*pow(mLamC,2)*pow(ppp,2)*s12 + 4*eprot*pow(kkk,2)*mp*pow(ppp,2)*s12 + 4*epi*eprot*mLam*mp*pow(ppp,2)*s12 - 2*pow(mKst,2)*mLam*mp*pow(ppp,2)*s12 - 4*epi*mLam*mLamC*mp*pow(ppp,2)*s12 + 2*pow(kkk,2)*pow(mp,2)*pow(ppp,2)*s12 + 2*pow(kkk,2)*pow(ppp,4)*s12 - 4*pow(epi,3)*pow(eprot,3)*s23 - 6*pow(epi,2)*pow(eprot,3)*mLam*s23 + 4*pow(epi,3)*pow(eprot,2)*mLamC*s23 + 12*pow(epi,2)*pow(eprot,3)*mLamC*s23 + 6*pow(epi,2)*pow(eprot,2)*mLam*mLamC*s23 + 12*epi*pow(eprot,3)*mLam*mLamC*s23 - 12*pow(epi,2)*pow(eprot,2)*pow(mLamC,2)*s23 - 12*epi*pow(eprot,3)*pow(mLamC,2)*s23 - 12*epi*pow(eprot,2)*mLam*pow(mLamC,2)*s23 - 6*pow(eprot,3)*mLam*pow(mLamC,2)*s23 + 12*epi*pow(eprot,2)*pow(mLamC,3)*s23 + 4*pow(eprot,3)*pow(mLamC,3)*s23 + 6*pow(eprot,2)*mLam*pow(mLamC,3)*s23 - 4*pow(eprot,2)*pow(mLamC,4)*s23 - 4*pow(epi,3)*pow(eprot,2)*mp*s23 - 4*pow(epi,2)*pow(eprot,2)*mLam*mp*s23 + 4*pow(epi,3)*eprot*mLamC*mp*s23 + 12*pow(epi,2)*pow(eprot,2)*mLamC*mp*s23 + 4*pow(epi,2)*eprot*mLam*mLamC*mp*s23 + 8*epi*pow(eprot,2)*mLam*mLamC*mp*s23 - 12*pow(epi,2)*eprot*pow(mLamC,2)*mp*s23 - 12*epi*pow(eprot,2)*pow(mLamC,2)*mp*s23 - 8*epi*eprot*mLam*pow(mLamC,2)*mp*s23 - 4*pow(eprot,2)*mLam*pow(mLamC,2)*mp*s23 + 12*epi*eprot*pow(mLamC,3)*mp*s23 + 4*pow(eprot,2)*pow(mLamC,3)*mp*s23 + 4*eprot*mLam*pow(mLamC,3)*mp*s23 - 4*eprot*pow(mLamC,4)*mp*s23 + 2*pow(epi,2)*eprot*mLam*pow(mp,2)*s23 - 2*pow(epi,2)*mLam*mLamC*pow(mp,2)*s23 - 4*epi*eprot*mLam*mLamC*pow(mp,2)*s23 + 4*epi*mLam*pow(mLamC,2)*pow(mp,2)*s23 + 2*eprot*mLam*pow(mLamC,2)*pow(mp,2)*s23 - 2*mLam*pow(mLamC,3)*pow(mp,2)*s23 + 4*pow(epi,3)*eprot*pow(ppp,2)*s23 + 6*pow(epi,2)*eprot*mLam*pow(ppp,2)*s23 - 12*pow(epi,2)*eprot*mLamC*pow(ppp,2)*s23 + 2*epi*pow(kkk,2)*mLamC*pow(ppp,2)*s23 - 12*epi*eprot*mLam*mLamC*pow(ppp,2)*s23 - pow(kkk,2)*mLam*mLamC*pow(ppp,2)*s23 + 12*epi*eprot*pow(mLamC,2)*pow(ppp,2)*s23 - 2*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2)*s23 + 6*eprot*mLam*pow(mLamC,2)*pow(ppp,2)*s23 - 4*eprot*pow(mLamC,3)*pow(ppp,2)*s23 - 2*epi*pow(kkk,2)*mp*pow(ppp,2)*s23 - 2*pow(epi,2)*mLam*mp*pow(ppp,2)*s23 + pow(kkk,2)*mLam*mp*pow(ppp,2)*s23 + 2*pow(kkk,2)*mLamC*mp*pow(ppp,2)*s23 + 4*epi*mLam*mLamC*mp*pow(ppp,2)*s23 - 2*mLam*pow(mLamC,2)*mp*pow(ppp,2)*s23 + 4*epi*pow(eprot,3)*s12*s23 + 6*pow(eprot,3)*mLam*s12*s23 - 4*epi*pow(eprot,2)*mLamC*s12*s23 - 4*pow(eprot,3)*mLamC*s12*s23 - 6*pow(eprot,2)*mLam*mLamC*s12*s23 + 4*pow(eprot,2)*pow(mLamC,2)*s12*s23 + 4*epi*pow(eprot,2)*mp*s12*s23 + 4*pow(eprot,2)*mLam*mp*s12*s23 - 4*epi*eprot*mLamC*mp*s12*s23 - 4*pow(eprot,2)*mLamC*mp*s12*s23 - 4*eprot*mLam*mLamC*mp*s12*s23 + 4*eprot*pow(mLamC,2)*mp*s12*s23 - 2*eprot*mLam*pow(mp,2)*s12*s23 + 2*mLam*mLamC*pow(mp,2)*s12*s23 - 4*epi*eprot*pow(ppp,2)*s12*s23 - 6*eprot*mLam*pow(ppp,2)*s12*s23 + 4*eprot*mLamC*pow(ppp,2)*s12*s23 + 2*mLam*mp*pow(ppp,2)*s12*s23 + kkk*ppp*(-4*pow(kkk,2)*pow(mKst,2)*mLam*mp - 8*pow(kkk,2)*pow(mKst,2)*mLamC*mp + 4*pow(mKst,2)*pow(mLamC,3)*mp - 2*pow(mKst,2)*mLam*mLamC*pow(mp,2) + 4*mLam*pow(mLamC,3)*pow(mp,2) + 3*pow(kkk,2)*mLam*mLamC*pow(ppp,2) - 6*pow(mKst,2)*mLam*mLamC*pow(ppp,2) + 6*pow(kkk,2)*pow(mLamC,2)*pow(ppp,2) + 4*pow(mKst,2)*pow(mLamC,2)*pow(ppp,2) - 3*pow(kkk,2)*mLam*mp*pow(ppp,2) - 6*pow(kkk,2)*mLamC*mp*pow(ppp,2) + 4*mLam*pow(mLamC,2)*mp*pow(ppp,2) + 8*pow(epi,3)*(2*pow(eprot,3) - pow(mKst,2)*mp + pow(eprot,2)*(-4*mLamC + 3*mp) + mLamC*(mLamC*mp + pow(ppp,2)) - eprot*(3*pow(mKst,2) - 2*pow(mLamC,2) + 4*mLamC*mp + 2*pow(ppp,2))) + 4*pow(eprot,3)*(3*mLam - 2*mLamC)*(pow(mLamC,2) - s12) - 4*pow(mKst,2)*mLam*mp*s12 + 2*pow(mKst,2)*pow(mp,2)*s12 - 4*mLam*mLamC*pow(mp,2)*s12 + 2*pow(mKst,2)*pow(ppp,2)*s12 - 4*mLam*mp*pow(ppp,2)*s12 + 4*mLam*pow(mLamC,2)*mp*s23 - 4*pow(mLamC,3)*mp*s23 + 2*mLam*mLamC*pow(mp,2)*s23 + 6*mLam*mLamC*pow(ppp,2)*s23 - 4*pow(mLamC,2)*pow(ppp,2)*s23 - 2*pow(mp,2)*s12*s23 - 2*pow(ppp,2)*s12*s23 + 4*eprot*(pow(kkk,2)*pow(mKst,2)*(mLam + 2*mLamC) - 2*mLam*pow(mLamC,3)*mp + 2*pow(mLamC,4)*mp - mLam*pow(mLamC,2)*pow(mp,2) - 3*mLam*pow(mLamC,2)*pow(ppp,2) + 2*pow(mLamC,3)*pow(ppp,2) + 2*mLam*mLamC*mp*s12 - 2*pow(mLamC,2)*mp*s12 + mLam*pow(mp,2)*s12 + 3*mLam*pow(ppp,2)*s12 - 2*mLamC*pow(ppp,2)*s12 + pow(mKst,2)*(-4*mLam*pow(mLamC,2) + 4*pow(mLamC,3) + mLam*mLamC*mp - 2*pow(mLamC,2)*mp + 3*mLam*s12 - 3*mLamC*s12 + mp*s12) + mLam*pow(mLamC,2)*s23 - 2*pow(mLamC,3)*s23 - mLam*mLamC*mp*s23 + 2*pow(mLamC,2)*mp*s23 + mLamC*s12*s23 - mp*s12*s23) + 2*pow(eprot,2)*(4*pow(mLamC,4) - 4*pow(mLamC,3)*mp + pow(mKst,2)*(3*mLam*mLamC - 2*pow(mLamC,2) - s12) - 4*pow(mLamC,2)*s12 + 4*mLamC*mp*s12 + 2*pow(mLamC,2)*s23 + s12*s23 + mLam*(-6*pow(mLamC,3) + 4*pow(mLamC,2)*mp + 6*mLamC*s12 - 4*mp*s12 - 3*mLamC*s23)) - 2*epi*(-4*pow(kkk,2)*pow(mKst,2)*mp - 2*pow(mKst,2)*mLam*mLamC*mp + 8*pow(mKst,2)*pow(mLamC,2)*mp + 4*mLam*pow(mLamC,3)*mp - 4*pow(mLamC,4)*mp - pow(mKst,2)*mLam*pow(mp,2) + 6*mLam*pow(mLamC,2)*pow(mp,2) - 3*pow(mKst,2)*mLam*pow(ppp,2) + 3*pow(kkk,2)*mLamC*pow(ppp,2) + 4*pow(mKst,2)*mLamC*pow(ppp,2) + 6*mLam*pow(mLamC,2)*pow(ppp,2) - 4*pow(mLamC,3)*pow(ppp,2) - 3*pow(kkk,2)*mp*pow(ppp,2) + 4*mLam*mLamC*mp*pow(ppp,2) - 2*mLamC*pow(mp,2)*s12 - 2*mLamC*pow(ppp,2)*s12 + 2*pow(eprot,3)*(9*mLam*mLamC - 8*pow(mLamC,2) + s12) + 2*mLam*mLamC*mp*s23 - 4*pow(mLamC,2)*mp*s23 + mLam*pow(mp,2)*s23 + 3*mLam*pow(ppp,2)*s23 - 4*mLamC*pow(ppp,2)*s23 + pow(eprot,2)*(pow(mKst,2)*(3*mLam - 4*mLamC) + 24*pow(mLamC,3) - 20*pow(mLamC,2)*mp - 6*mLamC*s12 + 8*mp*s12 + mLam*(-22*pow(mLamC,2) + 12*mLamC*mp - 3*s23) + 4*mLamC*s23) + 2*eprot*(2*pow(kkk,2)*pow(mKst,2) + 2*mLam*pow(mLamC,3) - 4*pow(mLamC,4) - 8*mLam*pow(mLamC,2)*mp + 12*pow(mLamC,3)*mp - 3*mLam*mLamC*pow(mp,2) - 9*mLam*mLamC*pow(ppp,2) + 8*pow(mLamC,2)*pow(ppp,2) + pow(mKst,2)*(-9*mLam*mLamC + 14*pow(mLamC,2) + mLam*mp - 4*mLamC*mp - 4*s12) + 2*pow(mLamC,2)*s12 - 4*mLamC*mp*s12 + pow(mp,2)*s12 - pow(ppp,2)*s12 + mLam*mLamC*s23 - 4*pow(mLamC,2)*s23 - mLam*mp*s23 + 4*mLamC*mp*s23)) + 4*pow(epi,2)*(2*pow(eprot,3)*(3*mLam - 5*mLamC) + 2*mLam*pow(mLamC,2)*mp - 4*pow(mLamC,3)*mp + 2*mLam*mLamC*pow(mp,2) + 3*mLam*mLamC*pow(ppp,2) - 4*pow(mLamC,2)*pow(ppp,2) + mLam*mp*pow(ppp,2) + pow(mKst,2)*(-(mLam*mp) + 5*mLamC*mp + pow(ppp,2)) - mLamC*mp*s23 - pow(ppp,2)*s23 + pow(eprot,2)*(-pow(mKst,2) - 8*mLam*mLamC + 18*pow(mLamC,2) + 4*mLam*mp - 14*mLamC*mp + s23) - eprot*(pow(mKst,2)*(5*mLam + 2*(-8*mLamC + mp)) + 2*(4*pow(mLamC,3) - 9*pow(mLamC,2)*mp - 5*mLamC*pow(ppp,2) + mLam*(-pow(mLamC,2) + 3*mLamC*mp + pow(mp,2) + 3*pow(ppp,2)) + mLamC*s23 - mp*s23))))*cos(psi) + pow(kkk,2)*pow(ppp,2)*(-5*pow(mKst,2)*mLam*mLamC + 6*pow(mKst,2)*pow(mLamC,2) - pow(mKst,2)*mLam*mp - 2*pow(mKst,2)*mLamC*mp - 4*mLam*pow(mLamC,2)*mp + 4*pow(mLamC,3)*mp - 2*mLam*mLamC*pow(mp,2) - 6*mLam*mLamC*pow(ppp,2) + 4*pow(mLamC,2)*pow(ppp,2) - 4*pow(epi,2)*(pow(eprot,2) - 2*pow(mKst,2) - 3*eprot*mLamC + pow(mLamC,2) + 3*eprot*mp - 2*mLamC*mp - pow(ppp,2)) + 2*pow(mKst,2)*s12 + 2*pow(mp,2)*s12 + 2*pow(ppp,2)*s12 - 4*eprot*(mLamC - mp)*(mLam*mLamC - 2*pow(mLamC,2) + s12) + pow(eprot,2)*(6*mLam*mLamC - 2*(2*pow(mLamC,2) + s12)) - mLam*mLamC*s23 - 2*pow(mLamC,2)*s23 + mLam*mp*s23 + 2*mLamC*mp*s23 + 2*epi*(mLam*pow(mLamC,2) + 2*pow(mLamC,3) + pow(eprot,2)*(-3*mLam + 4*mLamC) + eprot*(mLam - 10*mLamC)*(mLamC - mp) + mLam*mLamC*mp - 6*pow(mLamC,2)*mp + mLam*pow(mp,2) + pow(mKst,2)*(2*mLam - 7*mLamC + mp) + 3*mLam*pow(ppp,2) - 4*mLamC*pow(ppp,2) + mLamC*s23 - mp*s23))*cos(2*psi) - 2*epi*pow(kkk,3)*mLamC*pow(ppp,3)*cos(3*psi) + pow(kkk,3)*mLam*mLamC*pow(ppp,3)*cos(3*psi) + 2*pow(kkk,3)*pow(mLamC,2)*pow(ppp,3)*cos(3*psi) + 2*epi*pow(kkk,3)*mp*pow(ppp,3)*cos(3*psi) - pow(kkk,3)*mLam*mp*pow(ppp,3)*cos(3*psi) - 2*pow(kkk,3)*mLamC*mp*pow(ppp,3)*cos(3*psi)))/(3.*pow(mKst,2)*s12)